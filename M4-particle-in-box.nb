(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    323438,       6139]
NotebookOptionsPosition[    317079,       6057]
NotebookOutlinePosition[    317422,       6072]
CellTagsIndexPosition[    317379,       6069]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Particle", "-", "in", "-", "box", "-", "M4"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Jared", " ", "Frazier"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Description", ":", "\n", "\n", 
    RowBox[{
     RowBox[{
     "Plot", " ", "the", " ", "probability", " ", "density", " ", "functions",
       " ", "for", " ", "the", " ", "time"}], "-", 
     RowBox[{
     "independent", " ", "wave", " ", "function", "\n", "in", " ", "one", " ",
       "and", " ", "two", " ", 
      RowBox[{"dimensions", ".", " ", "Derive"}], " ", "the", " ", 
      "expectation", " ", "of", " ", "position", " ", "and", " ", 
      RowBox[{"momentum", ".", " ", "\n", "Determine"}], " ", "the", " ", 
      "normalization", " ", 
      RowBox[{"constants", "."}]}]}]}], "\n", "\n", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Due", ":", " ", 
    RowBox[{"10", "-", "12", "-", "2020"}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"1", "-", "1"}], " ", "=", 
     RowBox[{">", " ", 
      RowBox[{"Plotting", " ", "1", "D", " ", "PDFs"}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<---------------------------------------------\n\
-----------------Question 1-----------------\n\
---------------------------------------------\>\"", "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"P", 
      RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[Psi]", "n"], 
      RowBox[{"(", "x", ")"}], " ", "for", " ", 
      RowBox[{"n", "[", 
       RowBox[{"1", ",", "3"}], "]"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"waveN1", " ", ":=", " ", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "*", "x"}], "]"}], ")"}], "^", "2"}]}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"waveN2", " ", ":=", " ", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "*", "Pi", "*", "x"}], "]"}], ")"}], "^", "2"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN3", " ", ":=", " ", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", "*", "Pi", "*", "x"}], "]"}], ")"}], "^", "2"}]}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Plot", " ", "these", " ", "wave", " ", "functions", " ", "from", " ", 
       "a"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{
       RowBox[{"L", " ", "where", " ", "L"}], " ", "=", " ", "1"}]}]}], 
    "*)"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<Probability Density Functions For |\!\(\*SubscriptBox[\(\[Psi]\), \
\(n\)]\)(x)\!\(\*SuperscriptBox[\(|\), \(2\)]\) In 1D\>\"", "]"}], "\n", 
   RowBox[{"Show", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Plot", "[", " ", "\n", "\t\t", 
      RowBox[{"waveN1", ",", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<|\!\(\*SubscriptBox[\(\[Psi]\), \(n\)]\)(x)\!\(\*SuperscriptBox[\
\(|\), \(2\)]\) for n = 1,2,3\>\""}], " ", ",", "\n", "\t\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Length x\>\"", ",", " ", 
          "\"\<|\!\(\*SubscriptBox[\(\[Psi]\), \
\(n\)]\)(x)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"Filling", "->", "Axis"}], ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(x) = \
2\!\(\*SuperscriptBox[\(sin\), \(2\)]\)\[Pi]x\>\"", "}"}]}]}], "\n", "\t", 
      "]"}], ",", "\n", "\t", 
     RowBox[{"Plot", "[", "\n", "\t\t", 
      RowBox[{"waveN2", ",", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"Filling", "->", "Axis"}], ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(x) = \
2\!\(\*SuperscriptBox[\(sin\), \(2\)]\)2\[Pi]x\>\"", "}"}]}]}], "\n", "\t", 
      "]"}], ",", "\n", "\t", 
     RowBox[{"Plot", "[", "\n", "\t\t", 
      RowBox[{"waveN3", ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(x) = \
2\!\(\*SuperscriptBox[\(sin\), \(2\)]\)3\[Pi]x\>\"", "}"}]}]}], "\n", "\t", 
      "]"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"1", "-", "2"}], " ", "=", 
     RowBox[{">", " ", 
      RowBox[{"Plotting", " ", "2", "D", " ", "PDFs"}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<Density Functions for \!\(\*SubscriptBox[\(\[Psi]\), \(n\)]\)(x)\!\(\
\*SubscriptBox[\(\[Psi]\), \(n\)]\)(y)\>\"", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "D", " ", "wave", " ", "functions", " ", "for", " ", "n"}],
       "=", "1"}], ",", "2", ",", "3", ","}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"waveN1X", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", "*", "x"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN2X", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "Pi", "*", "x"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN3X", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", "*", "Pi", "*", "x"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN1Y", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", "*", "y"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN2Y", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "Pi", "*", "y"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"waveN3Y", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "Pi", "*", "y"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"2", "D", " ", "system"}], "*)"}], "\n", 
   RowBox[{"DensityPlot", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"waveN1X", "*", "waveN1Y"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(x)\!\(\*SubscriptBox[\(\
\[Psi]\), \(1\)]\)(y) Density Plot\>\""}]}], "\n", "]"}], "\n", 
   RowBox[{"DensityPlot", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"waveN2X", "*", "waveN2Y"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(x)\!\(\*SubscriptBox[\(\
\[Psi]\), \(2\)]\)(y) Density Plot\>\""}]}], "\n", "]"}], "\n", 
   RowBox[{"DensityPlot", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"waveN3X", "*", "waveN3Y"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(x)\!\(\*SubscriptBox[\(\
\[Psi]\), \(3\)]\)(y)Density Plot\>\""}]}], "\n", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   " ", 
   RowBox[{"(*", 
    RowBox[{"2", " ", "=", 
     RowBox[{">", " ", 
      RowBox[{"Expectation", " ", "Derivation"}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<---------------------------------------------\n\
-----------------Question 2-----------------\n\
---------------------------------------------\>\"", "\n", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Derive", " ", "<", "x", ">"}], "*)"}], "\n", 
   RowBox[{"Print", "[", "\"\<Derive <x>\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) Steps 2-3 are the human intuition steps needed before \
Mathematica:\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(2) \!\(\*SuperscriptBox[\(sin\), \
\(2\)]\)(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) =\!\(\*FractionBox[\(1\\\  \
- \\\ cos \((\*FractionBox[\(n\[Pi]x\), \(L\)])\)\), \(2\)]\) in the \
integrand of <x> = \!\(\*FractionBox[\(2\), \
\(L\)]\)\[Integral]\!\(\*SuperscriptBox[\(xsin\), \(2\)]\)(\!\(\*FractionBox[\
\(n\[Pi]x\), \(L\)]\))dx \nfrom the double angle identity\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(3) Then the sum of two integrals can be used to solve for <x> \n\
such that <x> =\!\(\*FractionBox[\(1\), \(L\)]\)[\[Integral]xdx + \
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))dx]\>\"", "]"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<(4) Given steps 2-3, I will use Mathematica to evaluate the \
integrals\n\[Integral]xdx and \[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))dx] separately if 'n' is any positive integer on the interval\nx = 0 \
to x = L\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{"firstIntegral", " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Compute", " ", "both", " ", "integrals", " ", "from", " ", "0", " ", 
      "to", " ", "L"}], "*)"}], "\n", 
    RowBox[{"secondIntegral", " ", "=", " ", 
     RowBox[{"Assuming", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"n", ",", " ", "PositiveIntegers"}], "]"}], ",", "\n", 
       "\t\t\t\t\t", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"n", "*", "Pi", "*", "x"}], "L"], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}]}], "]"}]}], "\n",
       "\t\t\t\t  ", "]"}]}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(5) From mathematica, '\!\(\*FractionBox[\(1\), \(L\)]\) * \>\"", 
     ",", " ", "firstIntegral", ",", " ", "\"\< + \>\"", ",", " ", 
     "secondIntegral", ",", " ", "\n", "\"\<' is <x>.\>\""}], "]"}], "\n", 
   RowBox[{
   "Print", "[", "\"\<(6) <x> = \!\(\*FractionBox[\(L\), \(2\)]\)\>\"", "]"}],
    "\n", 
   RowBox[{"Print", "[", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derive", " ", "<", "px", ">"}], "*)"}], "\n", 
   RowBox[{
   "Print", "[", "\"\<Derive <\!\(\*SubscriptBox[\(p\), \(x\)]\)>\>\"", "]"}],
    "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) Since \!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \(x\)]\) = \
-i\[HBar]\!\(\*FractionBox[\(d\), \(dx\)]\), then <\!\(\*SubscriptBox[\(p\), \
\(x\)]\)> = -i\[HBar]\[Integral]\!\(\*SqrtBox[FractionBox[\(2\), \
\(L\)]]\)sin(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))\!\(\*FractionBox[\(d\), \
\(dx\)]\)\!\(\*SqrtBox[FractionBox[\(2\), \(L\)]]\)sin(\!\(\*FractionBox[\(n\
\[Pi]x\), \(L\)]\))dx\nsimplifies to <\!\(\*SubscriptBox[\(p\), \(x\)]\)> = \
-i\[HBar]\!\(\*FractionBox[\(2  n\[Pi]\), SuperscriptBox[\(L\), \(2\)]]\)\
\[Integral]sin(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))cos(\!\(\*FractionBox[\
\(n\[Pi]x\), \(L\)]\))dx\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{"expectationOfMomentum", " ", "=", " ", 
     RowBox[{"Assuming", " ", "[", " ", 
      RowBox[{"(*", 
       RowBox[{"Compute", " ", "expectation", " ", "of", " ", "momentum"}], 
       "*)"}], "\n", "\t\t\t\t\t\t\t", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"n", ",", " ", "PositiveIntegers"}], "]"}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"n", "*", "Pi", "*", "x"}], "L"], "]"}], "*", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"n", "*", "Pi", "*", "x"}], "L"], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}]}], "]"}]}], "\n",
       "\t\t\t\t\t\t", "]"}]}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(2) Using mathematica to evaluate the second integral from\nstep 1 \
on \nx = 0 to x = L where n is an element of the set of positive integers, \
then \n<\!\(\*SubscriptBox[\(p\), \(x\)]\)> = -i\[HBar]\!\(\*FractionBox[\(2  \
n\[Pi]\), SuperscriptBox[\(L\), \(2\)]]\)\[Integral]sin(\!\(\*FractionBox[\(n\
\[Pi]x\), \(L\)]\))cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) = -i\[HBar]\!\
\(\*FractionBox[\(2  n\[Pi]\), SuperscriptBox[\(L\), \(2\)]]\)*\>\"", ",", 
     " ", "expectationOfMomentum", ",", "\n", 
     "\"\<\\n(3) Therefore, <\!\(\*SubscriptBox[\(p\), \(x\)]\)> = 0\>\""}], 
    "]"}], "\n", 
   RowBox[{"Print", "[", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derive", " ", "<", 
     SuperscriptBox["x", "2"], ">", " ", 
     RowBox[{"for", " ", 
      SubscriptBox[
       SuperscriptBox["\[Sigma]", "2"], "x"]}]}], "*)"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<Derive <\!\(\*SuperscriptBox[\(x\), \(2\)]\)> For \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(2\)], \(x\)]\) \>\"", "]"}],
    "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) \!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\) = \
\!\(\*SqrtBox[SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(2\)], \(x\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[\(x\), \(2\)]\(>\)\(\\\ \)\(-\\\ \
\(\(<\)\(x\)\*SuperscriptBox[\(>\), \(2\)]\)\)\)]\). Therefore, I must derive \
<\!\(\*SuperscriptBox[\(x\), \(2\)]\)> first\nbefore calculating \
\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\).\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(2) <\!\(\*SuperscriptBox[\(x\), \(2\)]\)> = \
\!\(\*FractionBox[\(2\), \(L\)]\)\[Integral]\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(sin\), \(2\)]\)(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))dx, just like with <x> except now \!\(\*SuperscriptBox[\(x\), \(2\)]\
\)\nis in the integrand.\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(3) \!\(\*SuperscriptBox[\(sin\), \
\(2\)]\)(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) = \!\(\*FractionBox[\(1\\\  \
- \\\ cos \((\*FractionBox[\(n\[Pi]x\), \(L\)])\)\), \(2\)]\) so the integral \
in step 2 expands\nto \!\(\*FractionBox[\(1\), \
\(L\)]\)[\[Integral]\!\(\*SuperscriptBox[\(x\), \(2\)]\)dx + \
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))dx]\>\"", "]"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<(4) From step 5 of the derivation of <x>, \
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))dx is zero\nif n is an \
element of the set of positive integers.\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(5) \[Integral]\!\(\*SuperscriptBox[\(x\), \(2\)]\)dx = \>\"", ",", 
     " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], ",", " ", 
     "\"\< so \!\(\*FractionBox[\(1\), \(L\)]\) * \>\"", ",", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}], "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(6) <\!\(\*SuperscriptBox[\(x\), \(2\)]\)> = \
\!\(\*FractionBox[SuperscriptBox[\(L\), \(2\)], \(3\)]\)\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(7) \!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\) = \
\!\(\*SqrtBox[SuperscriptBox[SubscriptBox[\(\[Sigma]\), \(x\)], \(2\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[\(x\), \(2\)]\(>\)\(\\\ \)\(-\\\ \
\(\(<\)\(x\)\*SuperscriptBox[\(>\), \(2\)]\)\)\)]\) = \>\"", ",", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["L", "2"], "3"], " ", "-", " ", 
       FractionBox[
        SuperscriptBox["L", "2"], "4"]}], "]"}]}], "]"}], " ", 
   RowBox[{"(*", 
    SubscriptBox["\[Sigma]", "x"], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derive", " ", "<", 
     SuperscriptBox[
      SubscriptBox["p", "x"], "2"], ">", " ", 
     RowBox[{"for", " ", 
      SubscriptBox[
       SuperscriptBox["\[Sigma]", "2"], 
       SubscriptBox["p", "x"]]}]}], "*)"}], "\n", 
   RowBox[{"Print", "[", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<Derive <\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\)> \
For \!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(2\)], \
SubscriptBox[\(p\), \(x\)]]\)\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) \!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(p\), \(x\)]]\) = \
\!\(\*SqrtBox[SuperscriptBox[SubscriptBox[\(\[Sigma]\), SubscriptBox[\(p\), \
\(x\)]], \(2\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\(>\)\
\(\\\ \)\(-\\\ \(\(<\)\*SubscriptBox[\(p\), \(x\)]\*SuperscriptBox[\(>\), \(2\
\)]\)\)\)]\) and some human intuition is required\nto set-up the proper \
integral, as in previous steps.\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(2) This is the general expression\nfor  \
<\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\)> = \[Integral]\!\(\
\*SqrtBox[FractionBox[\(2\), \(L\)]]\)sin(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))(-i\[HBar]\!\(\*FractionBox[\(d\), \
\(dx\)]\)(-i\[HBar]\!\(\*FractionBox[\(d\), \
\(dx\)]\)\!\(\*SqrtBox[FractionBox[\(2\), \(L\)]]\)sin(\!\(\*FractionBox[\(n\
\[Pi]x\), \(L\)]\))))dx.\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(3) Several constants in the expression can be pulled \nout of the \
integrand: \!\(\*FractionBox[\(\(2\) \*SuperscriptBox[\(i\), \(2\)] \
\*SuperscriptBox[\(\[HBar]\), \(2\)]\(\\\ \)\), \
\(L\)]\)\[Integral]sin(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))\!\(\*FractionBox[SuperscriptBox[\(d\), \(2\)], \
SuperscriptBox[\(dx\), \(2\)]]\)sin(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))dx\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(4) I will evaluate \!\(\*FractionBox[SuperscriptBox[\(d\), \(2\)], \
SuperscriptBox[\(dx\), \(2\)]]\)sin(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) \
in the integrand using Mathematica: \>\"", ",", " ", "\n", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"n", ",", " ", "PositiveIntegers"}], "]"}], ",", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"n", "*", "Pi", "*", "x"}], ")"}], "L"], "]"}], " ", ",", 
         
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
   "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(5) Then step 3 simplifies to -\!\(\*FractionBox[\(\(2\) \
\*SuperscriptBox[\(i\), \(2\)] \*SuperscriptBox[\(\[HBar]\), \(2\)] \
\*SuperscriptBox[\(n\), \(2\)] \*SuperscriptBox[\(\[Pi]\), \(2\)]\(\\\ \)\), \
SuperscriptBox[\(L\), \(3\)]]\)\[Integral]sin(\!\(\*FractionBox[\(n\[Pi]x\), \
\(L\)]\))sin(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))dx, the\nintegrand of \
which was already computed in step 5 of 'Derive <x>'\nby using the double \
angle identity\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(6) Step 5, therefore, simplifies to -\!\(\*FractionBox[\(\(2\) \
\*SuperscriptBox[\(i\), \(2\)] \*SuperscriptBox[\(\[HBar]\), \(2\)] \
\*SuperscriptBox[\(n\), \(2\)] \*SuperscriptBox[\(\[Pi]\), \(2\)]\(\\\ \)\), \
SuperscriptBox[\(L\), \(3\)]]\)[\[Integral]xdx - \
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))], so\nevaluating the \
second integral from x=0 to x=L using Mathematica, \n\
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) = \>\"", ",", " ", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"n", ",", " ", "PositiveIntegers"}], "]"}], ",", "\n", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"n", "*", "Pi", "*", "x"}], ")"}], "L"], "]"}], ",", " ", 
         
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}]}], "]"}]}], 
      "]"}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(7)Then all that's left is -\!\(\*FractionBox[\(\(2\) \
\*SuperscriptBox[\(i\), \(2\)] \*SuperscriptBox[\(\[HBar]\), \(2\)] \
\*SuperscriptBox[\(n\), \(2\)] \*SuperscriptBox[\(\[Pi]\), \(2\)]\(\\\ \)\), \
SuperscriptBox[\(L\), \(3\)]]\)\[Integral]xdx for x=0 to x=L,\nand \
\[Integral]xdx is simply \>\"", ",", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(8) <\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\)> = \>\
\"", ",", "  ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        SuperscriptBox["\[HBar]", "2"], 
        SuperscriptBox["n", "2"], 
        SuperscriptBox["\[Pi]", "2"], " "}], 
       SuperscriptBox["L", "3"]], " ", "*", " ", 
      RowBox[{"Integrate", "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(9) Then \!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(p\), \
\(x\)]]\) = \!\(\*SqrtBox[SuperscriptBox[SubscriptBox[\(\[Sigma]\), \
SubscriptBox[\(p\), \(x\)]], \(2\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\(>\)\
\(\\\ \)\(-\\\ \(\(<\)\*SubscriptBox[\(p\), \(x\)]\*SuperscriptBox[\(>\), \(2\
\)]\)\)\)]\) = \>\"", ",", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", 
         SuperscriptBox["\[HBar]", "2"], 
         SuperscriptBox["n", "2"], 
         SuperscriptBox["Pi", "2"], " "}], 
        SuperscriptBox["L", "3"]], " ", "*", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}], "]"}]}], "]"}],
    "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   
   RowBox[{"(*", 
    RowBox[{"3", " ", "=", 
     RowBox[{">", " ", 
      RowBox[{"Acceptable", " ", "wave", " ", "function"}]}]}], "*)"}], "\n", 
   
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<---------------------------------------------\n\
-----------------Question 3-----------------\n\
---------------------------------------------\>\"", "\n", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Find", " ", "normalization", " ", "constant"}], "*)"}], "\n", 
   RowBox[{"Print", "[", "\"\<Find Normalization Constant 'A'\>\"", "]"}], 
   "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) f(x) is normal if \[Integral]f(x)f(x)dx = 1. Therefore,\nI can \
solve for A from \[Integral]\!\(\*SuperscriptBox[\(A\), \
\(2\)]\)[x(x-L)(x-L)]dx = 1 since 'A' is a constant.\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<(2) \!\(\*SuperscriptBox[\(A\), \(2\)]\)\>\"", " ", ",", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "L"}], ")"}]}], ")"}], "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}]}], "]"}], ",", 
     " ", "\"\< = 1\>\""}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<(3) f(x) is normalized if A = \>\"", ",", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "*", 
             RowBox[{"(", 
              RowBox[{"x", "-", "L"}], ")"}]}], ")"}], "2"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}]}], "]"}], 
        ")"}]}], "]"}]}], "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(4) A = \!\(\*SqrtBox[FractionBox[\(30\), SuperscriptBox[\(L\), \
\(5\)]]]\)\>\"", "]"}], "\n", "\n", 
   RowBox[{"Print", "[", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", " ", "f", 
      RowBox[{"(", "x", ")"}], " ", "with", " ", "exact", " ", "ground", " ", 
      "state", " ", "wave", " ", "function", " ", "assuming", " ", "L"}], " ",
      "=", " ", "1"}], "*)"}], "\n", 
   RowBox[{"Print", "[", "\"\<Plot the PDFs assuming L = 1\>\"", "]"}], "\n", 
   
   RowBox[{
    RowBox[{"L", " ", "=", " ", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"groundStateWaveFunc", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "/", "L"}], "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "*", "x"}], ")"}], "/", "L"}], "]"}]}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"fx", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"30", "/", 
        SuperscriptBox["L", "5"]}], "]"}], "*", "x", "*", 
      RowBox[{"(", 
       RowBox[{"L", "-", "x"}], ")"}]}]}], ";"}], "\n", 
   RowBox[{"Show", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Plot", "[", " ", 
      RowBox[{"(*", 
       RowBox[{"Plot", " ", "fx", " ", "squared"}], "*)"}], "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "fx", ")"}], "^", "2"}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\n", "\t\t", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<PDFs of |f(x)\!\(\*SuperscriptBox[\(|\), \(2\)]\), \
|\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(x)\!\(\*SuperscriptBox[\(|\), \(2\)]\
\), and f(x)\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(x)\>\""}], ",", "\n", 
       "\t\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Length x\>\"", ",", 
          "\"\<|\[Phi](x)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}],
        ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<(f(x)\!\(\*SuperscriptBox[\()\), \(2\)]\) = \
(\!\(\*SqrtBox[FractionBox[\(30\), SuperscriptBox[\(L\), \(5\)]]]\)x(L-x)\!\(\
\*SuperscriptBox[\()\), \(2\)]\)\>\"", "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\n", "\t", "]"}], ",", 
     "\n", "\t", 
     RowBox[{"Plot", "[", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Plot", " ", "the", " ", "ground", " ", "state", " ", "wave", " ", 
        "function", " ", "squared"}], "*)"}], "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "groundStateWaveFunc", ")"}], "^", "2"}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<(\!\(\*SubscriptBox[\(\[Psi]\), \
\(1\)]\)(x)\!\(\*SuperscriptBox[\()\), \(2\)]\) = (\!\(\*SqrtBox[FractionBox[\
\(2\), \(L\)]]\)sin(\!\(\*FractionBox[\(\[Pi]x\), \
\(L\)]\))\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", "}"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", " ", "Bold"}], "}"}]}]}], "\n", "\t", "]"}], 
     ",", "\n", "\t", 
     RowBox[{"Plot", "[", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Plot", " ", "difference", " ", "between", " ", "fx", " ", "and", " ", 
        "ground", " ", "state", " ", "then", " ", "square", " ", "it"}], 
       "*)"}], "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"groundStateWaveFunc", "-", "fx"}], ")"}], "^", "2"}], ",", 
       "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \
\(1\)]\)(x)-f(x)\!\(\*SuperscriptBox[\()\), \(2\)]\) = \
(\!\(\*SqrtBox[FractionBox[\(2\), \(L\)]]\)sin(\!\(\*FractionBox[\(\[Pi]x\), \
\(L\)]\))-(\!\(\*SqrtBox[FractionBox[\(30\), SuperscriptBox[\(L\), \
\(5\)]]]\)x(L-x)\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", "}"}]}], ",", "\n",
        "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}]}], "\n", "\t", "]"}]}],
     "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "calculations", " ", "for", " ", "each", " ", "PDF"}],
     "*)"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<Calculate Probability Of x = 0 To x = \!\(\*FractionBox[\(L\), \
\(3\)]\) For Each PDF |\[Phi](x)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\"", 
    "]"}], "\n", 
   RowBox[{
    RowBox[{"probGroundState", " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"groundStateWaveFunc", "^", "2"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"L", "/", "3"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"probFx", " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"fx", "^", "2"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"L", "/", "3"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"probProduct", " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"groundStateWaveFunc", "-", "fx"}], ")"}], "^", "2"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"L", "/", "3"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(i)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \
FractionBox[\(L\), \(3\)]]\)\>\"", ",", 
     RowBox[{"groundStateWaveFunc", "^", "2"}], ",", " ", "\"\< = \>\"", ",", 
     " ", "probGroundState"}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(ii)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \
FractionBox[\(L\), \(3\)]]\)\>\"", ",", 
     RowBox[{"fx", "^", "2"}], ",", " ", "\"\< = \>\"", ",", " ", "probFx"}], 
    "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<(iii)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), FractionBox[\(L\
\), \(3\)]]\)\>\"", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"groundStateWaveFunc", "-", "fx"}], ")"}], "^", "2"}], ",", 
     " ", "\"\< = \>\"", ",", " ", "probProduct"}], "]"}], "\n", 
   RowBox[{"Print", "[", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   " ", 
   RowBox[{"(*", 
    RowBox[{"4", " ", "=", 
     RowBox[{">", " ", "Superposition"}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\n", 
   
   RowBox[{
   "Print", "[", 
    "\"\<---------------------------------------------\n\
-----------------Question 4-----------------\n\
---------------------------------------------\>\"", "\n", "]"}], "\n", 
   RowBox[{
   "Print", "[", "\"\<Solve for normalization constant A of initial PDF\>\"", 
    "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(1) \!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \
\(L\)]\)\!\(\*SuperscriptBox[\(\[Psi]\[Psi]\), \(*\)]\) = 1, then \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)\!\(\*SubsuperscriptBox[\(\[Integral]\), \
\(0\), \(L\)]\)(\!\(\*SubscriptBox[\(c\), \(1\)]\)\!\(\*SubscriptBox[\(\[Psi]\
\), \(1\)]\)+\!\(\*SubscriptBox[\(c\), \(2\)]\)\!\(\*SubscriptBox[\(\[Psi]\), \
\(2\)]\))(\!\(\*SubscriptBox[\(c\), \
\(1\)]\)\!\(\*SubscriptBox[SuperscriptBox[\(\[Psi]\), \(*\)], \
\(1\)]\)+(\!\(\*SubscriptBox[\(c\), \
\(2\)]\)\!\(\*SubscriptBox[SuperscriptBox[\(\[Psi]\), \(*\)], \(2\)]\))dx = \
1.\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(2) Expanding the integral in step 2, and using the fact that the\n\
dot product of two orthonormal eigenstates is 0,\n\!\(\*SuperscriptBox[\(A\), \
\(2\)]\)[(\!\(\*FractionBox[\(1\), \(4\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\
\)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(L\)]\)\!\(\*SubscriptBox[\
\(\[Psi]\), \(1\)]\)\!\(\*SubscriptBox[SuperscriptBox[\(\[Psi]\), \(*\)], \(1\
\)]\)dx + 0 + 0 + (\!\(\*FractionBox[\(3\), \
\(4\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\)\!\(\*SubsuperscriptBox[\(\
\[Integral]\), \(0\), \(L\)]\)\!\(\*SubscriptBox[\(\[Psi]\), \
\(2\)]\)\!\(\*SubscriptBox[SuperscriptBox[\(\[Psi]\), \(*\)], \(2\)]\)dx] = 1\
\>\"", "]"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<(3) Since \!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(L\)]\)\!\
\(\*SubscriptBox[\(\[Psi]\), \(x\)]\)\!\(\*SubscriptBox[SuperscriptBox[\(\
\[Psi]\), \(*\)], \(x\)]\)dx = 1, then \!\(\*SuperscriptBox[\(A\), \
\(2\)]\)(\!\(\*FractionBox[\(1\), \(16\)]\) +\!\(\*FractionBox[\(9\), \(16\)]\
\)) = 1. \nTherefore, A = \!\(\*SqrtBox[FractionBox[\(16\), \(10\)]]\)= \
\!\(\*FractionBox[\(4\), SqrtBox[\(10\)]]\)\>\"", "]"}], "\n", 
   RowBox[{"Print", "[", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "Initial", " ", "PDFs"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"normConstA", " ", "=", " ", 
     RowBox[{"4", "/", 
      RowBox[{"Sqrt", "[", "10", "]"}]}]}], ";"}], "\n", 
   RowBox[{
   "Print", "[", 
    "\"\<Plot initial PDF Of |\[Psi]\!\(\*SuperscriptBox[\(|\), \(2\)]\) \
Where n=1, m=2, \!\(\*SubscriptBox[\(c\), \(1\)]\)=0.25, \
\!\(\*SubscriptBox[\(c\), \(2\)]\)=0.75, and A = \!\(\*FractionBox[\(4\), \
SqrtBox[\(10\)]]\)\>\"", "]"}], "\n", 
   RowBox[{"Plot", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"normConstA", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.25", "*", "waveN1X"}], "+", 
          RowBox[{"0.75", "*", "waveN2X"}]}], ")"}]}], ")"}], "^", "2"}], ",",
      " ", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "L"}], "}"}], ",", " ", "\n", 
     "\t", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", "\n", "\t", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<|\[Psi](x,t=0)\!\(\*SuperscriptBox[\(|\), \(2\)]\)= \
(A(0.25\!\(\*SqrtBox[FractionBox[\(2\), \
\(L\)]]\)sin(\[Pi]x)+0.75\!\(\*SqrtBox[FractionBox[\(2\), \
\(L\)]]\)sin(2\[Pi]x)\!\(\*SuperscriptBox[\()\), \(2\)]\) vs Length x\>\""}], 
     ",", "\n", "\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Length x\>\"", ",", 
        "\"\<|\[Psi](x,t=0)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], 
       "}"}]}], ",", "\n", "\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.811440414573473*^9, 3.8114406141115*^9}, 
   3.811440752638548*^9, {3.811440783726973*^9, 3.811440944245306*^9}, {
   3.811440990481286*^9, 3.811441121293869*^9}, {3.811441154529819*^9, 
   3.811441187263983*^9}, {3.811441264786634*^9, 3.8114413221004868`*^9}, {
   3.811441382005315*^9, 3.811441441631249*^9}, {3.8114414884186373`*^9, 
   3.811441526411427*^9}, {3.8114415709094877`*^9, 3.811441630800926*^9}, {
   3.8114416716332417`*^9, 3.811441674355173*^9}, {3.811441710024652*^9, 
   3.8114417131928253`*^9}, {3.811443944812984*^9, 3.8114439696529083`*^9}, {
   3.8114441509759912`*^9, 3.8114443041316*^9}, {3.811446628857274*^9, 
   3.8114466292344627`*^9}, {3.811446659920395*^9, 3.811446661814839*^9}, {
   3.8114469002159348`*^9, 3.811446959460602*^9}, {3.811447092169495*^9, 
   3.811447158962083*^9}, {3.811447204098023*^9, 3.8114472108879147`*^9}, {
   3.811447273675007*^9, 3.811447287202829*^9}, {3.811447333639503*^9, 
   3.811447482203336*^9}, {3.811447881254421*^9, 3.811448226948738*^9}, {
   3.81144831751149*^9, 3.8114486938801613`*^9}, 3.811449554097377*^9, {
   3.811449608056931*^9, 3.811449609355425*^9}, {3.811449684340969*^9, 
   3.8114497444900703`*^9}, {3.81144977519038*^9, 3.811449883393897*^9}, {
   3.811449944942079*^9, 3.811450016130783*^9}, {3.811450358863768*^9, 
   3.811450365183929*^9}, {3.81145042517655*^9, 3.8114504499824533`*^9}, {
   3.81145049069701*^9, 3.81145049640368*^9}, {3.811450533397427*^9, 
   3.811450798976308*^9}, {3.811450879934389*^9, 3.811450889481379*^9}, {
   3.8114509452990017`*^9, 3.811451003733408*^9}, {3.8114510402688704`*^9, 
   3.8114511534309683`*^9}, {3.811451203679048*^9, 3.811451298753376*^9}, {
   3.8114514879191628`*^9, 3.8114516488449574`*^9}, {3.811451780382044*^9, 
   3.811451814656108*^9}, {3.811451852416891*^9, 3.811451891668705*^9}, {
   3.811451959438036*^9, 3.8114519627576437`*^9}, {3.811452251514717*^9, 
   3.811452260772944*^9}, {3.811452309661009*^9, 3.8114525490444937`*^9}, {
   3.811457812955873*^9, 3.811457844693139*^9}, {3.811458286779131*^9, 
   3.811458534125524*^9}, {3.811458575252206*^9, 3.811458787181863*^9}, {
   3.811458858478551*^9, 3.8114588908419867`*^9}, {3.811458962373878*^9, 
   3.8114589769417753`*^9}, {3.811459007009653*^9, 3.811459093029089*^9}, {
   3.811459123119603*^9, 3.811459174140243*^9}, {3.811459852899045*^9, 
   3.811459889576315*^9}, {3.811459936939724*^9, 3.811459958753737*^9}, {
   3.811497390105826*^9, 3.8114973990965443`*^9}, {3.8114974409706287`*^9, 
   3.811497608221423*^9}, {3.811497639602516*^9, 3.811497653357368*^9}, {
   3.811497705867874*^9, 3.811497745168543*^9}, {3.811497845176036*^9, 
   3.811497859227306*^9}, {3.811497920839361*^9, 3.81149795322165*^9}, {
   3.811499076127213*^9, 3.811499176625228*^9}, {3.811499245616555*^9, 
   3.811499274826208*^9}, {3.811499517289369*^9, 3.8114996876037703`*^9}, {
   3.811499724165333*^9, 3.8114999178464613`*^9}, {3.811500025057764*^9, 
   3.811500031671052*^9}, {3.8115000669907*^9, 3.811500085479733*^9}, {
   3.8115001433056583`*^9, 3.811500276618553*^9}, {3.8115005066198387`*^9, 
   3.811500537321863*^9}, {3.811500632916512*^9, 3.811500924931923*^9}, {
   3.811510685292481*^9, 3.8115106926624537`*^9}, {3.811510798596109*^9, 
   3.811510840084861*^9}, 3.8115111792889442`*^9, {3.811511253071686*^9, 
   3.8115112936562*^9}, {3.811511333983159*^9, 3.811511431976157*^9}, {
   3.811512002891779*^9, 3.81151217610832*^9}, {3.811512357085463*^9, 
   3.811512434269408*^9}, {3.8115127148518677`*^9, 3.811512718601963*^9}, {
   3.811513073273305*^9, 3.8115130795696707`*^9}, {3.811513247599758*^9, 
   3.811513296325993*^9}, 3.811513479483522*^9, {3.811513563831053*^9, 
   3.8115136811946907`*^9}, {3.8115139649186583`*^9, 
   3.8115140339609537`*^9}, {3.811514122339148*^9, 3.811514191017795*^9}, {
   3.8115142225346317`*^9, 3.811514233080596*^9}, {3.8115143225867357`*^9, 
   3.811514342456308*^9}, {3.8115144239616747`*^9, 3.8115144248223743`*^9}, {
   3.8115144623802223`*^9, 3.811514528734333*^9}, {3.811514606111586*^9, 
   3.811514757838234*^9}, {3.811515158311315*^9, 3.8115152449500837`*^9}, {
   3.8115153178317547`*^9, 3.811515367356571*^9}, {3.8115154234927597`*^9, 
   3.811515449550702*^9}, {3.811515602065774*^9, 3.81151560349932*^9}, {
   3.81151570836721*^9, 3.811515745309229*^9}, 3.811516850436656*^9, {
   3.811517444979673*^9, 3.8115174964861193`*^9}, {3.811518329355804*^9, 
   3.8115183854521933`*^9}, {3.8115184469734287`*^9, 3.811518496189328*^9}, {
   3.811518528293746*^9, 3.811518561043138*^9}, {3.811518612036108*^9, 
   3.811518699001184*^9}, {3.8115187423986998`*^9, 3.811518809987801*^9}, {
   3.811518843248169*^9, 3.8115189165641327`*^9}, {3.811518984631702*^9, 
   3.811519025866928*^9}, {3.8115269812441607`*^9, 3.811527136231123*^9}, {
   3.811527170233436*^9, 3.8115273699922037`*^9}, {3.8115274019043903`*^9, 
   3.8115274203227577`*^9}, {3.811527450868153*^9, 3.811527489987673*^9}, {
   3.8115275470148067`*^9, 3.81152759419785*^9}, {3.811527757825117*^9, 
   3.811527803391193*^9}, {3.8115278569452057`*^9, 3.811527862861506*^9}, {
   3.811527917311145*^9, 3.8115279995011387`*^9}, {3.81152878317666*^9, 
   3.811528847921976*^9}, {3.811528882692721*^9, 3.811528923364525*^9}, {
   3.8115289618808928`*^9, 3.81152896512817*^9}, {3.811529098957501*^9, 
   3.81152911236893*^9}, {3.8115292029259567`*^9, 3.811529207969879*^9}, {
   3.8115292497541227`*^9, 3.8115292525965557`*^9}, {3.811529295445393*^9, 
   3.811529324400474*^9}, {3.811529382913948*^9, 3.811529487475237*^9}, {
   3.811529865510869*^9, 3.8115300596066*^9}, {3.811530091827712*^9, 
   3.811530177493731*^9}, {3.8115302203807163`*^9, 3.8115302859817953`*^9}, 
   3.8115304041340857`*^9, {3.8115329775982237`*^9, 3.811532981030573*^9}, {
   3.8115332947802067`*^9, 3.8115333204707203`*^9}, {3.811533888424021*^9, 
   3.8115339368318777`*^9}, {3.81153401690208*^9, 3.811534043112485*^9}, {
   3.811534139591419*^9, 3.811534335286764*^9}, {3.811534377078031*^9, 
   3.8115343771916637`*^9}, {3.811543369547182*^9, 3.811543387802621*^9}, {
   3.811543497177827*^9, 3.811543500000389*^9}, {3.811543531104245*^9, 
   3.811543558077528*^9}, {3.811543593994397*^9, 3.811543652829817*^9}, {
   3.811543684627348*^9, 3.8115438492569437`*^9}, {3.8115440172636557`*^9, 
   3.811544115096223*^9}, {3.811544156086834*^9, 3.8115443267292023`*^9}, {
   3.8115443930309553`*^9, 3.8115448636439342`*^9}, {3.811544917556093*^9, 
   3.811544927725911*^9}, {3.811545027860989*^9, 3.811545084679817*^9}, {
   3.8115451188741007`*^9, 3.811545207474082*^9}, {3.811545456360694*^9, 
   3.811545480347973*^9}, {3.811601943416181*^9, 3.811602049382617*^9}, {
   3.8116020804018087`*^9, 3.8116020863628607`*^9}, {3.811602131990429*^9, 
   3.811602141877069*^9}, {3.811602178653597*^9, 3.811602213938841*^9}, {
   3.811602388869533*^9, 3.811602551010929*^9}, {3.811602597920822*^9, 
   3.811602780856097*^9}, {3.811602856999591*^9, 3.811602860040069*^9}, {
   3.848745173057472*^9, 3.8487452210413322`*^9}, {3.848745643026867*^9, 
   3.8487456985536413`*^9}, {3.8487460104299536`*^9, 
   3.848746035110532*^9}},ExpressionUUID->"fb224d9c-cead-40b0-b6e4-\
0294e31b1a28"],

Cell[CellGroupData[{

Cell[BoxData["\<\"---------------------------------------------\\n------------\
-----Question \
1-----------------\\n---------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452299326954`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"94527a9b-9495-40bb-8a8b-153d26d4cedf"],

Cell[BoxData["\<\"Probability Density Functions For \
|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(n\\)]\\)(x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\) In 1D\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452299326954`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"4645af19-fc70-4444-aadd-056d3bccb9d8"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1: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
8f+f/7tv/T/5/wF5yoiX
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1HWU1FUYBuBdSlBgVwFpJaRjqQXpJReUllZhWZEQdpeUUkoRDLC7JVS6
TLBIAcGWbuwAE2ye7+wfz3nf+82c38zce89UzMzplZ0nISEhkTsTc3NeYm5v
oM+VtZjCYetZsjyjeNp6jqzCeD60vlUmcX28x7qGnMRevaS8kXv1ijKH9+Kz
ZXfS9QOU0UfwqL6DQno/rtM/pZg+hJn6Wn4hzbq+fIo9FI33c5O+gHcTcn9k
Nzqqj/A+Ba37cq0+gzX8TGuzenIk83mH/+lq3kEOZDqrOUMr8xQ5gnt4m//o
Yt5eDoi9YRWnaWleV7ajP7ewkp9o4bU6sja1qBn7SHWqUZUqXEFlKsV+UoHL
aUs/prGCH2numZfJNvRlKsv5gWZxpnI4d/MW/3K1eZrswxSW8T1NzcvJYdzF
Rv7hKvPWsjeTWcp3XGleVj7JborEfsddiDvHBv6ms1kr+TDbucC6D9fon3CJ
nhH3SX+Zb2liXUYeolycN0/E3shxfKAXlgMZGnsob+aLOG95acyZZ32brEA2
b8b+yb9kJ9lS3iFrMpn91jNlaYbzkPXtsjJj2RZnKgvQm15xdnIiH+sXy8Hx
XeLMZBYv6d/QOJ4rD1JWH8nj+i4u0gdwg/45JaIzV3+DP0m3biEfZCv5Yw/p
qU/kRb4m1ayUzIzfxuuco6N5c/kAW8gX358e+gSW8BWNzErKIczhNc7SwbyZ
7M54FvMlDWO/ZUbsFa/yB+3Nm8pujGMRp2hgXiLuD10Zy0JOUt9rxWWxuBex
nySTRNG4Y3HusV9cSCEKxp2iQNwbujCGFzhBPc/MH/sfd58cnuc4KV7LJwfH
PeEVfqedeWrcfbJ5jmPUNc8rBzGb9fxGW/NG8n42kzfOhc56Fs9ylDpm8b/8
GDvjN1j3j/9V/TOK65nM0tfxK22sG8p9lNKHcZ9eSY5hk54nzpFOelU5gY/0
6TKZQYyO7xz/F9F5xnqqPCJry/NNUac3
             "]]}]}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1:eJwl1Xe4DnQUB/Br7723a+9VhEK2ZF4UIdmVcTPL3jIatFSUrSiRlVKhomxa
FIXSNCuUQj7n8cfn/Z5z3vu84/c7z3sTeyUnDU6RkJDwuIfISh6+l6Plq3Kg
LMpkBurvl9kZz0H9cFmGFup2MiUfqR+RJZij7ifzc0R9Cw3Vf8n1TKKXPjdf
qrvTWZ2R3eoXSUll/XG5kEHcRXuzVHysnsutNNJflBuYHJ+XVFQxPyEXMZiW
1KSx+SW5kSn0IDVVzU/KxSRzN7VIQzXP/SCXxPekFbeRlnSkJwMZyURmspCV
bGQnBznJRW6qe80f5VKG0Jra5KGG507JZQylDXVoYn5ZbmIqD5A3ztj8J7mc
YbSlLk3N/5bvMI2e5ItzM/9Zroj7jHskySw1n6if4Xaa6f+Rm5ke90b+OEfz
X+RrjIh7oYNZGnaon+UOmuuvyHdj3+itz8NXUdNFnYk96pd4SF2Io+oCcf7q
X+XrsQPqYoyMO5M5OBTvL8uSpO4o0zKWnXGusiRTeU7fXxZgIt/oH5MVmE49
fQv5rxwj34u9kcWZwgx9H5mXCXytHynL0Ud9n8zM3rgzWYqX1Q/LwhxTF4y9
Uf8mV/Jo3KE+J5/HGdJJnY5P1c9TP3Zf/5/cwkz60tUsC/vU8ykU+6P/Xa6K
7xbnQYPYffOr8n1m0Y/CsVPmp+UbjIr35s7YffNr8gNmx7lRJHbK/Ix8k9Hc
Q0OKxr547qxcHefHvTSiGMVJpAQlKUVpylCWcpSnAhWpROXYIa95Tr7FWDrT
mCrU89x5uYZxsUs0oZX5dfkhT/AgVeMczS/ItYyP+6Iprc3/l1t5MnaQanFu
5n/It5kQ5x3f1yw9n6lfoBlt4keUbeKpuG+66bOyX72A6nGu+j/lOibSU5+L
L+Lv47zUGdilnhefW12Qb9XNaRu/12xXJ8tEno5dkPk4HPskyzNA3V1mYxwH
9MNkaabxin6ALMIkvov7lxVT3Py/UEN/A3KqpiA=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$24092#1"]& ]}}], {}, {}}, {
      GraphicsComplexBox[CompressedData["
1:eJw1mnk01O///pFKmyIKkbdClBQpJbkUKZTIFpWdpLKrFFlCkqUFkT3aLJEt
W9mzM4iUZcY6Y52o7GZ+r885v+/8MXPuc5+5576fr+d9XY/rnBGxcLhozcbC
wpJCvP3vU8Oa1lo2qq9Uf/7zy2MPd53w4cjZ85g/HB+4EorVGfG4ZJSU+Xs6
Bf0RO1yVnpRhA9PnypmdmbB/+HlL7bdWiOlM0Sqf5CJUeurIz/5e3Gk+hqi/
hWgPP+n3M2UE23O5+lhZS3Hh5v5D8Q5TyB9QaWxRrEBsLYtsiMcfVNjF7TCa
qEKeSMN0mMMc/omf2Jxxqwbmg5UhFz4sgm0hbcsOsXq4P/ZGya0VHGGa5et+
bISGbenluxJMNPrJNX/b24JxLX4z7RkmhJ+OL3yYIkEj++rfp8VMjM+R+zoO
tqHen6ekO4iBlLHies7QduxKOd628dQyOIXe0YeGvuN2Sd2RCckFBF/Ps0kU
7USpcrFRWO4/zCqnDdl6/UD6XtEfF19Mw1W2KndbZRdIJxXM6xXGQf5Y9aRV
5BfsPievbVsZwJLd9xjJe91w4igpo8X/wL6Taxk2xT0o9MkxeeBWhzOvRa59
2t4HHf+rfiNfP+GOkOmu/itkBESOdC+zekNqQn/Dj/MU7OpZ6JLd64mtm39z
VC1SkOjjKiuflw320pjM3bH9OLzhMMuVL7W4IVf8c53mAC447WjkUOpCmrpF
4tfZAfBKjHhN6A/i37jAlpHIQRh1nO6b7xlDnu6ZVeGqQ1BYJ2TI93EaXmf9
E3JHhmAa6Cfo9eQfRHo1upL9h7G2W6GSwbIABXm/cH7ZEWy5MygiIr6MKztb
FljbR2Bx/VqlgC4D/+pDBhx9qJAb93+2KYeJKHYT14uiNNx6k9ycssDE1r68
12xVNIQ8enLoxFkmVnv66B1zGsX3S2yXbbxXwPLBJHOAewxfZ66JH1pahPOr
zBDuijGYezzuu+Q1hy/7Ajm47MeRKmyQpR7yB1wazlK+nBO46ZK3L1udjp79
pHb3kgmYmW6Kt6GMICseokMmk+heZb61+yAZVzOPcAkxJlEaeXWzAaUN3v5J
Pj2pU3A7SOI9KFKODJpQDOc5Os57a53NNk/GS+EN/5hMOnbTW6L+dx8SeS8E
BPH7QWt/qXGIoBeieu+p5BH3wtezWGxcMxuy6VxrBDlS0fz26NaPqIP++5cN
LpuyEaCrXt4U8AM9Z2/xrtr/DWc9nFZv2bmA5bC/m63qajHM991RdM8yBD0C
LD9fb8A7oy2ZydcYYK3QOBUy0YRGPs+oY2lMnBr1zVpzioS4tQcKSxeJ+lVZ
T5SGteJQmUHsojITZ6eb9JzJbbjW7X3IxX8FPx/K9Lof+47dl3a4dTct4ryK
dFqFXwfknNQfJXvOYTK48cVK0y9EWNx9lOTbh62dk+dqBXogkF1YcKK9FYVO
4bLB13uROC3VdW9fGcimZarqRX2o9pJqy6tLAO2ef+yZZTJSGpz/7NvaqpS4
sivofAoFN74MR2/Yn4iN1NM9Lpr9OMFrn8YuU4YC97SqyD/9CD9c3XJhqBUb
SjlPDCUOoO8xfX6vFBkkbtpxqSPD0LF+tnOf3hykg67l93UPY/fUGdWbaYto
SJWsCfEdgZ6UTVikwQreu0rbH9tLRTB/7JliMSa+Ud3S+tuocCwQjZSZZcJg
+vGTva40kDYaFO8uZSI4I2YpTmAUgjy667b6M8C29TcrZ8UoUkLKHm4wWEah
yKP4e3ZjKPha7VV3cQFr9hS/8v44ieGTZNLXL12wF7hZ56E3hefNMxnnQ+qx
7bNpqNvSFJJvj+2vl8rFLj+es2vf0vG7+NxzW/eH6D3wSCWE3xXl/9aYS4qa
YuOfyMPCwdEQLp/Zvfj3Pap9fxqv8XyHgVaxhb+ZVZjUnSjRbM7C5PWan4vP
vqPFyJ/vY3A1xvnjJts05nG3OyoscEctvKzcc4vslxCmwK9wvaYeN/xtn0ZP
ryCWou/heL4JE4vON+ScmHi/L2673Y8WGPk4M7yZTHCnSvyRQyuSCkbO/fJn
4tXfTn7RwDb0SbNvOLaFAaXPs7pVg+2QLJabNQxdgnSWXVO7XAeCYkf4Ggzn
MRJXG0a98wtF1ykXlbf349F/5n/v1neD3tcutSblO5x/no9y5+6FFNuwm/SL
KmxlndZfse2DeVmY6PjX9zh4ztk0PJ0MYRWBzfsrzTDiWqLB7U4BI/F1O2vs
M2xZejWzY3c/EhtjXtwVKIRJ7G6F3pp+KM+cCn21vhnFC1Yb5twGwKpmyjKR
2I33Gfm3HDmHce86C3XYeRbvDxmdKc8i9Orlf6uLuhfANt2ZoWs8Am91qmN4
1TJ86xg5cYwR6N6/3E6uYsDkJ+sZyVQq9GW39wT1MDG3+MdL6RwNSauO3GYf
YoJULXFBm07DtJr4q210Bthrj6YlR4/ieEBbXOQ0oX/DM28/Ko1hclwyp09q
Ed0WnqbZAZNwO2SXtXWkGyNWOpPnJKcwrSAYs2G6BZrxLByS7VMY6PzH51VT
BNsj0dPr3em4zkO54tobAZ0Xv+y0xENxdq2c67+7z8Btlfn+zdHXML/rIX94
fyHiO9Q/ybxIxz/hnXq9h5tBk9fnvtT0DW865bru0Rbgpar9FHfqEFz3ZKGo
dRkfvvwJXr2xEcqaRc+tWxiwSQZH6pNmbN32JVq7k4ksRXn9S1EkZLzMG+Yi
zjvf+3pYg9KKO++eiB+eZGB2siqs7Eg7Eg2vOUuOLyPhyb0322/0QFhSMiTS
pBks67sb48t6ob9krNoRUIC0r2GHIjaQIZdjI975+xlIeo03V8Qo2Bc7tY+L
dBnGAY/rAlsoyMyszBAo+gCO9t/VDS79qPNcvmN5qgq5FDex5TUjGLk0w7bf
YQnhVh6UmtQR/HtBlovuXkGzsIlEhz4Vlmbrjyi5MXFgdnTzqyUq3HQSdtGI
/s6lCr/cFkuDQyKTTfwJoYcRnO/HT4/iWEzMkdT1DMiOz3dodU5i9zrZcnJR
B+ZaAt6ke01h8FHDX6+Yagy0fOWp2E2H4zrzb7em09HTGha/qp0Oqbud41e9
LGFoNfflOb8VzN+suAuLA99WUqS/t0XC/7OOY/afZHDan/C/L/8Wvl/OF/8N
q0Dhh8i8z9JZuJtv+5p1TzvOWnC9eqhYDcOG3dvE+uZwhPVGy6uqGuhrz796
uWkJtdEWYqdu18N/UdLl6qcVjDpc5h9YacS9c05KH7SYUOiiOfP5tMCX79Md
8SUm+ISCbtO3tUJVOcEi/jXhD7cvL3tcIfhGaZk96gID09pGYaMF7eg7u1Ow
a3QJ8SOBJj0bO2BrMn92tHweFm+/hfSc+4WNU29vRXIMoLxa4KzO624MRDGe
mQt2Qitkr+bvkR6Mhbv0XPr3DRk6j00Mlfuw6DFeYT6Qge+5tLIiPzLeZV4R
ParpjMcH16W5WlKgwDhYmV/3CNz+1St0zn6o+6ZYiTbk4VMG2ZUlux9/vG5k
eOo3YOv2p87eZgNojwnPkxn7CZ6luIDni0Pg/5HEM8r8ByuOtjDZmGHYXlzx
/OiwgJ3h+5OOqI0gOm8hjHx7GfQ/I50ttBH4DA43cocysLethqcpgoqnGV6k
qjomapkS984epWHV2OzFr7+ZmNGh3/3wkwavtWKqjUJM+O3q9bL3H4WMheNy
vMIKpGsk0molxjC6L1vpacQivnn3nWxwnoR3Xe1L40e92LVelZm7dQopy56v
BqxbMcLVWsVWOoWvz9L4ja9/RVDY5W/BFkT/nJ47N1kQh7vfw+9OCD/GNxfV
G73qgXC4fkSMpScRKs5PrDbE5IFWltH99nwadm4pLVf52AAL5f4X+z2/wfOy
496bfgtQsttF0vmvDsaPE+OOPFjGgOCJu31FDbjz3f2mXhwDubKn3+xQbEbP
E7vqNxVMLHD3+h64RcLOqphTb6aZYGizX19d0IpvGZ7tdD4mEhzUnfk3tKOa
l0NCjjjvz4NyC/RTPfj94U+6130Ser589uKN6AUXU41ho1WC05slFOkDfVj6
+UhxzCwKux4/itvCTYFL6OZyTcljWDnZKTleSIH6Tpllh48pWH91R2uCaT8O
NG6MVJKqgFPe1K1b08NYJtV3dXEuIWtte3tq5AjG76QfLXu1guMaapprlalY
4Bqcz7jAxOJUZu8JKhVXw3/3bFhhwn9C79l/gTREj6zkr37HhJ1IR6vqwVHQ
1zO4BtUZEFxnXHCtYhKBEdqfneR/QNbN/TOP3RSkC072Nq6uhYdKWGvMZjq4
cjiKQw5/AnPvRRf/EjqCv93c6TnhhtAMbgkd8Qd40ORzPcTXCRdpgYp2p2NR
9S/WP8TnIwy6W7Se8jXgB7tiqpk0A1o62mRGbBNOHvv4juspE09KJfp6t5FQ
U/6l2ITQn43yNQ73rhHcJPmuUNOaiUgxp2E2pV6sF5O5mHGhAu5Zl84nP+vD
bbaRe1k8KQgeXFq59Z2MS0W6pXGap6BS6DCWGUpB24a/Klb2UeBN2PbsBg8V
5QfMxZznGHhOOe7u/5WKmAcq7JfHmRCf/eovZ0b4015VtXvtTHw8ZiE2xz6K
5uxtNpIlDGTtPah5gToFhxN+YdlXP+N0b6fg4zA6zu166/TFJhS8kk+lL0U+
Q8ud8eTx8pdwNElNkrraiOilTQX1Kwzw8yjcONrdjJvHGqwPjzBha/Nsj08l
CQ7/Ljqta2OCy35u73E5Mi5qn1faMxuIB/9xKY4do2Cct59bY48j8usVr4sP
U1BH2yuZqJUJi39uq5NvUIFLeifMI5mwWtl9anYzDYN8RlnVDCaGBsZiN2bR
cH//5IUnNwj9vjJlSJOnY6eDO+/A5DsU3W2q8xmlQ6NvqnHQWwWaTT+y4/j1
cPFKVnGRuDBEV0mlSd+OgGv1lk2l75KQY+kgkB/+BqFFu3dJBJVD6cMPy+4v
mejRdA995NYGf5sfxvY81RjcLlvF+24O23j06Luja5Cx8N6hs3sR1uprYz6e
r0flh27X+bAVPJXvowp0NuLXnPUcuyITDz+GJtL1W3DXpf+LxhwTsZ0KBY1s
rbCx3qbyPJNJ8GHcrQ9qbfh5Rsjs6y0G6uPW7/dIbkfj3Irj1W3L6GTle0eZ
/44D654VH5idR2Jq9UZD+V9ILBBqKPYdgEnUnNOJUCI/+il7Wfd0QpEalbKv
tQf0+GLnzzK1WHTvsGCX6oOxatTRl9pZEB9Nnm5yJKMtPG5xMOMujEMPdL+5
RIEvB9sUO80X3PXGq36x92NC6Kzn36O5MM4/wc39rh/l+o4a5avrUfpGTLxa
fwA6QY0Rldw/UZ/E9SL59xBUz9mzU6r/ocKZU+7G02FoXf1w/MPRBaQPdwlI
KBK5flBcj6K1DPF1l2m03hFU5bqI7HBi4Glz6lL8EyrU05+zUb8ycdBX5c55
aRqGzyeJpv9jgi2qbVNnMw1d3w4KhB5iourCgTHd+6Oo3Sc7OH51BdsLVDI6
hMZgXbvborp2EcWbN+f8sJ3Ef07zdP7LfSi7coJjlGMKtnwUTm+RNuRoHkum
506h8qMCHu4pg2BJSdZ5QzrWpDUEHtuYhI3/nLyKYwNw+76WpcnHh9g54W6Z
QeQUv8FT99aP5yAkn+zYn5oKyRiZ8GaXeiSovtPj0/8Gq8P9JwJ0FiDkueH3
r7+16NvPViykuwyvxv5JjecNePCCQ4buy4DxYo2LHk8zzJS2BVz7zMRORiZ/
jCEJ9do8DeVEHvFdn5c6kNwK118XO2/sZ8I168ng6X9t4D4p9FDLbAW3V3Ht
7pHuQWMR65sZsVbUbxf/qe1F8LS1UV6ixlc8l3dVjm3uw7qrvqL6szHQ3D18
WICDAmveoihD8KA5YdlIMJMC2pb2RtMrr7HhdVbnY/1+zGxt1FPcVw6S8D7u
tyPD2DudMviwdxFKRg/OxwaPIPNZviuP+wqcTYuu/HeYCjO/zUeUjzNhNv68
anMvFXv/nbHaSeTNKXuHULEHNDQqS+iEEPn+/rUCGyexUVxkv6O4QuRVrqgg
SdeCSUzasKfYLPwAqca57KzpFBgJKf+mT9dB3XMuM3A1HSfDPwWMfcjGU8Oc
q2qf6Aj9ohZa9t0T+VONh+nC7phIt3cX0bVF5uTmwiraKzSIjnXMfEjDTJBr
1TK9Hh5jHLk3ibzyj689Q96tCR8mY07x+xA8m7rkqs5Kgv1fBU8mocdhv+98
MtRtRe3s2Z8bbhN+70VWUpLoxVLqgYOhtyrxrStFR9uzD2utONe9MH6Lvu2f
pX3KyIhdfDnYf1MXPNsjBfofUuDnsu8arT8c53KDXvuto6JI8s/JT30MzPfs
NDPMJXi0tmjSieDn0Ls/fY8Z0MCqFCN9jMgTpV6ni3Yv0qC21opbvJOBB1ZR
koq9UziUfN3w8YZCdK47ulbDj46/e1ycBSyew7SQ8alU7yky1UY/jT4Ix0bO
C9uj5RoRq7zRkpPKQFl3yTGnnGY03m9kK+kj8qyO1deJDBKif7Guju1mwiRS
5QBNmIxHMF0S3x+Kd0X23/8coGCvdbAKzx4bBEpYRhv+ooDzLNt5Y5d0RK0f
21ZiRoWR5QDzagAT9QtrJGtX08BWOVXeSdTvnPXqV1xvaQiIM4houc8Eb6TB
kY79dHw74GXeYpYKzTfSuaf66MixzuxQ+60PjgHf1wbi9jC/Wpu04KeDaVaV
0yfTWyByTeXsIOHnEZY/5bj3teJEmL1QfjhxH7z3P30XRfgfK/ozC66joG3g
noo9BRvc/lvpPBaCqo6h/UsJVKxZn3L+LeFvZp6cniqnaKjce/lN9xjBOxaL
3Q236NisEx8q8SYaQzmfnYSSn4Bh5srmYRaCTTcqOgcsm/GrclXan0Ymvu9Z
P1HpSwK55PF9O8I/50e65U/N9SE/grHv47oILExJrl4rSIGl/44LX85ogf1w
27EpDSo6m9/zr7JkInymcfbGNJEXN+q3LhB+JWinEL7jOQ2Ps7QyQqKZsGf8
DqyqoUPIarfwKTd7yB2RCjGK9MGQogdPRvsd2HzXP+MsRSL4WLk6nqiHQqZy
kzGNDINtoux/QsQgNXTpeU4tFSqLyp9OE/z21SUl8IAdDaqugSq1BM/mZrnJ
1r6io0NnTwDjdSCcz32OZbK1INPvi3bJBBOq978+5f1JQu4rv07jGkJPT6eJ
h54l47DQGRGWE37QD8hJpqhQcCC533ZW+jYYLCcviwrQoHtxjJG7zITEuZvk
sr90bC9/N6rvsxuHEqJic/hVoUl5uiS4h6nU5u8w2l0TjmdTvmfYwxIRYMJh
ravyBswH5ImOdeUQ/S5lxmWfSdT53PcWoTak2CoUW7JUY/ul+27mT+aIPjrr
ZfuwBr5cVz3SKhYhl/Szw+pYPfwkbwj/e7ACyxjhC/IVjUhu7ky6LMvE+2hz
+cvKLXi4ydRk+i/R34e2GhXPk/Dg16fzWXlMeP9Qelt6vA0vJHou2HswIK86
eL86qh1FJl+3aEstwznMtGFg6jusHm+1E96ygDKp0+fCpX6hgf+egWTZANJZ
RwIO+XXDdPuDacMTPyDHo62j/q0H6+Qfnctsq8V/oUtDv0T6cHPztPjg6k/Q
esga9MOGjFXVaeqBCh5Q+XLKRUmXApNA5bOf0r3x/KbYmhYm0T/KbWxqbjnI
LJqgvErqR19Wp+prszrw3vrtdU17AEbSk12c77sg6qbJnz4+BFmu9XpF7/9h
5p1UwNonw1jXKWpLE1wgOPvjj//kR/CLYvY8SmEZ5Vt5ndy6RsD7p33kuAUD
FecE6Y8CqDjmMZ/NX0jwVCXp3wVJGnS6SnfVEDyy/rjqpZt1NJTsVdvGoUTM
21xKULs9Co1dh8JUHFYQfFBH+grfGFYsa+x4BxZxxPDdeK/lJF4aRmwtru4D
55qijQ9XTSEvKLXNz7sNr2xvcY9kTiGkpLTGK7kMVhcnxT7q0CEis+HvSdnX
MPCnsO2+7I+fmtM3+0N9MGYsv5ojIwFqt7iLr/DnwOzT3eIHRqmYzLAJnOmq
w1e19XmbTn7DnvVPFnrkFxC8hsVbmFwLoUiZacUTy9ASzZVgfdCA1eH/7bRx
Y0DaZF23I0szHi42uNt/IvTehX+YdI4E7lKzV0PzRP9fC9FsjW7FWwvzv9ry
TPSRpASvjBH+eim7mOm8gqqbTPk20R7czsxuO+HRigrVXn971170SewRqNcq
RYHmqwrnqj4gT/eeRlcczH5vZRNeRcFlIV5duXU0pc/Nm2dyP1BwKOBa5mXl
JASr3v/5QLsfGxPOHVbLKANTT93qVP8w5sZuyzytWgQ7m976iEcjaJoaSaFf
W8EmO9fh9ANUPCsQCE48yMSL6+wF8z+o+JBkNHSG2P+urOWNEu40nIrN+3yb
eJ5+6/d+WvvfKKRm+1ve32YgmLzL4l7OJPiilzaeudwFYSd61YDRFIxWntsV
0epw8NU+YS8WOvaQ2V2fXM/Bz8nBtrdpdDzIVxwI3ukDjc2pil9jb+NYbNcZ
11xLmDjqzjkpvEJMvyevsGYqygbUmNnd9YgueTu6k5WBWg8eXj3zJhx1uGug
6k7sR7nemzHRgg0m9WJDhD9on9e+qKbeij5pi0tcDwgeSI8cvyzUi7Vha7Kv
MSsxMVHfLu7Shx0RqsUzge+wNpunJiifDNHb6+5eZRph5fSHbPcHFFAUuN/t
PPIC1K+q+7jYqfAcmHww1srAvstPdZUzqajM/CYYT2GiotCGVVGHBo1gXa0T
xLh212f2or80MNVd50oHGLDyaYyS7ZqCf5DImgpqIYQTbT1SHxB54fTBL/Lb
wsGx6iZ15FoYBMsbvmv8fY5f1iIXL/zXCM7p/S6G3Qy8ACMxJKEZrH0Gj1J+
EfxW0/R4VzIJ1y5+ilgkE+dPvf7pKy8ZMm8PHyXff4qSR3GJ83spSFJ31L1T
bw4nw9syv79TsLbZMvI2dxoO8aYknL1MhaKBafS0JxPLd+4KfmKh4QLpu+3/
+MT77XM+niQajJ/JRkY9JOazg940SNCxtlWbZvcmDeHHTSWTu+hIOBQ9XNp9
FQd3n8j6K3wdq5UfyHvon8W2Sd6e9MgW2HNmlL0n9Nug7FMHi0gravTMS2tj
mEgTeCLxKZQMxSPn+Z6P2SORdZa7x5YCmasNswyHIMzpGogMvaJin4Dt7o5m
wt++xiydPkHDUvOl5+OTTJxa2KsjZUvHXALtU8ibGEiriv/zMw/CtCdfcFN1
ECjNq5SYF5qh2hvZNEb4jU2cy+eFOyRodJolpk0R9VtiLeKb7MN+jd4p34xI
cJZcat2wnQINo3J5V3dVJCK44t5pKt6Oi+XeN2KixlFpTG+Cij9O83W7CH/V
Tqvh3hlCQwqbV861RCbyw0UYohV0BHBEuhTedMaDb6+2lOt5I+nLYOrOYFfM
q5dyvxchYadP0pvXxPct1eOtrfrIMC+x3ny/+jBMLer9YyupmBk9Lu1I7G8m
V2atrDUNFMfjCaXE+ZfV3r6TiKCjbSYsLsHpCdSy5lcJ0psRoNlx8OUoE52/
91zRbCZhLEUjuoPgiTGj1vdWSmTYL5wpbH8cADvdAYdhJQqcUr13vt/oAhmv
bK1NvDT85z2h3kv4vdNArJ4InQ735lnS6enDWNawfGkubgLrozfICf4yMKks
Xud3owVm2ryuVxaYWNFSM6q6R4bOTx9TARM3LCvnz2scoqGQdrVH9w/Bf4Fq
WtYWJISvoegZEv54xCD/Ou8mCgyf18yVW+/F/lsireIDVHj1veTMWyLydLkv
bTifDm1rIZbuQnfsaqZL/5d8H6/yd55db38LOw8//7B1Iwkmwers7UR/5nka
Rd6pJ+MWPX4Ta7wmqk0ybtoXUlFR8h5raExM3LnfplfTjKsqfsuRA0w8nwQH
XY6CIVJSXvOKHV7ejzhMXk+DdESYtD2xHttmhtLAIB1hLE3BU3e14KhtpXEl
0gm620WjxboM0bjN8WNHeQuMbH9zdBLPz2ikZS7uNRmd6hp+vSzWGBJZOsom
QgFeh5AymHqwcL286uEswWcqafSnxPpitmVbrZro6J06uvlRui2+m0zcV5Qn
4cmbvcK6xP3g4h2U05khI8eddnIteSMWrKnx9U1UlCwxfbqJeibQ3A4PbmuB
j1JAYQqdiQbflmvHhWlouzrTfo6oHyXvuJ3ZIh0C/S7ZL3xWgV1FwJHML4e3
DsF26XvISnvPPAvMdgwHfcedrvnViaB3661/LfAGbDayhRfryxB13dBESi0T
ngUVfYdnWpEzeuOGyWwVKv481vXwnIPSwKmaoLs1qDQ7G7cqfxE7mk79wYF6
SFH9rpjeXsG582W+pwsa4SMSoOBE5EeFzQ1szw63gM/QtO0Dsf+v5l4fsv+Q
cKtrUet9AXFfroVVaBxpg9uJcOOMhwzYv7yw2+5FO4S5tQ4dll+GssHD3sHR
73ASpciuF1oAaZJ9QnbPLxxTfHh5tm8AekeuPpP26saTbOE3G+1/EPkqbU9X
WQ+oa7sEe3bXQS6KU/ybYB8EYtx4p8w/wUL7oEGPORlhB4D32x+gQO9caZA2
BSOjsiG/jnqh7UvQI/UVCj4mzbnV8+Tgl6LqWXJ8Pzj4ZLorOetQRupILzg/
gEMX2Mn/nLvQZmJ75eDoEGylFCyEX/1DUMXxTP3AYchYb3k/z7mATgv+I3Fy
I3gVzdJgcXAZnPzOecUdI3i6czQkx5iBng0dtssPCT8JWrm3I58JhuX2w63i
xH085ZT8hfDb0I2enp+/0VC1PV1lnwrB19MTC6Uuo6D/vhLRfWcF3yZ+2Cfw
jmGO/CA6dWoRf+79WWtuPomPf9x1ji8RucF4npPEMoUOg+Jl3aw2bLqzVsM8
YwrHNqSHiwyUITDO36xPi44tTS4eTbWvcb/pZZVBkR9+CH1R+xzkjZOCRil9
+gkY2fz3gGB2Nuqkq82aDqai+0ScnFBwHZpqjltzyH9DYf1x+uLeBahqLtac
/F6LXL5nSfKyyzisLaTW49IAPftCzmB7Bvi2pHJ6zTah7ccF38sfmXCXbq6/
cYYEl/tW/3UTepISsRBTG96KS+3ex/YrMrHV3PModagNmlHsh096rOBm0u1T
TcI9MESxyrt3rVDqPnplxb4XFw9xjpm2laJRP2OVSWkfFjn0KFwt8Rgz2Geb
xEL4Xc4jK3HLBCUpG34l1ncU/ElV7ojNS0RjBMV44Xw/qsQ3lk7ZlyHS4VLI
075h8FEUjrMXLMK286stl/8IRqTexaubrsDYoVXyjxQVo+q8r47sYyJd4ovM
rQ4qOoID81UJni3RVjn34TYN/K9P1+iVMMHRY9F5UWgUTg0zO0Y8GVBf5fBg
JWsSQa6sOxyDu/Cten/NAcMpPLJ7QKlXqEfy+2qDxZUpjI2T1D7X54Bx1GPT
j/d0jBX+CxI744vwBL4ysctuYA4sFhe+MEeejFvk2cFoJD3dYjYb/wHvObME
Q1vrcYJ/8z7LhRVkS+edtTBsgp3t+FcVNya25R86JzfQgs+8a4OLCT36dL/k
9QnVVtwwHLRe8WFi9tRM+dj2XsiWfozYpF4FlrleHm77PpBDXMSWd72HoJfK
i7BPZLA1t5ueT7kK595sRvV9CmK2u+/9ZfMcclVJDoasVHg4+7y+1cCAqoB6
U246Fbb1167H9jFxxThD+YsW0c+79vtKEHp87i9dcvUMDVEysbl/aAx0hdmQ
MjqmIMpuf+ygYRFUx1k+/7pPh+ut+VTnuXBIae7+IFATirCioy/z5Z6j4lmQ
w95tjWjg3NZn3cGAx3T895iIZigPNgj5djFB9fF1+BJHwm/xWfHNxO9F5XrM
fNhChlbtwRRruWdQm8pdc1+CAqVH0jdmXphiZMrLU7GNgt/V3mry1qnwFmAd
Cr1ExXhLV1UiwZfb5GUixRhUrM28WrlE1E/gzE/DiHga1lr8LrN5xIRDuWiv
mjgdg5WzJV4a6SgImLNs76CDi9y8VWK3OapUBD5XxtpA3bvnElu+Ct5beL0b
eNIC79nZF78J/f48JSQ+v6MVVaRHsscTmCijFv7Ne0yGB73FO6nLETzRTBMJ
GwpcgpaFbfkeY8vWzTGXogj9eNfQq0f4vbTpgEKNAg0DtSNRVwh/sFGtfHLF
mg5jdyVSX3osdIN78wvKHuMa3W7rysPHqPdOcdqk1gznJ7FNF6qZOHhJIi7c
mQRJ1kwLmd9MyK7mXVpF64Nzi2Kmqv9LRO1ylA/loSB55XdKt7oyplRH15Sf
oqJGzS0+To/wnwNzlnWjVLgpj11IIHhiTJPzYkIQDbKvD8p/TWbiF7nwqH4p
HS+lztBGdrnitFBKyug1L1yMPPM6gumMCnbX+VOCJHjdk0tdR9T37rYmmes/
yfjteSp+NkcRd0UeMreUU5HLbhoyOUHwhf5dtRwLGr6LeAaJtjLx33OlgUvP
6egxNGkzpQbjoEW0/N7hZoRFj5MnqYR/pvWcHKklITBqt9Xdlv/p7dDohWNk
HBGJ4OUseYS/hQsd1xQpsFLiMTZ+7gQNpRu1Ptw0uD38525E+H3k/sNhOhN0
iJlFeoT2noBosNAbprARuGXYfMQMJPD7qFhHoVkL9hqUh14h9Jtb0E2szo2M
vFuX11gybiOyf1m+8SANtm+PfXhE8JC+ytIhlqsksMrK+EX8I553SVPLy/UU
VNJlLH6dF4Ga1C+NGDIVJ5XCcqcXmbi5ccfubbl02Odzrov/ch83TUyyH5nf
Q4x0T8LmVjtQ6WphH9eQcD28TmGGqF+9RqCFRzUZqrL23le8tNEnZDMykE/w
iIbnWtURghclBddYfmlGfzZpyycirwjqGdo7yVIguzZlVPqhLbIUtDJ1OWgw
OVDklkqsJ24c6c7dT8c9kl3mNYeLKKK0NVXqOaIoJ4nNJUyP4LKf7hs+t2C6
oCLJmqiXfQ6j8nUcGQcCc548PH8N9oHcCX47KUTe33VM9o8O7h/i8Zz7QwVf
RuPV88T6GjmXtMLr6dhaKLTB1fMG4viTzH/IkCC25eUYK9FP4gNcrAaTZMRK
r/1vvlsA3GKJfGigIuNO+NOoGSYCX227Pr2xBc+SSgSPEvw8dDKwP1OQhoId
/MMcBF+xs35PeTpHR8yX/b7x07wYEhT1uSOuBQPm0UKyPxe2ic7fENNswRT1
PdueWUI/CqyYhy+SsM/5qEQPoe+dj5djYldTUDVFvvj35ircS9VU8vtFhRFv
xM7jhH/N1Jvl1c61wLchtGGROM/M0PCifzGZ4FvNwZCXBhgsKH2tuIoG6hbW
rX+Iecff36acu+moPN7tsqXUCLFsZh/Ekm8gYKW1667TefjdSd9yJ6kFdfns
K1rE+f30T954zE9BZl3vyxu71fHxk78jZYqKux0vNSKJeh8IW79/0x4SNO3v
fpQkxloeDtGmg2TI3xGhxr88AL6yhe9R22m4JVD0nw6x3rmX7ALT03TkRB/z
mnKXxpjf9yrzSHPMsnh0aP+URzo9ftWLzRRscRSYTM+RBc9HW8PsISo08+Kd
bIl66t3rrbzLRcKNgd6fScR5ErP21ju3kHFYwY076bMaHpT0FNttoqFHMm1C
hJjvq7Rmzx4hzqv9l/XPx7NQSFozmNDYghI9LU85Yv5s3uvHnAtUvLiYEVBF
jDekyEcmKZJwu7/U8jmhj8tncm3PzZEx67IrX8d4TqnELvnAwRU6lo+nvxv2
GVT6v/+Hsvz/1//9P+7/xv8P/GyZkg==
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 1, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1XfclmMYxvG3l5aGSjulvffe2ntoamjvoSVKSkulaBFJU5FoWQ2jNKi0
aaGUNI1CCBG+p/74fY7jd153T899P/d1vXl6Dm09JDEhISEJXk68lSsSb/Wy
+nL5i+EU2UM+L0/IAfJ764vlJf6orCdnyfdkM/mM9Sv6eL2d3Icu+iHzM/pw
vbBcgtJxjXln/VP04md4ZX0davHRvJm+A235Bp5WfwKZeRn+Heryd9HUbC4/
iEJ8MUqZteWnUYmvxb1mo/g7SMMnI5NZaT4HB1DQbBFKmrfhj+BtpDabhIzm
pfhs7EcBs4UoYd6aP4y3kMpsIu4yL8lLoDiKoShaYSTexB2um4AMri3C78ND
eAMp47kifTxDPgv7kN/sRRQ3b8m/QkW+BjXNRvD1SMEfRzqzQvxb1OGb0cRs
Jm+r78UDfC/Ppy9AMd6Cd9IPoyc/xSvoq1GDD+dN9e1ow9fxk/qDenI5Dnfq
Bc2vxW+od5fPyeOyv7xsbZG8yEfL2nKm3CQby6etL5U/xL3E7yKfkZ/IzpHW
F8jTfJjMK2fIF2RR2dz6T/H76R3lIfTQT5qf0x/Wy8vXUV0fZt5E34bWfC1P
po9FWl6AX0ItvhGNzJ7irfU96MT38Dz6fBThzfiXKMdfQzWzoXwNkvLHkMYs
P5+B3cgd+xCFzZvyIViN283GILV5Pj4du3BPPFcUMm/CH8TruC32LVLFs+GN
MRivITGeOe6wlif+z/gc5EIjDMKqODdcMwopXZeTN8RAvJpw61B5BCms3U2f
xMfxGWbzUNC8AR+Alfg39ol5cvMc+kXcyzegodk0/hFy8mdRwKw+/wJl+SpU
Nesf96J/iFb8Ff5P7CuejGfXu+nH0I9f4BfiPvSa8h000Keafx/vqt5KzpW7
ZUe509oL8is+NO5PTo8zT+aPs9D6S/LH2O+yQ9yzPCi7y8+tL5Tf8JFxdsmn
5auyiuwXZ1m8W3ojuRX3xbkc74s+WL8Z54GeVM+md9WPoi8/z2vob6M+nxLn
h74LHfgOniPuCfl4XX4CpflKVDbry1fgb4wwu90sq/4EtiO72RzkNa/Dj6MU
fwWVzPrw5fgLw81uM8uiT8Y2ZDObjTyxt3nveGa4gWHmieaZYz+hF5bhTwy1
lsRaJj0j7kKGeFfQM84E/BH7Ikm8yM5IURM9sAS/xx6w9m+cf/okfIisfBZy
+zc1eHcsxvXYF+b/xJmlT8RWZInzCPe4vjo/hpL8ZVQ06xb7Qd+ClnwR/y32
Dr8ZZ4beRR5BH+vneHX9LdTjE3hL/WPcz7fwU3r8wc4sn4wzUOaS1eL5yKt8
grw/9og8ILvJo9ZflGf5Q7KEfEqukBVk13g28ts4c2Jfxm8rP5At5MLYZ/og
/Vd9mhzI/47zif8sJ5s9ID9D73i3zc/HGRDfT76Juvp48xb6R2gf/wfPFN8H
OXlVfgTF+XKUN+sS3x+/xHlh9lecc/pZVNXfQB3XPc7fj/eCz8DdZlX4ZyjG
X0K5+J58Aa6hv9mNOAf1cXgv3qnYz8jh2sq8c+z3uE/0M/8zzkZ9LN6N9y9+
D2R3fSXeCfPxE/qa/xFnpJ4CyZEMSVERHfE8fkQf1/0ee01/DJuRnk9DNp9d
gXfAc7gae8b8euwtfQw2IR2fiqzx94t/iqJ8GcrGu8Hn4UrsK7Pfkvy/TRK+
RhV9PWobPMqb6zvRjm/kd+pTkIWX4+31/ejKD8dn6CP0InIpyujtzS/rY+K8
jj0v35fN5bPxnOI85APjbzmfKnvyX/EfT684jw==
             
             "]]}]}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           LineBox[CompressedData["
1:eJwl1ne8jmUcx/FzFNkjO0pGVJLMREaFjGwNO3sV2dl77+xNpaKMMrIaWmQV
QkYoq5TVoqzev/zx8f1+ftd9ntfjvu/rOid3i851OyUmJCS8niQhIfJP/7TA
CP4b7yC/5zPkFF5DbuQTZSXZR/4sn7NWRF+gP4Cu+nH5rXlTfUdcg2I8Kx+u
p8Na/iz/XK+B3vwJvkJ/DMc5TfhLb4lz+lQ8j6IWFpo9iN28OLKZjeDp8SHv
g9vwN2+F8/o0vIASyO76keYZsI73xe24zFvjgj4dDVASSZEMdyA5UuCK69rg
oj4DDfEo7vLZo8zvxHreDynxD2+LS/pMNEIp5HD9aPOM2MD7IxX+5e3wuz4L
jVHMtYvMCmIPfww5zcbwTNjIB+BJs5W8NH7kqXFVb48/9NloEvfOda+bPYS9
vDTuNhvLM2MTf45/odfEQP4Uf18vg576SfmTeSt9j94YQ/VLMo35NdkBI83+
5B3lQT5Hr6lv0ifJyrKv/EXOl03jWck3+FhZSHaTP8rZ8jvrzeROPkU+LwfJ
83KhLGP9HjmOj5JZZCd5RH4U75L+pV4rfo5X5B/oj+MEb8336k2Qll+XHfGX
Phe1rH/En0azeE/4m/rD2McfRy6z8TwrPuaDkQ43+Ev4W5+HF1EW97p+gnk2
fMKHID1u8pdxWZ+P5iiHDAm3Nkps5ivqArRAedyJjMiEzEh0XWfX/aMvREtU
QJb4CGuvWPtXXxTPMvYjcptPNM+OT/nQ2Mext8y7mF2NMyTuVbz7ZovNCmN/
vIPIYzaJ34XNfFjs1dhr5l3NrulvoE3sBbO3zB7BgXjPkNdsMs+Bz2L/8q/0
2hjOK/FVelmcjM+J90JvGt859i3vpl/XX9IP6W/qtfWP9Srop5+NvRn7SX9b
HyeLyO7yp3hX4zyM5yR38anyBTlYXpCLZEXr+eRrfLTMKTvLH+TMOOviPJFb
+GRZR/aXv8oR1irrq/Vy6KWfkqfM2+r74h2L+xjnEO+u39AXow7/hFeN8yL2
MH9HL4qDcY9wX5zj/G58wUfiabM1vDxOxzkU55tZD35Tfwvt43shv/lU83vw
JR8V5w6Sm/dMTPj/l8jbokN8bpwhSGGtl3ki3ol9jyqxJ2NfxLse7xdSuu5V
1yTBknhOqBrvDlJZ621+G5byl1ENBcynmeXCV3x0vCtIbd7H7Ha8yzuhOu43
n252L7bwMfGskMa8r1lSvMc7o4zZEl4Mh/gzeMBsBs+Nrbwh36rXjbMp/l98
rV4BZ+J+I61ZP54My3hd/qleDa/E+cCX6sXRQz8hD8fe1r/RG2CIflHWMH9Q
n6mPkXniM+RROUt+bb1RJH9N1pMD4ne5XBBnYNxT+SEfL5+Qr8rTcm78Lrfe
Tu7n0+SLcpj8XeaPM0vvr98R55B+WC43r6dv1qujS5xh/F29BI7EWcS/1Rui
Ji/IZ+l5sY035tv0+vG94tnydfqT+CWec5x/ZgN4cqzgXePsM3uPl8QPvBYe
MpvN82E7nxDPPc5I84FmKbCSd4v9H880zkhrg8xT4n3ePfZT3Ov4rvGZKISH
kdG1g12XCh/wHvFMY918jtl92MEnojAymQ8xS41VvGfcr/gs87lxX7GTT8Ij
yGw+1CwNVvNeKG+2jD+Ko7x+fLbZPF4Au/jkeMfN1vOncJYXQRazYTwt1sTP
8s/0Z+LZ8wp8uV4Kx3hLvltvhGfjO/H5+v3xbPVj8hvzJvr2uAYD9XPxzsU+
0TfoE+IslL3lGTkvzrg4S+QBPl02l8PlH4m3/gYtav0/cTs3QA==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$24149#1"]& ]}}], {}, {}}, {
      GraphicsComplexBox[CompressedData["
1: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
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1ne8zvUbx/HTOVayZcuIkL3JHlmZGRHZv4bqFymllOzRQFHK3kR22aM9
ULZCGYWIbCKi55U/Xo/r/XpfZ9zne3+/n/vk79az5TOJCQkJt+HJpFuzR9Kt
XFZ+wnzBF1Q3F1s+ZD7AM5p38s5md17UHMIbmXn5Mczy/f83y+sm2VWSb+BP
fVszj76j/go28g76OXJtOZVdkvwc0vHdGGI/hheTz+N7Xp3/hKm8DM8sD0Ye
fhQzdafwiO4vbNC154lyb6TluzBYtwXVdD9iiq40n4GT6KC7jPX6h/kgbEZV
3R5M1pfiJVEC7TAQm1DFfjcm+ZrifDr+QHvdJazTt433QH4WafhODNB9h/t0
uzBRV4xnkgfhLn4E03QTeUX5H5zgD/OLWMsf4rPlWnLKpFtvdi/cwXfgtXif
4/XbjdYXlc/hW30LM5u+cny/udOcEO+33eO8j1zNXKRvYzbiGcyMvJPZjd9r
DuQNzdz8N0z1/d3503I5c4J9c7MCv47j9g+Zd+na2V3AGt5GP0uuKaewu8k7
ygXlnvrU8nb014/i98pn8Q2vxHfgg3hNPIM8ALn4r5ii+z3uTd15rNa15jfw
DL+db8Or/GtU1G3H+7oifDKOxevWncMqfSv+Cr5CBd02jNcX5i3RD1+ivH4r
3rMrxO/Bg3gZX6Cc3Q94N/5WPglH0UZ3Fiv1LfhL+Bxldd9jnL4ATy+/hpz8
MCbqjqC17gxW6JrzmXINObnr+U88vzwV34q+/C1eRD6Dz3hzM6uvLaPfgrH8
bv3zZlX9Ql1rsyFPb6bjHc2ucc3M/ryBmYMfwgTf240/JZc1P7BvZpbn1+Le
ieeGt5Fzm63s65qnzU90zeyfNSvrZuhamtV5MvN6nANxPeK+s0sp/4AX9W/y
wvJpfMpL8814h+fnH8XrlNP53rTyq8jOD+ID+/d5OfnvuJfiveV/4mPelF/D
UzxFnFt4gW9EKd0mvK3LFz8Hh+O9153Ccn0T3gcb4nzRfYcx+rx8PA7Fc6o7
iWX6xnH9sT7OIt23GB3nLb8LD+A5rENxu28wKq4nfw8H433V/YGl+ka8N9ai
mO5rvKXPxdPIryAbP4B3dQfQTHcCS3QN+d/x+cKT8y14lr/BC8XnAdbwovwr
vMlz8gVyfTmta36H3CWeG7mfnFX+BePi58bZrx+vbxqfW/xq7OMc5K3jtZpN
7euYx83Fugb2j/JeciVzuv5BsxpPMq/G/WJ2iHva7BGvx0zGN6NXnIFmSd3r
dvfIp7A6/n4zi/5e/Zd4g+fQz5fryWnsUssvIwv/GWPj+vMy8pXoeBP+Oxbx
+vxKnNU8iW9CT74KRXRf4HVddv4O9qOx7hgW6uvFOYaVKKz7HCPjfOdvY1/c
G7qj+Eh/fzz/WIFCus8wIp53ngV18TQ+ifPK7lMMt7+T14n7HR+joH4jhtll
5mOwF410R7BAX5v/FdeTJ/Lv8CQfyQvKJ7GcF+AbMJRn4h/K98t3uJ63yy/h
Tr4fo+17mKXt3tWXlv/CT/pWcY/FuaSvbf5mztfVsvtffJbIFc1p+hZmVZ5o
XrbvYLaPc8F8LN7P+L+Jf4se9l2jl0uYI+ybmAX4H1hm3zSuke5uu/UYwjPG
M2lW0c+LM01OLaeSO8dngtxXzizvwyhfP46Xki/jR96A/4oPeU1+Ke5vnsC/
wRPiUuTXrcNgXYY407EH9XWHMU9fg1+Ma8FvxjOve5wvQT6+FoPiTI+zE7tR
T3cIc/XV+WNYjLy6NRgY5ydPi2rx2rAIeexWY0A8F7xq/F4sjPNKvyo+u+I9
jjMDu3C/7iDmxDXjF9Cd34gzRNc9zmzk5ivRP64nTym/iEx8L17XjeUl5UvY
GWd3PKuud139Aczm98WzY1bQT9VVkW+Tz8cZE2d3/K8T92J8bsYzr+tm14U/
Khc3h+sbx/vOT2CBfTveJJ4LM5d9TXNFfL7obo9ryHvH7zfn6luZdWJnpuCd
5Hvif3Q5Y9zbGBnPPy8hX8SO+DyJcyG+V/8LZvHK+inyfXKC3bm4d/n1OEt0
XfkwOb98HPN5Tv5JnPk8FU8u90GGuAcxQrcdtXU/Y2acrfxsXAt+Lc4dXZd4
dpGDf4x+upR8OLahlm4/ZsRzyDtjHrLrlse5qU8Rvx/JUAGdMBfZ7JfFWZD4
35+VMAxbUVO3D9P15fmZ+Ln87zjbdB35HGTlS9E38b9HJyGZ/DzSkz0YGucl
Ly5fwA+8Bt+LabwcnyxXlm/idLzPZl4vppP+apyV/JG4z81i+qG6B8x8/HfM
tmvLG8c5Z2axr2EuiftX9y+X5Jsa
             "]]}]}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Jbz//1TSmj0=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$24206#1"]& ]}}], {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Length x\"", TraditionalForm], 
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(n\\)]\\)(x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(n\\)]\\)(x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\) for n = 1,2,3\"", 
       TraditionalForm], PlotRange -> {{0, 1}, {0., 1.9999998830731718`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)(x) = \
2\\!\\(\\*SuperscriptBox[\\(sin\\), \\(2\\)]\\)\[Pi]x\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\)(x) = \
2\\!\\(\\*SuperscriptBox[\\(sin\\), \\(2\\)]\\)2\[Pi]x\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\)(x) = \
2\\!\\(\\*SuperscriptBox[\\(sin\\), \\(2\\)]\\)3\[Pi]x\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.848745230164502*^9}},
 CellLabel->
  "Out[405]=",ExpressionUUID->"eff6d619-06d8-407d-a8eb-813f7ba9189b"],

Cell[BoxData["\<\"Density Functions for \\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(n\\)]\\)(x)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(n\\)]\\)(y)\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745230195749*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"1d10ae0d-a6d8-4066-89e8-77b0089fa476"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyNmUtuXEUUhi12wRDIPnrGY8oSkBgBYivQS/CUmQWZeBJdIU8yia5QUOwA
7jQNIiHtuwKCfcvfKZ2vqgKWlaO/Xvf8dZ7lvPfZ159+/s7Jycm7t//cSf9s
H3xy+3u2yXgKfPXwq9vfx5qfA6/TV08DX5aBwP+8ufv5LfC36/4XgT+4g9vf
A/+wbv8j8EfrB/8K/Gw9/1XgL1YFXwcuP4tw5dmXU2D45vk5MHzB8AXDFwxf
MHzB8AXDFwxfMHyz3Rbhasc+zyoz30l8J/GdxHcS30l8J/GdxHcS30l8J/Gd
xLf1074dK09L+ILhC4YvGL5g+ILhC4YvGL5g+ILhm+NuEa5x2PfTqeGV56vM
9p1l31n2nWXfWfadZd9Z9p1l31n2nWXfNs/043Bq7GZeYEv4guELhi8YvmD4
guELhi8YvjlvLsI1j/bzzNT4pe1mXmBL+ILhC4YvGL5g+ILhC4ZvrgvLZlQn
+nl0auLOfmm7mRfYEr5g+ILhC4YvGL5g+Oa6t2xGdRC+zpvOK447+6XtZl5g
S/iC4QuGLxi+YPjmur5sRnUevq4LzpvOK447+6XtZl5gS/iC4QuGLxi+uW9Z
NqM+Br6ue64LzpvOK447+6XtZl5gS/iC4QuGb+7Lls2oT4Ov67rrnuuC86bz
iuPOfmm7mRfYEr5g+Oa+c9mM+lD4um9xXXfdc11w3nRecdzZL2038wJbwjf3
1ctm1GfD132Z+xbXddc91wXnTecVx5390nYzL7AlfEfvCPj2+073Ze5bXNdd
91wXnDedVxx39kvbzbyWRhZ9T0MWPueBi7oXgb9Z5cvA76/6/a31x+G5lpwP
Lno90fxxqJfP6cvj8DvoX+zwZ8PTkvVgzh/dC+d6H9iS80b36nsxT+vlcy05
H4/H322/HAesO4146PvPWXOvOe+fKi+eKm/UezTvfpza/+o73/6D3ujHPPcH
znn8XHnuXPd7oe9PMY+/Zf2fbL5cD/plsy7f/rT5eN24C1zyxT5wWX9o5su+
ZzEPtuR7bx/fNeNI8lPev4t58hXz6JfPOTS8R/dAvuzrvYv8aT2ZR98+v53u
b6f7a+2APr4n5tHH98J8vr9WD0vqx8gP8nuu9YP8DtrrnVDPt118D2DiZxTX
xMUorhz3/Tg6Nn/3cj7M/cRFkydy3at5nnHn3Xzesfk7Wz9f1r8zOu4d5+bl
7+T1S5OnGc/3cNbce56fdC+PVUfqOxq/wj/AxLPjwH6T/fSqyS9+hzu/OK7s
1zkPVL9HL5/rvOC4dFzk9YfhvXC+84rj2nE2ulfO83vWeoCxs+3u94ft/nY/
+C5k8bNHGr8Zrvtw/eDrkP19VRb9tiFZPxov/F8FLnnkqHX1XOZZX3g+DMm8
efId5sGjc0d6cK7PAVuybzSe+61t3DN8vI5x1rHPfb/vrd9Pbe/99vL+3fFr
4DJ9HePFf5/HOJh5S9YVv97FOJh5S9YVni9iHAwD+13mNUXcIBknH7tP97vZ
/bzfWTnebsIeuR9c4vu2H/ef19cf9lH/qAdl24/hH/4O+uTvnMU5nJ/rSPU7
/DnH5Xl8B//A/uDcHz5v/Mb+Y3/J/eG1+pRd7Aczj1/Yb/r6teeM9LKf2o9z
/3itPqpK9DH29xx3//eeOZf5XJ8qth1cP0d2QLq+ju4Bfv2+veqR76Xa8b/u
EV7+O7/9Ln9/16w3r5xfHoXM/che752D6nqdZ5y4+n49/2XIfl29afI60nXO
eYD99BsP7vsQcFn3dDgOXq/jzc8hs5/VPsvxlvuk1u/677lqX+btB/n/Ny6H
38l+t28wErvlfu4gHofGvrlf28c+r2Mc+S8+Aarg
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
       
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)(x)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)(y) Density Plot\
\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.8487452302804413`*^9}},
 CellLabel->
  "Out[413]=",ExpressionUUID->"2bcf41ef-5ac9-4cf9-b995-dc368aec11e0"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyFnMtuXMcRhokgL5LE78FdLts8QoCscnuVhI/ArXdEog03xoEwgDAIwAzl
CSiKlkhmTEuKh/MEcaw5/Krxfz0tEQLa/6nqS3V1V1VX9/hnv/vLb3//k6Oj
oxc/PTr6WPrv5Ivf/Pjv7DjxVPj62Z9+/LcUfVV4T75eF341fyj8vx8+/r0p
/Ld9/bvCv/gIT/5T+B/76t8W/tW+w3eFr/btfyj8h/0Avy88/+2Em5yHy6kw
8iZ9VRh5wcgLRl4w8oKRF4y8YOQFIy8YeVNvO+Gmx8NytjLlnSTvJHknyTtJ
3knyTpJ3kryT5J0k7yR5J8nbr9PDemxyukReMPKCkReMvGDkBSMvGHnByAtG
XjDy5r7bCbd9eHidTp1cSW9l6ncl/a6k35X0u5J+V9LvSvpdSb8r6Xcl/fZ2
5vA+nDq9WS6wS+QFIy8YecHIC0ZeMPKCkReMvGk3d8LNjh62M1O3Lq03ywV2
ibxg5AUjLxh5wcgLRl4w8qZf2B2P/MRhOzp1+87r0nqzXGCXyAtGXjDygpEX
jLxg5E2/tzse+UHktd20XfG+87q03iwX2CXygpEXjLxg5AUjb/r13fHIzyOv
/YLtpu2K953XpfVmucAukReMvGDkBSNvxi2741Ecg7z2e/YLtpu2K953XpfW
m+UCu0ReMPKCkTfjst3xKE5DXvt1+z37BdtN2xXvO69L681ygV0iLxh5M+7c
HY/iUOR13GK/br9nv2C7abvifed1ab1ZLrBL5M24enc8irOR13GZ4xb7dfs9
+wXbTdsV7zuvS+vNcoFdIu/oHIG8h+NOx2WOW+zX7ffsF2w3bVe877wurTfL
tevKebynVc7ynBf+9f4/rgr/cc9wI/pt4Vm++8I/34//v4Vn8bfDfl3O/IvC
9A+mfzD9J/9G7W2H/VAfjPz7YZ68LHnAnie+g10y/vx+W/iv+wbeF6Y/MOMf
6cXz5H5d0j8Y+cH0D6b/0TqwXiyn+3VJ/+CU/1by9+vO68B6tZzu1yXrJ9vb
DteZ61mvyAP2PvE68zqwXjxP7scl4x/tS+8TrzuvA+vF8+R+XdI/Fhd7a/uQ
dhi+024fYm9zXVx3+xQ58xxh++a43PburNNj+vlT+cGmZ8/zYb9je4n8F1Uf
+bO9dUfPfXCtfXpV9NTv4ml+HoofecEZ5zQ69TMuONd6WGg9LLoSeUffT578
rb9nvXXRmQ/oyA9m31r+nJ9N8Wfc2vihZ5y3qPmBznxYr5/W87Kbl9wHq24e
oLtkv8IHhp7xRpsf6Bl/XJT80JHX+/TT+3bq1nXu22W3rtMfruSHbztMf8RX
ng/aQ37otuvIn/Kcdf7Z+RvboYwLLzq/7XO9/arPwdDTn12XfmzXnW+yf8/8
yqIbFxg+xxnOQzgOyHqbomM/7HecL3I8QD8jvXveHK8wb/Tj+MV5FMcxfM94
7rbsARj57MftR/Nc0O/T5F939IxPrrt17nkHs17gRx5wnlsbnfp5zrtXHLMp
+Wx3bWdHdpn9bv602+vObnkfgHMeNp/9zv73d0rmBzrzA535sJ/9tN9ddn4p
45BV54dsh63HkZ4zz/TQyZF5mSY3dJfsz0/HTVMXZ2TctOzijIxnV92+G+1D
7KXng/aQ3+saOvKnPGddfO18iePAPKdfdPG+8yGO/50fsR3J/MpDF5c7v8N3
xp95A+5jHLc1P2I7bTt2eN9vlSfaVr/ZX/ueftbz3u7FmOf005PqT/J7zlue
S8+T+ps0b+3eMedp0cVxYMYHdtyTeeFmJ20XvE/A3kfIxTzRLthxds7fqtaX
7bDtkPel9YKdznlad34t18u6myfmZ6RX9ofzI95Xvm+xP3Wc5Xadh7Zd9T7N
+41tdx9i/+e43HGq58F5f/sz23nbPbDtIvrzOcjnAsfJnhf7UfsV21nvS5+z
HJfYDzs/b7lG+9p6mut/WeVc/5vCc3+34nsc1nNJ/VG75nN5uN9WzvKdVAn/
6PteHT/8u/A8H68Lz+xvC8/6+1B41t9W7bZxQHf78zr6quhgjwu5R+OkHtgl
8zn6jnx8pz8wdPhn+e+LzviNrV/asVyjfkbj4jvl576jLzDjgw/s8SAndLDX
gfsZ6X20TrwORvP4uXF7nGCX9Dv6TjzEOGe/8erJPjw7/uWe8H1h1+N71rsr
7O/Z3t2gn8bHuDJ+23X77ij+dvV99h8vuvLP+wb++dTO5dM8Pz/eF1/8q/jA
8M/D/bro83x+22H4Z329q/Znu/xd8YPh//u+g/fdOCk9LjByUMIPn0v4Zv/y
UPyMHz4w/MgDP+OHH+xxeHzu3+2DR/PsevP3TTduMPzoD/qohJ/x0D7ywQeG
H/15HUC33sGWG37PKxh++Cg9LjD8rgefS+vZ43M7bp+SHcl+TfvBPj6v807G
4+2da/JNhQ9/b+eC2Z4sip7vks4Vp56rf79zafdk0CnpJ8e1VLzV7vGgz9/X
XV6b75nnbO8s4Ms8wlrn4nXXTuYLr7rvmS+8Kn+EHc/835Xyf1c6t19351z0
T3uZv3qjfFJ7V5D3w4+KN871fuy+e4eQ97uP5UcPr7tJevI6Wepct+jea0HP
d1733fd8F9XuXf2+zO8A/D7K97d+f+X8mfXodzXOe/Ed/fj9j/Xu+1+/j8nz
yjfl790P9XwP7HchmRd4rPbyfqytI68Lt2P75HjnJOKLq6Jn+7wbfF38yJv1
b4t//vy26LlOT3TfxXjuip7jb39pD59Vme9Sz2t80BlP1mtxm+eJ+Yfue608
11x2ec88b12WHNlOi1OpB532KRk//Jy70+58KH7r0XpDznyfe695fNR5jfHf
dnr1PDPOnPe7wqxrMP2B6S/tU9Obx536vuv6dYm+0z4+Ft33inn+e9flnfNc
1eKFXBcnOg+sqh3apx3PE/2kX/mgdXZecmU+4LGb59x/u4rrKVm3ed7YFD3j
yRddnM73uf2LooNpH35K08GOI4kHTQczPviJB00HM955mX1d/YPpD0x9MPPC
PFE/4/1NldR3fO14mrwb9MwrX3bxtOl5n/TQxdOm5/3Suy6eNj3v717UuYH+
fY4AUx/sc2HOp8+5y05vXmf0D7/PLakPn8OWnVzWQ54jlt2+gY99zvhG65wy
/UBbR4wv/cvDUO+MD36fixmv15/z2aN9Rj8Z9z10693nUOe3R+uQ8Wc+/Xl3
nnN+e7TPGW/6zU13/nO+e7TuKbO9tm7pf57/qcab62TZrXO+o1fo6BEMHf7Z
b62rX+yS8z3wex3k/dBU8wHdesh8yrLmCXreM7R8Efz5PvqiswNpR9rvBG0n
mBevc+aH78jP95Gdhx95vW+gI5/tNnTGT38juwh/ynmp75c6v1/q3qX308wr
56qct3ZPaTtIP+nHN51dgu7zGeuI+XS+Ku+zmp2gXp4zH4qe92jNruQ90XdF
9z6H7t9l0C/6cP7Lvw+yH/HvZxynQEd+xgF2HOHfy9iu+ncz9ut8Z/x8H/ld
/x7IfsN22HYPPOuf/NRp2RHwvB7bPVHmn06VJ+CdW7u34PuoH9qnzLgAfFv1
8xwzVX/wp9/r24XfcWPq9Ubvwq4Lcz6CH32AZ/Zt8ZMnAHMugJ/vo359j5Hv
aG707ua62nc95zny3NXPa+YFvtK96KboeY9/W/ObeYPT4bqhfesl8bhf+PIe
6tvhujCf9TiaVzDzCb9L9A8/+gcz//Cj79G6oT/qZb617wc+r4N5Pzpv2fKQ
YOqBM8/hc3C7357H80z7/KziCOi5Ds7KzkPnO+3wnXby/dNCeYMWx+e5/6b8
HOdr5wXAzCv83FdCR17aYXy5n9bVL/WS/674813FTeUFnLebi7ea7zYP+V73
edGZ73xnuyk6853vY54VX7433ijP0s45mUe50fvA16K3vAvznXnfrejt3pf5
pR7zSz3GB3/miVu7eT++6uKCUVwPP9hxF/XBxHOM23E9fGDaB/sdruMyxyWO
W2jPccjoHAC/4y7HKT6vMc8+ByCf42aw3/k6jnMc5DiJ8ee5YqpxsR98ToY/
/dBFrWuf+5ADnOtmM4y7GV+eQ6aSm/Z8zoY//VyLq33OG53jHEc7zsY/Ylfw
j+B5/F92cSD94D8cJ6S9flV2Iv1LO785rsJuoGf7Xb9Hwj4yfjDjdVyaeYQ+
bkn796rsFuN3/O+4DvvCeO33oec6e9nlAVLPL7tzWp5z33fn8jyHvO/OTfgP
r/fMw2y6c2jatUW3Hv3e3edCv78/evrL/XVS9aHn/jqp+twrUB/95+8K3lT/
Sb+RvDe1fzMff6n30xeF085uiz/9+kPh/P8tvK71lH7qoXDa7W3x/x+GqZHL

   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxV3QfULUXRNeA5Zw5+ICAoAoIgUYIiioCAikQBCYJEQZAsSM4555wzknMQ
CQpIzjkJiJJBclYMKIL+9dze78J/rdtr6u1T3dPTM1O9a1f13BnW23LFLYZd
1805Qdf1dVys/vjqoOv+VPLEVfHNkl8p+YhR171Xf79U8rt1rD+7yap8vmvy
eFW+XrpzVvlUyZOWzjwlv1ryN0rhGyW/XPKRJb9fv71W8q11rrfq+LkqX6wy
YZWJqsxXut+qMnHJS5fOd0p+w9jqOEsd561yS9W/WcfPVvlL39pOXWWu6n/+
0nu95NtL5+2Mc6Gq+16VyUteoo7frzJNyVNW2ymqvFPynaX/bh2/UOWukt+r
41RV7in5z+l/x5IXqbZzVflzlQUHbQ52qvqlSl6gyqJVvlx187iu6nvqKn8p
+b7Seb+OM1Q5ver+WXrLVDmn5B/WcdkqK1RZuMrMpXN0Xct8Vf5Wvz9c5aEq
V9Rvx1bdAlX+WX9fVOXjqlupyq5V95M6fqPaXlb1q5a8cpUfV1myyler/gd1
nKOO3zG3JX+tjt+tsnzp71/jW8s8eR7czyorVv1BVb+2fko+ouSflbzioF3f
YlVuGrV7sniVPUper36br+QHSvevdZytyirV9tD6e4P67YKSz6/yo5KvdE1V
Vi95jUHG5dkYtXEtU2XTql+zykIlH1N9bF7yT6scX/KWdVynym/NT/29bsnH
jdpD+bc6/Ldv41qpys9zbctV2cozUMeVq5xU7barvzessk2V9assUfWnVv0O
JW9U5W9VFh+05/SW6vN39dvG9Xc/amNco8oPq27HqvtHycdX/ajK37t2HvPz
rSo71++bVflhyTNWP7u65yV/ueS9S16t5N9XP/8091X+UPK/Mv7lS969dD4s
ec86bltlFb9V/YElD6pMUvL2dVy16p8s+d91/HGVE2ssi1X5VJWnqv6jqlu9
ygol71v6/yn5RyVPWuW/Je9vjuu4eZUtuiavXeWZ+v3jXO9+Vbarsn2VA0q/
q7Kud3LU6vet8pPSP4JNqHKoOf6fNuSfVTm59JeoMkGVw0pnVGVj4662n63S
u546HlzHYZVTSm+SKv9X8ql1/FyVCUv+zKiNdzfvTv19VJUtPcc1t8eUPL5r
qn6Oq+MExlryCXX8dJXd/+daT66/T6qyA3tSbU8peaIq75f+lHU82jlKPsu7
WOWMKqdX2aPqv1n6L9dvE7N9dfxMHXep+tdKnsQ76jkonXmrfJZdM+eDNua3
Sv5cyXuXvHvJF7q+Kl8o+dxBm++3S56s5H1Kfrfkzw/aPJ9fx/Oq7F/y41X/
gftZ5dt1ngWqTM5OVf1pudbTaq5+WOXzVf5c9VNU/SFV/7vSnaH+vqr+vrzK
mVUOr/qz63iEdlXOKflINqzKGdV+hSpfqHJ/tb2sfru0yhMlX13HX1e5yLta
uue631V/bvV/c9XdVfI0JV9S8rXsgne3dD5TdVuUvHzJF9fxhDqe55msc1xf
f59c8vrV9qzSu1E7z7f3uGvP0Sj37spBG++l7OHYeKvcPWr9/brKQSXf5jrZ
h+rzgurzDu9oyReXfFfJT5X8ZJXflnxvznd1lesG7ZquqnJ/yTdUubDkR+t4
e5VflXxF9fFwybdUebH6+Fv9fWvJ09V5f1m/31BlaM61KfmRQRvrjcZcug/W
3zcZX+lPb57NadU/Xsc7q7xebT+ov+9hF+r4xTpeV21nGrXr0+fGVf+Hqp+6
ypNVHqhyjWe16h8y9yWfVfozV5nKb1X/RB3vrvLvkqep4/WlAyBMX/JtJX5c
9dMO2vifr+Njxlny3FX/+5JvLnnx0n/RtbPDVT9dybea55KfLflLVe4Ytfti
Ljat+peqbkbvjvNX3RNVtqn6eavMWnV/6Fr9PZ7Dart6lVmqvFa/zVzlvqrf
snRfL/nLVd6s8lDVPVtl66p/o/6epcpzXat/uGv4xRoOJ7xVv81W5XfsFPxQ
8uyDholgH3hj86qfp8pMg4aJ4CEY5rzqaM0qs48aDtInXPT9YcNG8M8Sw4aF
YCr4CA6CN2AiOAbegGWsM/AGHESGi5YaNmwE2ywzbDgHLlpy2HAarPX5vuGi
6bqGr+CfGbqGl2Ct6buGi+CWGUtepPSfLvm3XcMzMNJMJS8bnAMXwUdwEewF
R8E+8MmdwUizdg0vwUjWenjJWjm7execA9vAXfARHLJc8BJcBN/MmTHDOzAS
7AGfwAPwyrZ9w0/w0jLBS3DScsE58A3sBHvN3TVsNG/GDCvBIePW377hEnhp
p2AnGAm2hGfgNngJTvp218YFMyzYNRwCd1i7f1V97jVqmGsF4+kbdloJrukb
XoJx4KRFu4aRYCXnMC6YAC6B176X64Wbvp9xrlptV+4bXrqi2u4zathq9apb
rW8Y7Pz6e8NRw0MwFPz0g67hnGUzZrhpuVwDTAVbmdOvlv4LNQ/j1e8/6RuO
gp0WHTU8AAPAOPAL/LBW37AQzOOFgavgEzhqpVwL3LRyrg32gY1gDJgKtoJV
ZmBD+oaRHg/OWadrNh8WgjN2CY6Ck+Ala8FaXcNL1jU4BB6D4b/SNbwEI61b
5cI6589HDc/N3Df8BC/tGuwEM8E48M1mXcNdMBIc8mRw0UZdw0hwDhwyW+nM
2jeMBF/BabCLscILcANsBf/AG36Db+AcOA0e26Br2GuLjB9WhU+t0SsPG36C
374/ajgH5oF9YKZtS2e1YDz4B07aPmNeY9gwk/t4cd/eO3OyXnAObLP2sOEf
mAcWg5tgEhgKZto11wAXwCEwETy1d9cw1O65TjgLtoM95u4btjnIfR82zAQj
uWY4BSaBofbLXGw4bDgKLoIfrMvwxKvBRQd7XmH+UbuXaw4bhoPZ3ghuObRr
WAvmgkngIpjnWHMRPAZTwVZwFIzyVvDSUV3DSPAUjPFacBfMAwPBD65l7WAY
uAdegusO80wEj8FRcBO8BG8c3Df8BMMcFDwD/8BOMNMvuoaNrHHGc2TfcCR8
BQtYz63XV5XOIaNPMA6Mof8jgsfgqHWDqeAkeAmuOqd0Nqj69fqGheAlmATe
2qjqNuwb1voNbD1qeMdYYAxrLp8STrqka2sxrOTewER04CX4Du4lb1L6G/cN
I5kz4zzf81N1m/YNL8FKsNGVXcMssA78AB9dnTbwElwDh1xcv287alhny77h
JRgJ1vpN+oeLbsiY4SvYB95YuPQX6hu2getgMdcPf92Y63w7OBluv7R0dhw1
/AQ3wTu3dg37wEywzdZ9wz8w1bvB3sdU/R7BUfATHAU73VX1S/YNf8Ab8A/M
A1t8GOx0b9dwFLwEnyzWN/wE/8BIcBEcsmdwESzVBRPCIfAO3AMLfY7fEP4E
poLHHil5s5JfGTTs9ONRw1HwCZwCS/2+azhJP7ATzAanPdg1DAU7/bHkpfqG
nWCkRavtVwaNC4K/YKlnunZt8BNMBeuQjR/2gZ2eL/kno4a1YLZvVds50s+f
q/+bhg1LTcKG9A23zA/jDZo8QdWN3zedv3p+h+16P903DIVfmqjkCfuGo+ar
3+ceNPndQdOZosrX6vc5+uZ7TtY33IRT+rjkB4cNE8xT45x71HDSP6r+tuCk
yTNO8nuD1nbaKj+oum8PGu76wHsQjLVAHb+b+g+r/u5gI/gKJjfn8Das5X5+
oW/XC1cZ+zsZ818jwy3HsIXBXlNlHvT5zVGbTzjvKBxDMN+38DCjhsM+GDRs
hd8ZVN0jWW/mH7VrhLE+qnb3R/72qI3ZnExX9V/q29q/yaCt1fDE+KXzRNbs
mfrWJ/nfJd8b/PfdnNdcTcse9u2841Xbx4InvlPyw/FRT+DHj5q8U861ZpXF
6/ev5Zn5Y8m7Ddq64NmAxYfmdtTaWJefrYp9Bm3N/l7VPzps6/pJJX961ORZ
+jYGa/y367hf2k5Yvz+d+l0GDfsYw3eq7qBBW5cn8pw7acmz900Hflg8c6J+
xYyT/mTewWFbR1ep4x6DtnZvPWh4BGZauHQWGrUx7zVoa/767EnGw4+ds2/n
s2ZPXPXPp371XK91/8WSD488aen8adj0v1vHQ3Lezw3bWrpn9b9QyScOGjb4
St/OC2M8Fx0YZq1cO8zwvZKPj7xO+tT2G31r7xqNy/rP794g47HWf69+X7Bv
dnbKGtubWXeXgUVHTX6l6n4R/R9U3ZGDhi1+UfLkoyY7/2cz/nn6do1ww5TD
Vm9tXa50lx01Wz9/3+bf2j9f364XJjidjztq8tR1fCc6k2X8B1Q/X6z697Jm
TFHy6zmXMU4+pjNsMm7iy97TrCU/Sp/Wy2n5HZG/W2P4Tt/W+xmq/h9Z+6cp
+S/DhifuG7R1zJq3ovd62GzHf+r4zKCtH8tnPPT/GP072e1Re57ZurNLnnXU
2s5Wx4+yDq1c8kqj1s+ifRuD+gWHbc61/d2grUvW2uciP8Du9c2Ws/8Ll/7L
WWu+37drtw59tfoehCNYreRVR20Ne2rQ1iLj7N27QatfI2Oz9mw1bOez7rw/
aD4mX2yJvrW1fs1R+qO+6W+RObHmfq3qx+ubPGfJn+pbP5sM2xwZ5wuDNn7X
slbGaa1aPGvTpFW/7bCNjb+/SMnvRF4s66DX3FrG/uABvs52pR/2d47UW5/4
/+NlneLv/1/WJtclBrHDsK2vbJz1i/8+Zdc4gzmjYx3DG3wqsn6myO9fj84e
sSfrZz3Vz/hd8+P56jN3jT/AI0yT9Y+MT7CuWIPwD0tkDdW/mMjcGQ/d+dLW
Gj1P9HcettiMtfDcmoevjBqOWaWO/xw22VqJo/hM19ZP/UwcWf20WVsXSP//
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
Vtf2OZ6S/u+ML0b/gMj2A/L7fpHr5fedljHz35yL/yQ+p178VF766WnLp8EV
803E2MTaxCj5APwCvDH8Tz6la5zkWZH5bmdkPLhm/fCZ+Be46FO7htfhdtwv
v+D8XBd9Ovht3K/rxfc+F99EWzz0eemT70DmXxwWnV/lvTk7HAEfCD/Mh4Kx
8ZyXd82nuzRj5iPgiPkC+GAy/wmnfOH/yPhDHPUGaetc1lP1Z3ctnxl/i+ve
Jc+A92XvPDPu45vxQS7q2h4xXDGu/tnI6vkVdOD3w9Ona38la7dzHRP5mkHb
s3Z5xnNi/BH7ufgSfAr+AU7pyszzJpG1/XnmxDzD5L9J//aXXR0d+c/Xpk9+
0LUZ5/M5L7v9Vs5Lfju+jHnePH3iyd+J/3JF1zhhsj1cr+Zc6sUyzsqc4ECt
C3hsOWry1uRIy7WVawrzy3+VB2t/E//l+vSDAyXfk3XH2mwtfS9t7WNin+Fv
a5E8VXuQpu9avqkc1Bm6ln97a/qXc0sH/peLe2t03oq+tnI87N+xz0j+rb1M
M3bNN7wuc/JSxqwfubl3pB/5tPYs2a8kZ9U+JXuU5NbemeuVu3tX+pdPe1eu
BRdHX14QTs955R3Zf31v+sEjydvAm9nffUfGJi/23vQp5/a+6CwdeYbMibby
PT7ONeK+5OPKmZAvIR/DvhF7RuSs2qMCi8rXtVfH3h+5EGR7dqaN/qJd2+Mj
l8NeY7m2D6cf+3rkTth3LE/3kdTLl300/cj7tcdm3a7l69q3s07Xcnkfi85H
ke33kRv8ePrBfT2Ya1kw/dg39M+ca0x+In0CDk/kXAvnGvVpH4884LE8AvJ6
XcvvtW/Hnh35vU9mPB+mzUoZ29PRkSdsD7MYvTxaeaviq/r7Q/pU/3Tm1vN8
d54Z7bT/OOOULzu2v5gMn/MRnk3/f01b990+YueCk+Xr2nsl5i7/VfzRPhT7
huXCwrTyd+W4jtunE9k+Hbm28lr37hrGpi8WPFnq9+lafuyraStP9PX07x0X
xxLDkltLx74bOa6vRWeZyLvmvK9HR+6ufTj24Djnyzkvnk29uLP9vG9GRw6t
vRP2TcjFfStjlnP7duzMcpH3yfjZH/t05Oi+FRlHp599u7Y3+b30KbfWPpoz
uxb3fD99ytl9L/JtuV468mzt0zk5cyLWKM54fWT1YsF/zjzYJ3Jd7Kd4n706
9unId7Xv4tau7RMRR7ula3nO9pPY8yK+9kF05P1qa3+NvS3ihvZayo/8Z3Tk
6f49/cvRtVfEfhm+1Yt5TjwvZP6m/F57S+wrkXP8r/QzfeTbupbf+2H6nC19
ipvIOf5H6qeJfH3kj9InX8v+FHE3ebz2ouhTnVzksVgWmf8i/9OcPJIxyK0l
y/W1t5n/Yl+JvFzxF/tl5OuK78yc8xqb/j5On1/Nefk7s6VPMn+nT5/ayge2
b8V51ItNwenwyVxpK0fXnhR7SuwfGHZt74jvm+BbfJ/E3hI5uur8Nn50Jko9
Dmei6Nt/YZ8tLgifM3H0ffPEfhY5qzg0OazWUnWTREf9pNFRT8b/+C6KfT2f
7trxc9HR/yTREbOQL8jO+86JPS24IDaerWe/7dW1t0Ru79jeXXy7OvKUqZsy
8rg8377pWnutwWNrPtkaOm4979v6KG/Tuawpd6aejfSNE3mxOEBcExlfJL4z
TfR9l4O8WNd+00YcyrcyXJccSMfpco1y2u3fkXNlrbCuWFPsH7EX1FpmraNv
LcJJ2Vu6bI5y0eShPZ621hm8lnq67L2cMDbfumH9sFbYP2JfqDURR0THeiLG
oV4+2GPR/3Hstjwq76k9KbPmvOIjxikHT91suRYcBRm35vrk3Mi3sffTfgqc
zKmRt827L7fMmmJ9IbMDvoNhb4g4Cx5VP3gPvJN8AmsInsTaY91ZNPr4KMc5
I4/LAc/zgFOynlnLnP8bGQ++iDxh1j0642f91P8YF2QerF/8J36UHE6clXyp
z2Ydsz5Zm16NbJ0Z27cp5mK/BnmvruW6sKHsp7pvpR7HNV9ksYzv/I+OejlZ
1hBrj7UF7+Y7GGIojvKorF/WUPLkWT/pW6d8b0GfcmzYb2P4QuyrNYC99c0E
+StyVxytAew/209mm3FY9ifK2XCUA4ePwkGR/S4+smDa4vDtGRPfZ5vZcbba
fhD11o4PU89m/zfjmT42W+yf/RQvsLdQPF1OPvmWrvFOdNh4MUB+Mh/ZnkF7
LXDd/HV+uzxh+dtiuHx5WBVmxZmw3+z4GN/FvrPtbDwZvyTuqy3ew35Ae0jE
6GFhOB4uksstfopnYJjF1/AMD0QHTyIfWz3fX94y/YW7tldo7rw7bD5uAi9x
R8YJVx+dennO2q2Qc8lVFufFCYzLK+8bR4GzWTE6x0U2D35fKTryq/29SNfy
wPWDKxjHQ/Qt5/mIPP/q8SsrZAyHRgdfgTM0h9ZBfawaffnP7g0fX4x2tdwj
/u6qY/2P2npW/xrPkXeN38z3FmeE3+F73IL83rVi08SE5dSK28pD5huwpXwC
Mr4CjoOHYCE5v3J/cRp/Tj2OQp6YGNPZXcNccBjcJS9OjJJPLe5Ixie8Hx28
hBwnsTC+pBiVfvAAYjHW6Je6Fn92XjFl+XLig3xwfjzfXo4W/5h/LqfL7xtE
xzxsEB05YOJ9fGdHPAIOQS6ZNnxtOVpii/xHRz483/ysnIu/jCfYKOeSR7dx
dPAo/Hw+/lWR5XfhADaJLObnevnpfHH+v1wj+xHkMODi5CLJScInwIPwIt9c
u83Tlq+/edrKvZKDhccQS9RWfFAcUr04oPylrfPu42u27T/Z0yGXAy8Kh9Lh
y8sJUT9X3nf6fNWLM2bX6/ftoiOPa8vYJc+5enkgeNPt0793WT4HH9D7tUN0
2IYdY1vYHDKbId/DnMyfPnfI+yjnY+fYBO8CDki+B9uwe+yDsW2f/vWxS/oR
690w9x33uWvmXD+75b07IvJ/03bXyOfmGfNcedeci62SZ2KfgPwQ7+iBeWfZ
hn1iH3CEuEI5HuzJXrkWtmiv1OMI6bND9PFZuCx5/fvmvWMf2Bo5IXKX8E1n
dS0Xhc4SsSH7xabhGveLvrV4/1yjejwmHvL4nMsYTk09ffyia2F78IVyYcdy
Yg+KzA7IV+A3TRt57BsI7A/eT57DQZEdD41dMp+HRWYT5Byc2bW8gyNjHy6N
zq/yHrnemWJLDo9tkZ9wROZB/iH513lP6bA99mCwdThnPOLR0cGN4cjE+tmA
42MH5Dkel3dKHgJZfoK+j84YjOeYvAu4Om3lJ1ycejp4NXEXz5177RmwZtkH
sEfGoy0+8ZbYsRNyvcZzQvq8Ijqz5fnVJzvGXuIT2V42gcyOyn+QMyqfgf96
Sq4RV4e/Y4fYn1Mzfjbs1Ohclznh88oHw2HN2DW+64zIcsTOinx6ZLEU+ZjO
e2f6dF62lO1yXnbeunx67I/+zkw/2p8ZW+FbiH6bqWtxIDGkcTnbfftNvX0z
1i1rlm/syDcTc+FrnB+ZrjZjMZ9z05ZdOi/2ga3RdmzdV88WidWI5fjddxTt
//pKcAu+b6W0uzDnkremHgeIJ7w4MtslnsROqrsk9Z6Nt3If7Wsz5kW71oe+
xmJEYkv/ib0S4/lv8IN6Ns0et8sytosjrxw7Rp891Nclqec/+k6QuJicuKsi
X5LzGpt9anT4X45XRoe9I8Mh4kjaqts/1wjbwFpiSOI85lOcDHYS8xEf8i6y
cfLiYIyHIi8a+3915p+dFBNil46PvEjmSl6dPszZtbl3v029fly7GNjPgsfE
hMRkzJsY2wax+ddnDk+KDpt5TMa/cDDVjZnD63Iu/bOlYkjjx2aSl4qdvy1t
+aS3ZA4niAyDmVs5fGN1t0bH8ebIrlcMTOzI2MSutgsew69dknt4c+7FadE3
P+6/Z2LV2Pk7cl3s+Z0Zp3wz/eDoTk29GJT43q/yLOH07o6Ob/qRxarkkYkJ
iQep85u1QH/6Fb+6J7K24lfiWNYHuvZIXBZMpd66YH0Ru7IW+BbNw+mfT+Q7
Mud0Lcb1QMZwbvTZf3sftOH38QEfSlt2Xz/W+gcyTm3Fsozf73Le8Im4RLlv
j0fGNz4a2TcMyWJbjo+lXnyNbB2Be/UztudCvM06Zt/EE2lrXRDHYqvtg3Bd
fL0Lom/9UvdUrvfRtNX/helLPxelH+uL39WLm4kv+O7H1MHS+hnDmWI/bLs1
8bnM27mR4VhxMLExa5+4nFjdWB9PZzzWJrEoa5B7Jx4JV5t/eXjWuLF7f2me
nXvyDPj9hdyjK9IPu/dQ6t0j/vWL0Zk98q3BAM/kOfllxjlrfv9T9OFtcUex
OHP4Wq7916m/PPMvtndX8PMruRdvRN+9sC7K94OBr4h9fjhr9JuZH/dLnHgM
27+Ue3dN5tka90H60afjG5EvSz8w+2up/1qeHc/euG88DVtsjx+At8Zxw0W4
ON/NESPzvUHyS11b09/Jea8p3atH7VuEc+coPvVbscVR+7agdu+ln3lT55nx
/Rjf4PP9Pd8h9M0dvKWjv6dKP2T8JD7wr6lnw8Wl2HPfytPP14M93s78G5vz
9l37prHzTd+1mJ443wxd+6axb92Is4itie2Nxe7IcILffdcPnykuJ1aHe3wz
12D8YnRie94JfodYmjjMrTkXbvPutJ0tazp9ax9/R3xuLBZH5vs8mH74Lw/n
evGQvlXmO3hiTOJFYnJiRrfX8bZR+/4dH1xMDk/oOzy+nSfmdUvkxbp29Bv+
dqG0831dnOcg+r6f45t6YmH2RvqWnNgTHnK81N8eHTyqo3q8qO/r0F875705
4/4gv62dNcs4rVO+Fax+na7F68T/cKdy6uwRFfuyF9F36MTOxAp9Y2fsW77k
sW/omZOP8vsE0cEf6gfHiD+0XxQ/6Xt0vl+Dt3wi5123a7l2dMTlfIvBMyAe
ev2o7ZX9TNppv2vqyXjRpfO7+NS7eYY8P3jISaN/46jta/VtO/EoMSqcoT2q
vj9zUHR8/w4f6+j7PmOxOPI+XfumLn3xMsfPp+2477WMGpdiP6TvwYnB+faD
b0D47thr0cGFiqeJt43FBslsqe/WaIsjxW9OFdl32JxLPMv3eNWLnb2Ta8HJ
sLHiWLdmzRKfs5bx48TGxmJiZD7d+7E/YobvRl9s7e/pByfpWzK+7XZD7J64
F/v5z8i3ek/reGf0Vs213t61b+D4NpzYk6O/x2JTM6T+ruhcGhvL1sk78L0d
32u7rWuxHXuZXuhajEusCy/q27C+gSOeJb5Gvidzri3O1lFfeNqP0lYcCsf7
5fQv7iQWJfY0WZ4B93rZPC/7di2W5/snuFbH2SP7LhpZ7Mm3Yf0mLtalz+kz
rlkyNt9mI4tn4QbtgxLjwrXav4RfFacSr3q5a/mH9j7hWvGuZPyq/EBzIvYl
n1OsSJxIrrLY1aSxh3Iv2FjrBdm6IJ7mvDhJvK7z4njFv5xXLEzcSZ9yksfW
G23H+hr3/wL07VxsM3+OP8a/s+ZYe6wdYohyJu+LTfYNMvbfcYHI1hPfhLWm
+HYZeWztmD8yXW3Yeb+rfz+2Wqxohdgx+QfyB/4V281ui8/QYQvZRPUr5vcF
I/umtG9ysT/sufgQHtW3Q3yTdb7YJONgl9hvdnz12POFI7PBvhO6ZWyjerkE
YlLiRmJG4kRksaHFo88Oizs5L1urzm/ssHEZH3v7cc5n7WA/F09b+c9iS+I4
YjpkucoTpC0bbv1aMv2IT4m9iVWJK+HZcezea7GEW7pmC5bN8+89WHb0yXdB
6bOd7C77y8ayZeTd8u4sF311y0SH7V0udoad893JM2I/fffq4Ng5399k65aP
rN7R3+yYmJrxi4X9KP2wh2yscxkL2/ij1PudzNaJk7hG7zSbxcaxRWLe5Bti
91ZOPZtD9rv4jDgNe8POrRob4rhaZN+88r1FdoktpY87FbemxzbKnxer2zS2
Qlu/i8+I08hDniX9sBVym9WL3YjraSu3n01bI+eiu0bsCa5SjIGPjIMV48GT
sFW+4cherRX5kdjAtSLjIsRj+MV+Xyt2hu8vNrNw1/xu8RW+J75OPIDfh6fV
ln+KE6OPN+Dvi6nwYXGnZLwBPlM/fHa8jXHiB/jgxs+f9f1j3w0RyxC7wAvx
nXENG6be923IOFW//Syydj+Lfdg1f5N9P9g3QcQd+N4/jyx+Io7CX+a3ui7+
lLjwxrEJfDRxEf6Fb9Rou1F+3yQ6jptG1tcm0YFp5ZzBrvg9/fDv7D/eOe8d
Pk3s5K74d2T4H+cmhsE34SuJbfBZcIlk/ppvrNpXLC7ApxMX4YvZh719nkMx
OrG6sX20ZGuKPfLa4yrFKLeJ/oPpV5/8pe2i4/ftooO3dC7+Jn/NOPkF4gbO
qx2fx3dZxS/kl4pD4M3sZ1ePk3wic0G2H3mnzAnOnz4e0feofJMbbpd7xj7j
xvH54gof5zw75Fwvpi/9iIGYZ+eRy6cf3L5vfetXbBEvpx/c0b9yPueyprl3
1jWcnbXBuoB3ksOtDk+Pr8dH2T+6b8aGL9sr/TvunfPiicl+x6Xg0/nCrmmf
tMWrq+d/4x9w4nxSnItvVsBycpx8VxiPrW7/1PvmsL/FtqybfDPrKa5bP3xS
3x53LeKVY+Mm+26Ebwmf2bVvC/tb/Isfflhk5zkk5+W3H5JzOR6aero4a3y1
fK2DIvMXxTj5jPJS5I/CEriVg3NefLO2zjl+9PnF/FT5NGO5NGT+LB/xqFwj
2fXCF3wCuaHwBuws/8y6IG9EviNsIC9Fngp/yjp/bPS1JVv/+XFyXPh0/Cdt
rb9yXtT/LWv3iannE/GXrMNkuYwbpS0deEFeinrr/hLRpyP3xpj5NHwduSD8
HX6fcS6dtUA9fwpulVOybda7M3KN/BS5gGNr6GmjT/wXsvVWHoU54XPI2aD/
mfgf+rFWy5WQMwHDW2vg73uDN5yXrwTL04HnxVU8A54LOFwuBUwut0F+2xhm
Pzv9yI+gM1WekcPynMyac1kP5ULIRZsudoLtuDv2W/79RsHpsLi1zppgD4C1
AH9Ltm7gTulvl7Xigujoh01ny9k8NpGdg4FxL6PY9otyLjpyu9lDPBL5wdjI
S1LPFl2acW6Yc1mH8Cfqx+yia2GnvH9X5B3EvduX8q/YDXZqudgkMvvl3b08
+uovi86e6YctwenJC5927N0dtff34Mjmm52g4/11rTgdj7x3+arU0/912uLK
yDPGDtHZP2My1oXyjl+T+fPc4i9gZ3vDb8iz6tnmz8OS10X2nPMj8Fr+rwxH
/NS4933U2m4XO6CeLmyP91g8uMUzAM94Hs6NjFvw/zT4FoE+bhx94u+T9a2P
m9LPTfnb+26f/nUZ29hYfb/L77dEByfk/2Dw/0XxiX1v3XdL1PnNO9tHXib6
t6eerjaXpu1dkeFMHIL/6+XuyN6jLucd59PkHL51cHr6su97uvRpDOel/bld
6+Pu9Dl9zkXXe8p/ds7/B8wrjrs=
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
M6yrLtb1X1BNv4I=
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(2\\)]\\)(x)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\)(y) Density Plot\
\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.8487452303807077`*^9}},
 CellLabel->
  "Out[414]=",ExpressionUUID->"a97dee12-1451-458e-ac46-7fb26d16a954"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyFnEtuJMcRhgkDPogf9+DOj62PYMArv65i8wiznR1hc9MwMC4TbdAtAXRT
ojEaU2Q31cOhKDX7BJalrvki8X/ZpSEE5fyVWZkRkZERkZFZ/aNf//FXv/nB
0dHRxz88Ovqu9N/JT3/57X+nx4mHwm/Ofv/tfwvVLwvvq99cF/5sfFD4f998
93db+M/799eFf/IdPPmi8F/3r78t/PP9gI+FX+/7fyr82z2BXxce/3bCjc/D
5VAYfrN+WRh+wfALhl8w/ILhFwy/YPgFwy8YfnPedsJtHg/z2crkdxC/g/gd
xO8gfgfxO4jfQfwO4ncQv4P4HcRvr6eH57Hx6RJ+wfALhl8w/ILhFwy/YPgF
wy8YfsHwm+tuJ9zW4WE9HTq+sr6VOb9Lze9S87vU/C41v0vN71Lzu9T8LjW/
S81vb2cOr8OhmzfzBXYJv2D4BcMvGH7B8AuGXzD8guE37eZOuNnRw3Zm6PTS
82a+wC7hFwy/YPgFwy8YfsHwC4bf9Au74yk/cdiODt26s1563swX2CX8guEX
DL9g+AXDLxh+0+/tjqf8IPzabtqueN1ZLz1v5gvsEn7B8AuGXzD8guE3/fru
eMrPw6/9gu2m7YrXnfXS82a+wC7hFwy/YPgFw2/GLbvjqTgGfu337BdsN21X
vO6sl5438wV2Cb9g+AXDb8Zlu+OpOA1+7dft9+wXbDdtV7zurJeeN/MFdgm/
YPjNuHN3PBWHwq/jFvt1+z37BdtN2xWvO+ul5818gV3Cb8bVu+OpOBt+HZc5
brFft9+zX7DdtF3xurNeet7MF9gl/E7tI+D3cNzpuMxxi/26/Z79gu2m7YrX
nfXS82a+dl050vuiypGfWeGx3WXhfXHySeFf7P/xuvDv9h3cFB75vVf9pvDI
/0PhH+/7/6rwKK7tJJ0uoQ8MfWDoS7wpDD1gxnf9+Hxe8pmSC/Vg2oHHclUY
eYGhD4x8wNA3NQ/mG3rA0APOcW+KPjD0gaEPjHzA0AuGXusJ4+S8rSS/leS3
6uRoulOeK8lzVfSCU74ryXfV6TX0gqHP82i5Jd4Uhh4w47ue95DPn/YDf9mt
I+rB0Gc+wYyT87Yp7BL6ptat1xH0gKHHemy5Ww6pR5vCuT63HZ0u0845T/RC
pfMrL8oOpF1a6L1lZ09TLtcT9tX7Ptvb004vc5/wQnF0r7cZd9o+n3Z6lXHM
C/n5pneH591+1fb9tOSZdn0hv7QsnPo0lz7NO7uS+6qZ9Gsu/ZpLv+YlD97P
OG+mOGgm/ZtL/+aS07wrzSfycDvqXeZ6mssOz7Vvnnd+IveZ884uIy/bIdpn
nNvkZ7uUccbQrZP064vJef+Q3814q/eD9jPYE9pnvHVZ9bTP+KvJw3bX8YJx
2oXhA3HNouqnSvrDnlhelMiHescF9nOsD2PGQ16WJ/0hL9s9xzOZz5qL/1nV
Iw/Pu/Ne5tt5IvPrfbfjM+qZ75TnQ7evs59zvs/x0dQ6xR7mur7u9Jr3M267
qfUNxl+A4dfxHv3BL/XYP8d7zu9N+a3Ddnuh9stJOwT/XsfOjzl+pD6fr7rn
yMfxJWXqR4s36Sf1YyV9WJX8puIy5Gl5pV9fFEZettNT69Z8pdz6ONpxrEv4
pV3mOe6VB+jjTvj1Ps1++fv3cYuuve267ZL3Ndb7qX1Prqd+n+E4PtfPpuRj
+dEe+eS+eTj2vjXjlMWx961Tdgqc494ee19nPTadlJm3e+j4zjxXe04Jv45D
vz8uHbo4LePSReeXjZ2Ps7xyHno76HXreZ6ad+Q1Ne+0S/5Pu/1X5tvmXVzu
fJ3jEufnnHdwvs78Oj/ndU295xl+nb/zPs75SJ7DP/sMdhzUI49svzzO+mvZ
nZsJu7vVucRWefut4uGt5mVbdOb4W9F/WXymXfe8t3N+5tlxNfObduO22w9R
n+MN2h86rz8TPYPkPOh5v8/L54tu3+M4MPNciy5usF/Mcwbv5xadnYC+1JO5
4pDXXRyW9S1uSbu91DpeSn5tn4teZtx4Lf1s54DMc9r9tp+gH+SRfAzVL/IG
035qn+i4AX58vul4hHUE3T7Pc/yR53/3ils33TmQ4wuvW59HOp7IdT1XHv6y
O59zfOC4MNvfd+dU9hO2o3l+OOv02vPqecv6Veen7YfAjO91731NxjE33fmV
/Zv9t8eZsitpD7aSA/nHl1XuH599Wnik57PCI11v9d5z188o/8+rPzDvg2k/
ymFV7cGMD+Z98GE6WjnK46RK2k89/8P+Hx+r36vCo9zWhcf53Eg+W/Xb6KDe
7cd18qqe76f9m/8UHtfff4seMPJyPfJFftRDPxj6wcjX9fQ36tk7td922PM7
sn9X8s35u6p6+AFTT3voB0Mf7aEfTH3qz1btt139uO7ui/4RP31wHj3v0E89
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
82vb6i/l3/pBLmN9+47ZcazXJeOO/LTvvnme/S66uIr69N8X8q8XtZ7RA9qD
M79y2a0j2qOXzAt6Cd35XeGF9HYhu3FbOPePb2odUZ/3pj8rvv2deq6LRWHf
K0Xe2D/rPe+zrpC34yXqU69a/JJ5gdsuf+l7327v/WXek5zr3smF1v1CeYfb
wrZjjEM99GR//3i/Lv5W+23mwd9ZZZ7xvPIdYOST997elP7Bb+7HbnTus+rs
CPqadqN9j0I976ddPC3/jT6kHZ515xdg+Mp7BIP8/WPh/N2uz0q+Y7uWb0Lf
8nvidk6Y+aevuv0B+pjfdT90djfPY9rvwDi/5Hvh/p4i4/6V4rr2OxrIN/fJ
sy4/7vx2+q1B/vWxMHSl/r7s4uDUz3dd3nxs174LSPvyUvJ/191L9jkDfDqv
NLZ70vq6KH3Me7z8nsFH79t9Kjl9Uv2D6d/t815Z+x6Z9qmPfV46vxf96L0c
WvyU37c8Ke/2VO1zXmbK18zK74PH+b8reeV+ZlZyB498PVb7vGdxOZmHTL9G
PuKfut/b4t38XYi7wtCLPFNfWr447zM8VvvMLz7Ij2zqfTDvj+03kk/LZ7Hf
HvW16d9I779KX6gHow9TeVDaQz/9Md/Ug1O/ttKf7Xs7/feib+TvtvDY/l2H
mS/ehx7eB9PeGPmNetD/bhP+Jb+3uNK9ifY7TLmP2da82Q/m+mzxlP01+P/2
UqxD
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3QnYdtX0BvDzPs95kJIkQmlWpn8iQpmaNJlKyqyRKBWJhDSaQilRNA/K
EKIBiVQUlaEkCkUyZkpm6r9+77qfK9f1ne+sZ5+199lnn2Hf615r7XfVnfba
Zs/JMAyPX3IYprV/e/1Yd2EYfl7yvavgt7VfqrbdSt6oyn9T8hNrv15tY8n3
qvJbhq67a/33jCr/dcmb1n6T2u5T8iuqfP2Sby15mdkwPKnkX5S8U5U/peRf
lnxOnffZJT+5tqWr/E9V9sDanlPy6lX2lZLfUTpblHxbyferdp5Z8u9K/kjJ
r6nOrFzHlyr93zte214l71nbH0t+Wm1r1/aY2vYs3WdV3a1q+3od/3rV273k
X7me2pav7aPV5t6lt1od+0rpPLeOr6Hdkm+v/UNqe1fpvKl0tqtjJ5a8T8lr
lv5z6vfqdfxxtR1QZTvV7x1re2PV3be2O6r886W3fZVtVtvTa3tabUtU+Ytq
/3+1f0ptl5TubvX7VbU9otrfuvbPq+3cKt+ntg1Lfn5tD3dP9KnOtUv93kYb
1f4OtX9YlW9fdber7YX1+9TaH1p6j63jb6o2ttW2e7TQ/d2wtvPr2Afq98G1
rVI6/6yyrWu7bNb92qq219SxDWq/ZW0vrvK96vfjS94o171ubd+put9xnjq2
U+nsv9D34eA6/0G17Vq/v1U6V5bO60p+5UJfxzNru77KDqnfr6/tIaVz2EKX
36vK1yj5qyUfXm1+v34fUL+vqf1ba79HbW9f6H7o8/JV92+5rh+WztNr26eO
X17lV5T82pIPqm3v2jYunc0ylk/Sz2p/3yp/Q23vWOhj29V2SJX/svr/5ip7
d7VxeO3/XuW3jj02L67t51V+dJUfWtvPSt6wtreVvFqd9191fNvaVir5H7V/
Xm0frrpH1PH31XZMbf/Juc6rcx1Weifonxe19i/TfpUdV/KHa3t/6dxYx95T
8k9r/y7Pmuuq8kfWdk21fUuVb1Tbu6t8zar7X89abWuU/O/av6C299Txj9bx
u0p+eJXfmWt5c9V/RB17cR37cpW/rPYv8czXtlDbK0pnnSpf0viX/MGSLyz5
/rWdVtustl2q/FTfjNp2LvlD1d7HS763/pf+2bVfqrajq3zT2u5Z8gdqf3rt
71Hb+XUd7y69j3lOa79s7fetdo4q+bySl6lt0+rn9d7p2s4p+braf7+2I0vn
HN+V2o6rNj/ju1Tbp2r7ZG2vrXZOqPILSr6f96u2z3v2qvy+tX9d7Q+s7cyS
71Xbbsaq2ly7tiXq95dq+6Ixr/L1quwBJe9f8inVh6/6dtV2RvX/hPq9RZ3n
F+5nbedX+Rfq98W1/7T3qcoeUvtDPH8lP8izXPJxJR9b2/LGpNr5RLXzzZL/
UGWXeGZK52u1f6/vVm0nV/lJta1YZdtX+9ca4yo/psoeX9ty9fsb2qJb25dK
51vubW2HVfsb1vbnOsfHa/+x2j+vjt9W9b5bx79t3Krs+VV2tXtb5XuU/J+F
ngT+Xfvf1LaJZ7v2n6nivaudn5d8QsmfTB+Pr+2ahZY/UdvZpXNBtfuSauuU
qnt5HTuqyu8q+c9V9tv6fXvJN9b+Bu+buanKb3b/qu4etV1Z8k9qO9331fj7
7gx9/95buifV74mxKHmT2qYln1fnPLe2H5b8L3OH+1PyZzM2p9R2ebV9Ru3P
NQeV/Os6/qvafrTQOq7xqpI/NLTemd7n2o6t7a/V5q+qzZ/W8XdW3Vltt5W8
YZWvtNDXfkftbzGuJd++0GP0JW2U7n+r7n+r7NTa31n7lfWz5FfX9suS/1n7
v9X+1tqeVW2uVvuLqu5Y8j3q2N/d19qPtf215A9Wm38r+c8l31H7P9b+ptr2
q/LfL3Tf/5nr9439Vo3NxHdHG7Meg0vd6mp/9yr7U+luWfKqC93nzUtexftQ
8sdK/zRzbektW/ulan/v2j4y6ffdO7hcyVeW7g21bVN111zo9p9X8sNKvqTk
s0oHSHmUe1v7pWtbq+QH1P7Rtb/KeNW5zq469/NNr+3hnvEqX7bkR5R8RckP
LPn/Sr56aIwDt8AJn6ryvWp7jLGv/fK1rV3yg2u/Tu2/VzoXVvuf905W2adr
e0htj61jB9b+CQuNl2AhuGhZz07pn1TbinXd52WO8P0/s+T71/bIkg+eNBaC
i+Ag+APmOWTSmACOggvgEbhkj2CblWs7dNJYCx6Def5Q+1WGxmxw1wpD4zX4
DVY5aNK4De66YNr4B9baJ3gGhoDRYLEHDI2bYDCYBy6DoWCabeua1qztAWPj
tD8PjTHgor8MjSU+N2msAp+cULrH17Z86b/HN7y2L017Tlo713LFtOfuPRca
jzwx/Vk58465xjxm/oHfYBy4Z72SL8p8BHPBM38deu6G2eAfOAR2e1z6v/rY
2AgeO93zWdvDxz4OM2w4NFaCw+CbS4PBYKeXLjR+0Qd9Jz+1tm+UzmXTxpDw
BCz1jKExkTb14V3Be7DfxdPGhHDaKXWul88aQ11Z5d+cNhZ6XP2+ano3/tgs
1/W+Kn9vbdf5Htf27WnjK9gMFtNn40cfXtp51tgLLoK/npU+w0VwEuyx/tgY
CNaCa+AY2OCH08Zg8BLcBIPBLbAbrLbp0DgfBl9xaAy1dcYR/tgu/YDf4CcY
48jqyxG1/aTKvjdtrLKfb+Ok8Txs/5Yq33/amOqVs8ZOcNGawSTm31uCf+CY
H0wbp8KrKwWvwiS7zRrzwEiHOD5tbPOzaWMzOOwJs8a6cNpqwULwifnB/LF3
ye+cNnaBY26aNk6D2+AxuAzmedCssRN89r5JYyNzDewGI8EYsI+5yJz0q2lj
A/P+O6Y9N5mPDpw2JoP/Lpg0FoTZjpo0loKF4CA4BN54b8mHTxtHHTNpjAKT
wDuwC/wAZ8FmMAlcc+DQ/fjwpDEQ3AW/wUJvqfITJ42pYKHX1HU9tbZnjI1t
Huj8Q2MwmOfQofEaXAaPPWTWmA1+g2tgFrgEtoLZYBt4CTY8rOSPThpvwW8f
CnZ6l+/npDEkrAKvwW4HDI2LHrzQeObf7vW05+stg0ngE/gFNjH/frHKLlto
rHVWlZ/pmRgb35ijnev3wTYwFAy2wkJjjxOCx+CkT8JdtW02NjY5eejyz1TZ
p2t7/tjv22F5L2AzuAvOgdHgHOPwp2njUhj1OWPjMxgV5nnoQuONY4P94Dp4
FlY7qeSj6zxH1fbbOn5KMBuM95fgIvjnOws9h7t22AjG+njJfyudO6aNQ/Td
/A636Be8AYfANMr14VN1njfM7sZudFwLo//OaeMxmOVLqQ/PwC7mfTjivNp/
bOgxPjMyjAYnwWcwF/z06aHxFbym/M2zxiIwyRa1/8+08daHSj4Gfqp6/5g2
bvmZ7+ys7++lte06NpaChe41Ni6CkTYPPoEBFsbGqL9baJz61YzFfYNzYJfj
qs1ja7tPld1jbHwDO51R+9OnjcHgOHgIPrkw2AwWetassRbc9bzgGfgBNsNj
wCr3GxubLWK1Sdu08PMnps13sG8PmDWuhpfuH+wED51R+2WCf15f+6cu9Jx9
79LfdtpY562zxmZDsBBMdF39/PS08RDsAU/BXj/yHEwbk8BXMA7Mc9PQ2Aou
g88+M2k8BPOcM20sBSN9dto4DK5abdbYDPbau/aPX2hc9LqSN1honHN2+viD
kr9b17XEtHHYS2r/4sgHlP7jUvel08YsuKYdzenTvt6Xm/en3eaKk9ZZbmic
BEfds7Zd6vjO08ZRb1no+cT894bS33Kh55pX1fFXThtHPXTSug/2Hpe8eXT2
KXnjhdZZdtbXBYd9rzq15LQx1mtq/+rIu097TsR9HVj6146t/3pzezDTclV2
n+C21057HMirThprwV3G7I+5rr2nfa9hsh9U3fsGnz2w5GXSprZdO7y40qT7
8NDa7j/r/sN5y8LVk2C+SeMRfJPxuCP6781YvdS5q+79g6vWqnM9IPIKY5fD
fDeX/KBp8yxvrv1+kd867XJz5dtqf+BCz80fWuj5bVfXW+VHpvwA3/Zpz8tv
mPbYan+NWWNy+PzXeL60+Xbf6szZv6ny1VP3nWkf3nhYlX1woXVgfPj9pyUf
5Hs7bfzw26q7VuQ/wIeZX/ct3eMXGjMsP+txIb+xyk9eiC25MCzO+cbqqIWe
w3fwDM26n+b+Q6etAyf8rtp/ZMr1FyaAB47NnGlMNp/0/PiOko+YdP9hD3M2
fbzEbdXOo6Z9vt+X/Ohp67xr2u2Yi99Udc9YaMxw5KTHnXz4pMdc/1eY9bW7
3g+yzRYaP+xX8icWGlesOOtxIL+5yj+70Lbb+6Z9bbDFH3GKkR9T+7PSzjMn
jS/eNvR1k2GhI6bd/6VzXbAKrPWnamfdaWOFj067/MAq/8C0rxFOcH+MD/xz
0qTPBSfsX/LnFrrN43PtMMxmk653cOkfPe0x0v5bqvwL0cFXsHvxzE8o+aK0
+fGSN823e8Pq2/rBH8dPu3/kQ2t8bh8buzx01uNG/muVPTlz+UqzPhc88fQq
f2Kw1IenPW5k47p8xmpluCuY4LTanzptvuCBbK9Z4+ATpz1W8MpTav/cSbev
7yvm+Xnm2O3Q2abkp6fNR0z7Xmtnm0nr4y+2mnQfYI+PTHs89f+uqrtR+vCx
acvmyjO9ows9v96z+rVFyv+10POY8dzKczppnSUmXf5t3+rSf/a058Gzar9x
5CVw3dOe71ZPm+aMT017bjGXPb/k+0x6fr1roefkr3t/I8Mfz/UuTPrerVrt
rDJr/dMmXccc+snS2SznWsjcpZ23lnzfzLMfm3T/zZuzzJPfLJ131JhcPWn7
8GHps7nzc9P+VvnOuD7zqDl0qdLZbtr1l8z3zDjcl72Zuh+fdJ/NpzdkDr7R
XFI620+7/MDMrcvALpOeL3EQS5bOC6bdz7dV2QqZr8+e9FiRzcu4D7zH2zPP
ggrmp8en3DzIdn9Q5uV1o/OJSd8/8/7Sda4XTls2N+M9fObMw09MmTkavzFL
Odlcxi9jbsMzXDLp+RsXAc/gQXAgMMP60Vklx1cfeu5/asrN3TiQew89b5PN
3fwoeJN7pV/6c3/z8ti/yWvkGvEMf0qbzvuFadd17eZS/ZljCZzMvO2nRwcm
0c97BAPgXJY099RFf9OzV9tKdd6HmmNKvnTSczO/jznYvIyfOTQYY4492MJL
l3zupP1esMgbxuZ2Vgy2IC+V/aYpf3id9/zp3fzOszNu+EJ8LG7wncE/5npY
iE9tpZL3GHuM+MX4qrZM+V5j3ydtwkIbpc9r5VznBe/og36Rn5n24Zdn577D
Ns9Nf1439ljzZ+FelK+b+4LbWcscCleMPYbrpBy34b5tnfF3fOvoO4Y/wpO8
cNbv5lrBONunP1+scy5X2wvq96MnzRs5/zcm/Zz5vWa1eZX3s7Z9xx53+p+r
Nm8cuw0Yats8P+6t9h9d8n5j32M+wZ+PjU/YhAcHAxsHuOtF0XcefBYu68KM
Jb7rMt+bSXNeq1U73/Xd8Q1lf0Zeu+Rrvfu1fc83YdIc1SOzx1M9etb6ODK4
DDe1oXd/7OcTD8Vvt1fG37ZDyv5v1jhzh4yVuo+t8q9OG3Pi0F5aOi+pbW39
qf230uYaY8vK3zr2+OrDDqXzg5KfmPu5S+6d+/vKjMOOpfO+qvMk1+kbW+d6
3KTtajrs7K/lPvKNvgwflvv1mJK/nW/yI8eW1X1CyTf4prgPk/Zf4sseU+U/
zhiuM+txxOO9K2NO/r75edr85HqTHquNq+6PfEvT1i5V95rSeUruA74NP2jM
Xptxc6/Izxi6Hk4RX6dN3NlGJR81Nobm08T74f82r/InT/o3+bEZQzzhU1N3
m6Gx+Rvy/BszdZ9Mv9pcZ+wxP3zssVJ312rnet+7+v3j2q84bS7uV2Nj4zen
f55Vft8bfG8nze09OXv83hFjjwUect1ZjzP55oy1dh41a3vH87xe6d+Ue7Fu
yT+Z9L3+2dj4f5+MHb4SV8nHyn57NhyY+4UvvnbaY05mW+Az8Y9P9uyMfS/e
nmN4zs9XH3469v186tjYHSdv/A7KGN5cx340bT7wKaWzwdjjY5wPTvv6pT9s
Sfv90zf37+15v9YJp+o5YReou+PQds6BaefoXDuO9fG5F+RjJ21f3Cfj+448
8/AsTP+Goe0zPgV2B1uHzbNddMlsn2PGvgf8wjdO+/7hW43N4emz+/nu1P1g
7gudp41tkziGj2X7vKR0jh3brsOB/jTvBW6W7/i96Q9/x/sjP7Gua71Z67CB
lPNfP2nWx7RjTNgjOFs6H03dC+tct0+aszq3dG8Z+zk1lh/IeOJ+je8O7vus
7x9ul4/vqOjgVNk+u5R83Nh2Jh3+ZeVsLrbTB6PDViTvPLTf8Mi0v0G1v/6s
+eT3BD+/euhn5AN5fvivjdsrh+Zvj037Hxn7/VL3KbNuC3/NxnS9uw+NxbWJ
3z5+bBuVDu6a/fWaocfyhIwhvhZ/+9ahbSd8NVuKjYl/3nNom5M+m8tzfUrG
hA14YsacTYnfZleyJ0/K9bJzyXsNzWmfnDbZpKdmfIzHx3K9bMzTMoZsUvI+
Q9ujp2ccPL9kzzBO+4zonBBZOdtVm+w7cQLHZ3yOSx/0h52O637T0HbrmRk3
NunHo8+GJeO9l8pYGQecORvtzUPbaZ+IDv84W3K/kk8ce3yN7Wsz1nukHb5L
NtovJm3f4vDZqTh392HLlOF72cv4a9w1fv6s9Nk7e0zGxPt+dsaWb/SzaZ+N
/JlcL9tW+/N4gM+mTe/nMXl/2b2fS/mDItM/OfbsO4e2o8/NveYLIB80tF18
QcafrYz/P3hoX8AXIrOjz48++/q83LvnpBwf7p7xC7iHt06ayxBX8BvzTG1X
LPRxPgD8/5lj/yazXZ3rkKHt+y/lGdiidDaH8yZt71+YMaRDZuey5S9IXb6D
i1J+0tj3UgzGqWPfM36Xp9dz+8tpyzhwHD1+2327OPdu+cjuxdOif2tt203a
V6Deryd9v/0+vdr/9bS56I3H5qWPHJpv5zM4ZehxuixjuHu1+buq+2zPxdhj
YXwuqPJ/jT1mm4zdFh3j/I20uXWV/QGOnLTdf3nG/8XRcc6XT5pHx79/cuz7
IW5kn2r/76n7LOep/Qtq+12ujw8FH/CtjKGxJx9T8i9Lb9tJ+1fs+Rv4Gl42
af8DDn/Pav+Pk75fuIWrUte48Ud8pORNZs2NXPs/z6Jv18az7g9/zF8mfQ3O
8ezMBfr5mbHHnQ5eRJv8F8b+8xnbF5XOX0vnFZPukz6cUfuNZs29XJ377fzi
Ujat8tsm7Zt5fcmvY9/W78+NfY+UG1s+C76YN9bxf9TvHSftw1DOn2Lsr889
cn+uj/4Lqp0/1e+X1rbZrK/NvLbrpGNW+D++OPa48eU8d+z+6MMfp8078RO9
qepeXMd28u2ZdZv0t6uy/067/T/nXRMn8+9J3xvn2KF0/lPyLpPmeS7Jc75/
tTOpY6+ctO3GPmVLvrjK7swYGuObc+82z7Xzu42l84xp+2KM488zrl8Z+xmj
s8OkfUX8RGQ6Yl1elfILS35p6b9k7PF0HXw+p3qGq+yuSV/vzpP2UZ0zNI/1
q7xT9r9OuTb5avil3lL9vGfV3y11+Xv4eu5dZa/Jb+QE3omfaMtZjw/f1o6l
szDtsbrHrDkicTuTad8z8mUZnz/mHeP34ufCQZHPN1+UzjOn7W8Sw/OHlDtO
xlNdMvZ9ct5dSt4598J43JGxMna35zn/+ticoBie3cbmrfie8HC359pvz2/+
uC9U//879r0y3ndkzFeNDv3nl842s/YzzTKG3/I8Z/z50pYpeYmxfVuv0seM
LT4P38eX5h3AM3gnFmbNnfq95Njj/u/o/nPhbt/bP/Pu/DPHcIaXZ/zp87vh
6y6r8lePzZ3xl+H5+N3wdVeMfW/EShm/OzPOW+UZ0P/XpJ7ziiO6K3WXzjOM
5HoOTnLWMr+esaWDFySLKbpybA6Uv/B5sx4X/jyxPXhC3KDx4wc0hsaJPB9z
OnyRZ2Ws6fAzzlL3ubPuh/avGpsb1T7uDzcofmn1yPyJxp8PEZf4n8iucTr2
e+355FtcInWvzjPJtyjeaYnU5YtcMrJnYetZ63wq5d+p8u+MzZl6Tp44dvwJ
Gw9HumyuC3fKD/j9oWOlcI/XDO2jpHN9xnPpjC3ekv/xh0Nzs/yb7vVXJu3v
xMO6J/fL+ONP75+xWjq+oZ8M7cvk08Sbek6Xy9jiVB+QscKnkuecKj/mj4fm
Nh+Y8cHLLp9xEMuEk8JR4J31ge/S2DwoY4LnJfOZ8pPiXW8u+auT5mHFion3
9l3FQYnFwnniIc+JjBfC0/Kx8heL8cbD4gPFg5HxXV+u835/bP+hOC6c1WpD
x36vnn7isJTj2fBvq0bGMz84fcOD3yfneu3Y3J/4+YvYoWP7FXFy6q4xdPyW
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
Cz5TOb7XHOc5MVfiuMSdwLpyPK0ZYU7H98Ic8IYcVetTwCR8l3TMv+ZkOvhh
c6hYZ/O4OdZci4/FzZLNudZ8kFOJw4Qr6C8RXGC+x5Fao0LcrZhb+aSH51r0
9315tvkd6My5WeWuCb+qnT3TtyPSfzG3cjDNfeZrfTB340Lp8E3wU8AZMAYe
FbaAK/C0YmFxsOZlsb/75RqPSrn2js51Kf9Arhen6jsMh+Bv6Tj/Iv887fkd
LoAbYAbrOcilNG+vl3KYi8/Lsffluo5Mn/md3ReYSj7phzJudMX+8sVo79jI
/C8fiYyvpqNtcUHmBnOcdZiM1YFD+8Lk4fueyzO19oT5V46qNS8OHpoHJPPb
LsauTntOh2vM04cM7YcVf8nuwyNbc4w/d4PorJAy8cfwz0rRhyvENomhMn9a
10E82/z4aWnTWgtivy4bmo/2W7wcXlf5ypl7tQMniGUzv5pbXevxeTYWueVp
99HcS2fVYAqxVeZx4yRGynxqzocDzKfyT40VbLDIY097XM3z4qDM9ZtGH2aw
BoI8VT4sMVJ0YBN8uDnPfIcDN3eaN/kQrblg3jSXKsdv47TNf+Y+sV/6CQc9
KdcF05k/tYk/5wsw75pzzZnq4sPlzstHFR9lTqaDE5av6rzmet9s8UZz3xnZ
txxfKr9PPqB1/+SmrTb0updy4OTEKTs/5XIPL4jM7qODn5QvKdfP/II7pYOD
taalcj44eXVfir4YHPE6z0n74oJWHVrWD/yqnLIv51xy3OjjVPGjuD+830pp
E7cslsmaUPLb5LWRzZW43wvTJptY3A+7WC6bOB/cpjWixOrgUdmxZLat/Dtx
O7jHd8TO1X86l0RfLqF28LfidMTz4GblqZHxjeKMnBfPjHfEmeIw5cGJscGL
4okvz7nwnXhPuWnfiz752ujgm+VGsbHZ1/r4jdR9bNrEVc7tcFzlZNb41fP8
g4yhHDG87JWR5dCJI8LHyi0j4ydxtLhaOV9inOSeyTuzhtXV0RcniG9dXDd0
0r8XY5dmLeNIv5N26ONiv5s2F9f5TD/Z2+x2nKTcr2tzjTj7ayJfkXJcrGu9
MmN4Y+qy93ER2jTvywm7LjI8QIYf2Cvyi3YY2mdKZseILZKrZd6XU3Vj2oQH
8D44XutKybfZcegYITLbXJ7XD6d387Q3pC6ulYwHxhVrH7/9vbTvOM5B/hM8
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
87yfl7qek+ek/WfnPbgyz4nxuDr35f8BiOyPpA==
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJztfXlUjd/bN6VBREIlJJVKQuYkXUUSEQ2SeaqIkEplljERqYxFSaYkcxpI
SmUIzfNwOuc01znInPT2e3yOnnW/616e72+977OeP57+sey117Wv67Ovee97
n6GrN1s7inXp0uWNRJcu4v/6N/Nff01UeNl1qkwhj06kfNZeeiKH/nf8v2dc
4m2sX1ZVM/GvTj4bdLSGEtZsTCk2LabkYB+Vz7sEFHvmQXdhnzrqsVb9ibBn
Od3VGdxtwDIBBR6Pz3jxtJb4UwbeH29SRu9lI5MC/ZspJl1G+XtcNa2z0832
Nygkl0Xig2pXNdABibHTj7RxSflghZ3Y2nwakz27fbYln+I+WfQrKOFQYn+Z
Ht+OltH4kAHme4VVZBD6auxpCQ59+9p6b/WCStJjzH+C+Q6g7wP6GqAvBD/R
4Gc1+BHxfxL8V4F/kbyPIG9PyCsFfOqATyrwEeFZBDxP/gXnNUvU/L88FdA8
X7OLH2PrqMuFTdkjrlbQFpPAK9bFQtoyc3mpvWcjeTnM6Do3kUvP6vxPDLoo
pARnm0grbgNpNE56nyTOpd3bym10tDvwt1Hu7TGlltw0lm2S/F5Ciho2H09t
qSP+lcpTg+ZxiRomFR6JKaSrnxYd+fizhB4M2abys7GMDrxT5CvP5NL2oDma
w9xyKMzYKmNrYzHdU0+WqnzJpwuYfxfzD2O+JOhXgL4N6O8EP8fBzzrwkwz+
48C/KvgXyesGeb0hrxPwsQM+8sDnn+IsF+crSVOE9Gtz+hutxno6bdBr1fRs
DnX5j7/3tFP+ROKw580UNS36afq7mj/jH7TMqisLm4jnx3uT2q+aXR/Gu/tp
Lq8lmfDB+vMFVWRY/m3jio9F9FFXbqrHxlzqw+H6Z0wvIafuU7t33cunV8uk
fOnrc1IzH2m5OyafZF0OmZYlV1Et5stivjPmfxz3m3430LcF/STwcw/8/HL6
zY+I/0bwXwz+ReO7Ie8tyNsX+Ei6/sYnHPgwcQ78X5z/R+DsALuYD7sQY/gN
ph2lwO4ew+6GsfgND9ipAsNvmMCuI+AH7sMPHIQf8ITfuAi/cR9+4zzm38F8
33/Tbzxj+I2h4N8N8rpD3m0Mv7EQ+PT9N/2GJPx8Dfz8E/j5Z9CHOOiDHPTz
HuJIMOJIPSMO3kbcWf+XODgace0R4loS4toYxEF9xMFWxEFdzI/F/GTMXw36
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
4aSp8yvp/wBXZJce
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(3\\)]\\)(x)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\)(y)Density \
Plot\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.848745230480983*^9}},
 CellLabel->
  "Out[415]=",ExpressionUUID->"dfee9a42-7427-4554-ab8b-c09b57227a01"],

Cell[CellGroupData[{

Cell[BoxData["\<\"---------------------------------------------\\n------------\
-----Question \
2-----------------\\n---------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452304966016`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"636abb00-a789-4a1b-80c8-2b1b54cc4985"],

Cell[BoxData["\<\"Derive <x>\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452304966016`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"c6ba92b1-265f-4650-99f5-caeda1cd1914"],

Cell[BoxData["\<\"(1) Steps 2-3 are the human intuition steps needed before \
Mathematica:\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745230512226*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"7c8b6f0c-a221-425e-ba3f-731db2e0380b"],

Cell[BoxData["\<\"(2) \\!\\(\\*SuperscriptBox[\\(sin\\), \
\\(2\\)]\\)(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\)) \
=\\!\\(\\*FractionBox[\\(1\\\\  - \\\\ cos \\((\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)])\\)\\), \\(2\\)]\\) in the integrand of <x> = \
\\!\\(\\*FractionBox[\\(2\\), \
\\(L\\)]\\)\[Integral]\\!\\(\\*SuperscriptBox[\\(xsin\\), \
\\(2\\)]\\)(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx \\nfrom the \
double angle identity\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745230512226*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"e68f71cf-a4e9-4b49-951b-bb0686a664bd"],

Cell[BoxData["\<\"(3) Then the sum of two integrals can be used to solve for \
<x> \\nsuch that <x> =\\!\\(\\*FractionBox[\\(1\\), \
\\(L\\)]\\)[\[Integral]xdx + \
\[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx]\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745230512226*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"5a20ae29-737c-49cf-8039-05ad16e3f051"],

Cell[BoxData["\<\"(4) Given steps 2-3, I will use Mathematica to evaluate the \
integrals\\n\[Integral]xdx and \[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\
\\), \\(L\\)]\\))dx] separately if 'n' is any positive integer on the \
interval\\nx = 0 to x = L\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452305278516`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"a50cfb48-0d6b-4ae9-aaff-58254d8a5501"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(5) From mathematica, '\\!\\(\\*FractionBox[\\(1\\), \
\\(L\\)]\\) * \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SuperscriptBox["L", "2"], "2"], "\[InvisibleSpace]", "\<\" + \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"L", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]], "\[InvisibleSpace]", "\<\"' is <x>.\"\>"}],
  SequenceForm[
  "(5) From mathematica, '\!\(\*FractionBox[\(1\), \(L\)]\) * ", 
   Rational[1, 2] $CellContext`L^2, " + ", $CellContext`L $CellContext`n^(-1) 
   Pi^(-1) Sin[$CellContext`n Pi], "' is <x>."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452307817535`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"906aef8e-5915-4a99-9081-5f367d4ff983"],

Cell[BoxData["\<\"(6) <x> = \\!\\(\\*FractionBox[\\(L\\), \\(2\\)]\\)\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452307817535`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"12fa61c9-97e4-485d-85a5-fb2966e874e9"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452307817535`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"d9fca373-6a8a-49f6-bd7f-939fe0ae52cb"],

Cell[BoxData["\<\"Derive <\\!\\(\\*SubscriptBox[\\(p\\), \\(x\\)]\\)>\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452307817535`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"a32c76bc-3e49-4cc6-a366-9caaf4f29faf"],

Cell[BoxData["\<\"(1) Since \\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\
\\)], \\(x\\)]\\) = -i\[HBar]\\!\\(\\*FractionBox[\\(d\\), \\(dx\\)]\\), then \
<\\!\\(\\*SubscriptBox[\\(p\\), \\(x\\)]\\)> = \
-i\[HBar]\[Integral]\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \\(L\\)]]\\)sin(\\!\
\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))\\!\\(\\*FractionBox[\\(d\\), \
\\(dx\\)]\\)\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))dx\\nsimplifies to <\\!\\(\\*SubscriptBox[\\(p\\), \\(x\\)]\\)> = \
-i\[HBar]\\!\\(\\*FractionBox[\\(2  n\[Pi]\\), SuperscriptBox[\\(L\\), \
\\(2\\)]]\\)\[Integral]sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452307973747`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"c390bb01-2883-4c98-a718-457af9b2b476"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2) Using mathematica to evaluate the second integral \
from\\nstep 1 on \\nx = 0 to x = L where n is an element of the set of \
positive integers, then \\n<\\!\\(\\*SubscriptBox[\\(p\\), \\(x\\)]\\)> = -i\
\[HBar]\\!\\(\\*FractionBox[\\(2  n\[Pi]\\), SuperscriptBox[\\(L\\), \
\\(2\\)]]\\)\[Integral]sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\)) = \
-i\[HBar]\\!\\(\\*FractionBox[\\(2  n\[Pi]\\), SuperscriptBox[\\(L\\), \
\\(2\\)]]\\)*\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"L", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "2"]}], 
    RowBox[{"2", " ", "n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n(3) Therefore, \
<\\!\\(\\*SubscriptBox[\\(p\\), \\(x\\)]\\)> = 0\"\>"}],
  SequenceForm[
  "(2) Using mathematica to evaluate the second integral from\nstep 1 on \nx \
= 0 to x = L where n is an element of the set of positive integers, then \n\
<\!\(\*SubscriptBox[\(p\), \(x\)]\)> = -i\[HBar]\!\(\*FractionBox[\(2  n\[Pi]\
\), SuperscriptBox[\(L\), \(2\)]]\)\[Integral]sin(\!\(\*FractionBox[\(n\[Pi]x\
\), \(L\)]\))cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) = \
-i\[HBar]\!\(\*FractionBox[\(2  n\[Pi]\), SuperscriptBox[\(L\), \(2\)]]\)*", 
   Rational[1, 2] $CellContext`L $CellContext`n^(-1) Pi^(-1) 
   Sin[$CellContext`n Pi]^2, 
   "\n(3) Therefore, <\!\(\*SubscriptBox[\(p\), \(x\)]\)> = 0"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231135907*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"a9332800-201d-4eb5-8d80-6a9ec83f72a0"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231135907*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"5cd3ba47-c0be-4f85-b84e-2fd3844fece7"],

Cell[BoxData["\<\"Derive <\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)> For \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(2\\)], \\(x\\)]\\) \"\
\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231151539*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"81b046ec-13c7-4ba1-9be1-c85bf9340bd1"],

Cell[BoxData["\<\"(1) \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\) = \\!\
\\(\\*SqrtBox[SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(2\\)], \\(x\\)]]\
\\) = \\!\\(\\*SqrtBox[\\(\\(<\\)\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\(>\\)\\(\\\\ \\)\\(-\\\\ \
\\(\\(<\\)\\(x\\)\\*SuperscriptBox[\\(>\\), \\(2\\)]\\)\\)\\)]\\). Therefore, \
I must derive <\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)> first\\nbefore \
calculating \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\).\"\>"], "Print",\

 CellChangeTimes->{{3.84874522409645*^9, 3.848745231151539*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"2adc2893-8baa-45d2-bcc4-a7359c0d52a7"],

Cell[BoxData["\<\"(2) <\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)> = \\!\\(\
\\*FractionBox[\\(2\\), \
\\(L\\)]\\)\[Integral]\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(sin\\), \
\\(2\\)]\\)(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx, just like \
with <x> except now \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\\nis in the \
integrand.\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231167165*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"2274b72c-1452-4ad7-82ef-745b8a902d5c"],

Cell[BoxData["\<\"(3) \\!\\(\\*SuperscriptBox[\\(sin\\), \
\\(2\\)]\\)(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\)) = \
\\!\\(\\*FractionBox[\\(1\\\\  - \\\\ cos \\((\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)])\\)\\), \\(2\\)]\\) so the integral in step 2 expands\\nto \
\\!\\(\\*FractionBox[\\(1\\), \\(L\\)]\\)[\[Integral]\\!\\(\\*SuperscriptBox[\
\\(x\\), \\(2\\)]\\)dx + \[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))dx]\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231167165*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"a8d80e3c-8c90-454b-915a-d4b17413630b"],

Cell[BoxData["\<\"(4) From step 5 of the derivation of <x>, \
\[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx is \
zero\\nif n is an element of the set of positive integers.\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452311827865`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"4c258b5c-21a0-4b6e-b7a7-1c13fe213f6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(5) \[Integral]\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dx \
= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SuperscriptBox["L", "3"], "3"], 
   "\[InvisibleSpace]", "\<\" so \\!\\(\\*FractionBox[\\(1\\), \\(L\\)]\\) * \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    SuperscriptBox["L", "3"], "3"]}],
  SequenceForm[
  "(5) \[Integral]\!\(\*SuperscriptBox[\(x\), \(2\)]\)dx = ", 
   Rational[1, 3] $CellContext`L^3, 
   " so \!\(\*FractionBox[\(1\), \(L\)]\) * ", 
   Rational[1, 3] $CellContext`L^3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452311827865`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"c007eef5-a0f7-4463-9fb2-087ac430da11"],

Cell[BoxData["\<\"(6) <\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)> = \\!\\(\
\\*FractionBox[SuperscriptBox[\\(L\\), \\(2\\)], \\(3\\)]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452311827865`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"f64f9603-969b-4a69-a886-9b8f725a92fe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(7) \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\) = \\!\\(\
\\*SqrtBox[SuperscriptBox[SubscriptBox[\\(\[Sigma]\\), \\(x\\)], \\(2\\)]]\\) \
= \\!\\(\\*SqrtBox[\\(\\(<\\)\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\(>\\)\\(\\\\ \\)\\(-\\\\ \
\\(\\(<\\)\\(x\\)\\*SuperscriptBox[\\(>\\), \\(2\\)]\\)\\)\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    SqrtBox[
     SuperscriptBox["L", "2"]], 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]]}],
  SequenceForm[
  "(7) \!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\) = \
\!\(\*SqrtBox[SuperscriptBox[SubscriptBox[\(\[Sigma]\), \(x\)], \(2\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[\(x\), \(2\)]\(>\)\(\\ \)\(-\\ \
\(\(<\)\(x\)\*SuperscriptBox[\(>\), \(2\)]\)\)\)]\) = ", Rational[1, 2] 
   3^Rational[-1, 2] ($CellContext`L^2)^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.84874523119841*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"76caeda7-331d-4088-8414-5f28a15e1d3a"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231214035*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"905c24a3-69ac-4c11-adf4-90c8767d2481"],

Cell[BoxData["\<\"Derive <\\!\\(\\*SuperscriptBox[SubscriptBox[\\(p\\), \
\\(x\\)], \\(2\\)]\\)> For \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(2\\)], \
SubscriptBox[\\(p\\), \\(x\\)]]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231214035*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"a2ff3732-877c-4392-ac76-4af1b570f5a9"],

Cell[BoxData["\<\"(1) \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(p\
\\), \\(x\\)]]\\) = \
\\!\\(\\*SqrtBox[SuperscriptBox[SubscriptBox[\\(\[Sigma]\\), \
SubscriptBox[\\(p\\), \\(x\\)]], \\(2\\)]]\\) = \
\\!\\(\\*SqrtBox[\\(\\(<\\)\\*SuperscriptBox[SubscriptBox[\\(p\\), \\(x\\)], \
\\(2\\)]\\(>\\)\\(\\\\ \\)\\(-\\\\ \\(\\(<\\)\\*SubscriptBox[\\(p\\), \
\\(x\\)]\\*SuperscriptBox[\\(>\\), \\(2\\)]\\)\\)\\)]\\) and some human \
intuition is required\\nto set-up the proper integral, as in previous \
steps.\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231214035*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"1c924757-b173-48df-a85c-d459cddc01b5"],

Cell[BoxData["\<\"(2) This is the general expression\\nfor  \
<\\!\\(\\*SuperscriptBox[SubscriptBox[\\(p\\), \\(x\\)], \\(2\\)]\\)> = \
\[Integral]\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))(-i\[HBar]\\!\
\\(\\*FractionBox[\\(d\\), \
\\(dx\\)]\\)(-i\[HBar]\\!\\(\\*FractionBox[\\(d\\), \
\\(dx\\)]\\)\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))))dx.\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452312296596`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"23c670ed-c012-409b-8ab9-b3cc812dbdf9"],

Cell[BoxData["\<\"(3) Several constants in the expression can be pulled \
\\nout of the integrand: \\!\\(\\*FractionBox[\\(\\(2\\) \
\\*SuperscriptBox[\\(i\\), \\(2\\)] \\*SuperscriptBox[\\(\[HBar]\\), \\(2\\)]\
\\(\\\\ \\)\\), \\(L\\)]\\)\[Integral]sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))\\!\\(\\*FractionBox[SuperscriptBox[\\(d\\), \\(2\\)], \
SuperscriptBox[\\(dx\\), \\(2\\)]]\\)sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))dx\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231236168*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"8312b59b-3ddf-4d5f-ada6-81db45f7e5fa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(4) I will evaluate \
\\!\\(\\*FractionBox[SuperscriptBox[\\(d\\), \\(2\\)], \
SuperscriptBox[\\(dx\\), \\(2\\)]]\\)sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\)) in the integrand using Mathematica: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
     SuperscriptBox["L", "2"]]}]}],
  SequenceForm[
  "(4) I will evaluate \!\(\*FractionBox[SuperscriptBox[\(d\), \(2\)], \
SuperscriptBox[\(dx\), \(2\)]]\)sin(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) \
in the integrand using Mathematica: ", -$CellContext`L^(-2) $CellContext`n^2 
   Pi^2 Sin[$CellContext`L^(-1) $CellContext`n Pi $CellContext`x]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231251801*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"5a31ddbe-3b9f-4acc-925a-a287a250c3b9"],

Cell[BoxData["\<\"(5) Then step 3 simplifies to -\\!\\(\\*FractionBox[\\(\\(2\
\\) \\*SuperscriptBox[\\(i\\), \\(2\\)] \\*SuperscriptBox[\\(\[HBar]\\), \\(2\
\\)] \\*SuperscriptBox[\\(n\\), \\(2\\)] \\*SuperscriptBox[\\(\[Pi]\\), \
\\(2\\)]\\(\\\\ \\)\\), SuperscriptBox[\\(L\\), \
\\(3\\)]]\\)\[Integral]sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \
\\(L\\)]\\))sin(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))dx, \
the\\nintegrand of which was already computed in step 5 of 'Derive <x>'\\nby \
using the double angle identity\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231251801*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"2f1b0e87-ad3e-4ef4-bfb9-400018ea91d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(6) Step 5, therefore, simplifies to -\\!\\(\\*FractionBox[\\(\
\\(2\\) \\*SuperscriptBox[\\(i\\), \\(2\\)] \\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)] \\*SuperscriptBox[\\(n\\), \\(2\\)] \\*SuperscriptBox[\\(\[Pi]\\), \
\\(2\\)]\\(\\\\ \\)\\), SuperscriptBox[\\(L\\), \\(3\\)]]\\)[\[Integral]xdx - \
\[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\))], \
so\\nevaluating the second integral from x=0 to x=L using Mathematica, \\n\
\[Integral]cos(\\!\\(\\*FractionBox[\\(n\[Pi]x\\), \\(L\\)]\\)) = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"L", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]]}],
  SequenceForm[
  "(6) Step 5, therefore, simplifies to -\!\(\*FractionBox[\(\(2\) \
\*SuperscriptBox[\(i\), \(2\)] \*SuperscriptBox[\(\[HBar]\), \(2\)] \
\*SuperscriptBox[\(n\), \(2\)] \*SuperscriptBox[\(\[Pi]\), \(2\)]\(\\ \)\), \
SuperscriptBox[\(L\), \(3\)]]\)[\[Integral]xdx - \
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\))], so\nevaluating the \
second integral from x=0 to x=L using Mathematica, \n\
\[Integral]cos(\!\(\*FractionBox[\(n\[Pi]x\), \(L\)]\)) = ", $CellContext`L \
$CellContext`n^(-1) Pi^(-1) Sin[$CellContext`n Pi]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452313364296`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"ba440853-3b91-409a-b962-9f0efc7c997a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(7)Then all that's left is -\\!\\(\\*FractionBox[\\(\\(2\\) \
\\*SuperscriptBox[\\(i\\), \\(2\\)] \\*SuperscriptBox[\\(\[HBar]\\), \\(2\\)] \
\\*SuperscriptBox[\\(n\\), \\(2\\)] \\*SuperscriptBox[\\(\[Pi]\\), \
\\(2\\)]\\(\\\\ \\)\\), SuperscriptBox[\\(L\\), \\(3\\)]]\\)\[Integral]xdx \
for x=0 to x=L,\\nand \[Integral]xdx is simply \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SuperscriptBox["L", "2"], "2"]}],
  SequenceForm[
  "(7)Then all that's left is -\!\(\*FractionBox[\(\(2\) \*SuperscriptBox[\(i\
\), \(2\)] \*SuperscriptBox[\(\[HBar]\), \(2\)] \*SuperscriptBox[\(n\), \
\(2\)] \*SuperscriptBox[\(\[Pi]\), \(2\)]\(\\ \)\), SuperscriptBox[\(L\), \(3\
\)]]\)\[Integral]xdx for x=0 to x=L,\nand \[Integral]xdx is simply ", 
   Rational[1, 2] $CellContext`L^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231352062*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"7bc6fc6c-ba12-4d90-920e-bd86fd188ad0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(8) <\\!\\(\\*SuperscriptBox[SubscriptBox[\\(p\\), \\(x\\)], \
\\(2\\)]\\)> = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     SuperscriptBox["\[HBar]", "2"]}], "L"]}],
  SequenceForm[
  "(8) <\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\)> = ", \
$CellContext`L^(-1) $CellContext`n^2 Pi^2 $CellContext`\[HBar]^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231352062*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"18f007a5-10ee-4c10-9810-789d95ebf3c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(9) Then \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \
SubscriptBox[\\(p\\), \\(x\\)]]\\) = \
\\!\\(\\*SqrtBox[SuperscriptBox[SubscriptBox[\\(\[Sigma]\\), \
SubscriptBox[\\(p\\), \\(x\\)]], \\(2\\)]]\\) = \
\\!\\(\\*SqrtBox[\\(\\(<\\)\\*SuperscriptBox[SubscriptBox[\\(p\\), \\(x\\)], \
\\(2\\)]\\(>\\)\\(\\\\ \\)\\(-\\\\ \\(\\(<\\)\\*SubscriptBox[\\(p\\), \
\\(x\\)]\\*SuperscriptBox[\\(>\\), \\(2\\)]\\)\\)\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"\[Pi]", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox["\[HBar]", "2"]}], "L"]]}]}],
  SequenceForm[
  "(9) Then \!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(p\), \(x\)]]\) = \
\!\(\*SqrtBox[SuperscriptBox[SubscriptBox[\(\[Sigma]\), SubscriptBox[\(p\), \
\(x\)]], \(2\)]]\) = \
\!\(\*SqrtBox[\(\(<\)\*SuperscriptBox[SubscriptBox[\(p\), \(x\)], \(2\)]\(>\)\
\(\\ \)\(-\\ \(\(<\)\*SubscriptBox[\(p\), \(x\)]\*SuperscriptBox[\(>\), \
\(2\)]\)\)\)]\) = ", 
   Pi ($CellContext`L^(-1) $CellContext`n^2 $CellContext`\[HBar]^2)^
    Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231352062*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"4cb9f8a0-8407-4585-9786-d20fd418d33a"],

Cell[BoxData["\<\"---------------------------------------------\\n------------\
-----Question \
3-----------------\\n---------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231383309*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"771a18ba-b0da-4b1e-819b-3b13a3edf2d1"],

Cell[BoxData["\<\"Find Normalization Constant 'A'\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231383309*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"90e83302-9441-49c6-92f7-420a8660b16d"],

Cell[BoxData["\<\"(1) f(x) is normal if \[Integral]f(x)f(x)dx = 1. Therefore,\
\\nI can solve for A from \[Integral]\\!\\(\\*SuperscriptBox[\\(A\\), \
\\(2\\)]\\)[x(x-L)(x-L)]dx = 1 since 'A' is a constant.\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231383309*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"3aba5ae3-5351-444b-924e-72d4f720bfd0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2) \\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    SuperscriptBox["L", "5"], "30"], "\[InvisibleSpace]", "\<\" = 1\"\>"}],
  SequenceForm[
  "(2) \!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
   Rational[1, 30] $CellContext`L^5, " = 1"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745231383309*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"ba041a31-d8ce-44a6-8f30-918a5ad9b1dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(3) f(x) is normalized if A = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    SqrtBox["30"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["L", "5"]]]}]}],
  SequenceForm[
  "(3) f(x) is normalized if A = ", 
   30^Rational[1, 2] ($CellContext`L^(-5))^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452313989344`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"5bc30f13-5db1-4c2a-bea1-0782603c0d52"],

Cell[BoxData["\<\"(4) A = \\!\\(\\*SqrtBox[FractionBox[\\(30\\), \
SuperscriptBox[\\(L\\), \\(5\\)]]]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452313989344`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"840cea58-b876-4912-9dad-52e895a95172"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452314145565`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"c8f5864d-56bb-443e-b95e-b2e201fc5beb"],

Cell[BoxData["\<\"Plot the PDFs assuming L = 1\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452314145565`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"1dfa07fa-7709-4b0a-84bf-d8f199e9604e"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
w1Nt
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$24944#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwV2Xk8VN0fB3BLiyhb5LGUypJKkkdE8SkUWXqSLZJsSbJTWRIKIVGSJFlS
CclOliJJpWTPPjOWpDCXIhFzf/f317zerzn3nHvufL7nnPuaTfYex05zsLGx
XWNnY/v/p/7psdba72aaDKPyu2pXOTSWaYt50kWVkZI68N/zLTWa/6YlpRSL
6iArNv6m9Ba65oiEdOhF2SPQ1Cs0/h4+rWnQ1FX0QNQUk4LSfD2ypKZ0zPrH
pKQlMqWLw/XNubCo73DXTtYG518V7W8IF8CPsI56u0Q7+LDXE3d7RGDhOPcy
XtQRZ3u63ibJSqJeW6z8TYoTJIW5LzuUSUFRSqNgRvIstpkH6fKbyyGFwzZb
JvMc/pQopxl77wDX0JWH5rLuGGpzkrodvguVjLamN6aeyJZv9Dx0UxmeRx31
rRO98JVLa+FAjyoGdl7TviHqC4FbKcG8skBC2j+1MifOYyPzeC8z4QD0+XL2
vUq5gLDcjZ/+lGqjjPlpNyHpjzDX/fe9zPTgamNTdM0uAPHiCcfp7frY/JlQ
2JgZCO9giR1uXkaIzROUM5a9jAMXVXV+hRnj4PpHj76fCcaBQiNLZw4TXG5I
5n9tGoK+btv1rnGmUFaRv2GZGAoJlpr8hm4LpAv/FxEtGobDtxkjG6VPIbDp
br15ZRi4rHVWsMXZwjycwSF1IhwmBRvUS2/bYfWsV3BVSgSsP6pe8ShxgF9H
gt+EZBQOtB6TlzBxhknMQNmL2iiUj0+e3hV7Fgo6srNhdtHY48LNx93qgpHi
cq/1mdcR7Jvis8zdDca3e12OyMZiRXvS3ugrXpA3kMoWexcLjRtxwhvgDS5O
12+jZ+Igox13LJ70xqkKVmGN6U381j+lJh7jC+GtNxWOJ95CZOXZU9ntFxHK
VbwlSjQBC4zqDVESwdimeyuyyDMBwVszDsisC0FbuMf3vncJSHHLkTJID4E0
p3yuwoU7mC080X26KhQNS48UOtoSMZbLjGxbHYbVvxJ3S8bcQ8r7Dh4HiSiU
7jqfqDd8D43/3fxw5X0UbDxN5rzUkxE4wz09ciEa+ZN8FfVjyeg+IVTq0Xsd
x8Yi97kcTMGdCHnfe9WxSBoI0C5lpULCWsLh2oV4HJCwfEQzS8O1iahtqbR4
/LBSXc6Vl4Z9iRJeHbq3sWHC3yFvRzpE1pAcaesT4HFWRYatPx17djN6n365
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
yxJ+qw==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$25002#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwVm3k4lG8Xx22/qOzZs2RJJUkRWXq+QhRSZM022c2ESLulLBVRKimiLK2o
JKlkJynZt7JOMWOZYdJq7533r7k+1/PMOff5nuW+7+uaUfQMtvXh4uDgsOXm
4Pj/p4XPWFvVuD0hedLueK9AlSGPicyRIWltnGSN00SmThNad29lvJA2RXzp
lWz9nnRiRFbl3AlVa0RlvRnpkXpKWDb1FGVK20GRSP3om1dKqCTK3f+n4Izb
k+Jv3tbWEQsWXjcPqbpj69Z+i8KmJmIitrPuUOoh5PBFt53R7SQcvf+WX5P2
RoSjVlmFTS9RZyLzqjbDFzNf1PI/pVEJTeUdhb8UAmDCvcE2JnCEyOAiPV6b
S8Hqi2ryXLljBN+36BwH1SAI7oLSHr1JopTa3lRrdwT2W0z7CySniSP7vS1c
U0PwTOuR0eqan8TA5gsmSdJhuKQQVrM1d5ZIuStVtdblGDz4w/O/fl4gLITy
DCsyjmNRS1CJU54DJVOftrEUTkFUrznGvo4bh93diy4cOo2Bk85cd1//B6Vm
lsaa3DOwqQhTK6jhxeUnouttVCMxofThpYIkP3bJ3bs37heFbNr2JYFDgois
TxeutjsL7rfSA6MewtDWUU9yTj0HpvFH1yMDosgS33c+QToWZ67livnvl8KZ
ppt1DqWxOOZQknHinTQc4qhcyi5xsLE05eAzXQ3+3yFRbzPOI2tQ54OemzxO
dqacZCrEozfjlbdfpBJsrveSrVUv47NLwW9b5gaoWyo/lnl/GZpx6aRDTDXw
cR8epftdQVj8nof23zfC483S80q7ZAw9sHv6llsD4huSNZxSr+Jmr9PxhI1b
cI7vxbp46RRol8x9Odm+DWrmVy8WHUmB1v7rmRNndNAeFzze9z4FF+fKYjTX
6UKFWz1f4/gNOJtE+sjEbEf94j2NzvZURPyUGkzZZwD+n6nbFBLT4L4z39Qj
3Qi3Bk6bvFy6A82q3omEf2Zwcs5+9n36HkojcuinEm2x8t85V3P5ZxD8LJ6m
KEjCrQBHd3WzZziizdsfsY4ElU51kkjQM8jXvnD6YEQC8bjHq6/8GXb0jQ2r
HyXhzePUl680CsHzw+uhfA8JkweYZZbNhQgkaWuF3j4E+0c3G48KFEGHB7vW
inkhwy3aylexCI3H7fIYal74JhrY5LStCM4P5e6n7fRCcIRxyw63ItQ5KSTn
B3kh3naynfdJEaS50z5mv/dC+YJx722rF3gozFJ9GuaNtTZTY7WXinFgQNJF
otQHMlHm+n7Zxci1y70u0+ID4SdZl1a8KoZn+tnW+WEfzPEd0LD5Vox7mz0K
7AR80Vr16ujg9pe4WTXg5+Lui9Oa55ZmaC8hrEv97/asL4Lde/dlzL/E6S0D
E678fvBO1MqGSAmk0udPzMr7Yd8YzeS8YQkWFxtW1Jj4QSXLIn7V9RJEqL56
lXTJD81CYmIaRq/wxmmX/59V/qjdEejTZv8KLpQbyvYq/nhNqS8Jo7zCtQMx
rYna/sh9f9L5beorxGl8f3Dezh8nowbu7J58hetNswvZ1/yhxHqwwSv9NRIa
+Cd8eQMgKcdxZlnhazwzXkizFA8Av6Xzp8fvXiMgXUmOTzkAfx+sDP7+/TUC
F7gD+IgAfHI/Uhxh/gZtXG8aVEIDcKJZD7d+vUGGYQirtj0AghovaR/4SvHr
+q4/HgMBuJekmTgvWwqjh+pRn0cD0Ga17ov7rlIkacfzeiwEYGOj2NG1qaW4
/elmWrUyGTVqydKOeaU4FnbafucmMpwSVlZdrCiFcezTiEwdMuL2cAkw6aWw
NBAQYuwmY+g960GR7lsEbovb1Ech4/g6yt4Ry7eo3mK9kwgjg/8C/ac46S1Y
Isk1EeFk6JkNGJ26+BZPLO6JXUsk43rdx158eYs/5+YMhPPJUFMxOxcy+RbE
OqElhyIyqmKq1+VyluFddqbp6TdkTBq/DlumVgaxLYwjDu/JMK++L9h0ugxF
wumdPl/JGFyj+HLpchk+XYg1uzpKRtjZDBfN3DI0yr7xT5skIxvXH11vLENx
/MAXzJIxX37W+KBsOQ4TOiZ0QQquyS2MXdIsh9WI7/KZVRSsjzhxpdy0HP4+
4ZV0KQrsDYP61wSWI/tj4xoXJQqelbocHy0vR8nboOYsLQrMZHpkpdvL0b93
3frbuhT0n7KttaCX481OtbpQAwqW6+0RfipYgZrKu9NvjCnIulVXMqRUgX3f
V9zeYEaBzgzcRHQr8OxzYcnxPRR4vdLJC/OoAGtZxonH+yiYkyja/+BoBZou
8uhesaUg+fimvz0XKrDDfDLD1p6C8m0qpgaFFZDqC7oeepACuxt3Jw7XVUDS
xMyoxZWCiV8yV+98roCqrMyn5R4USBaLDHJyVqLSj69MyosC18R5uxGJSpxc
kJoS9aEgx5vWWK9eiV6D3AM0XwpGDVuMHxtX4o9iHUeyPwXq4m/eXHKqRE4Z
a/kqMgWhkzmaQUGVWHbme0wQhYJX7xIf7o+txPMIekzOYQoWMo/La6Wz/dHN
FJ4FUmB8nHRDvLAS0Wp9lJQgCi5aW/DPvKtEzKGqKNtgCppUtWN6+yrRl+Yb
Ms5m0X9yc2XTlRjbkOzofISCAkbM6xbuKvhy2+zJYXNzz8zPKsEqbOAVdK9j
83Rt4OYi6Spcdgp/UslmscJv5FyVKrx8nrUvhc06GY4PUjZXIaq02dWYzc4X
P32N069ClsujyQ9sf+FhO+VO7KrCVQm51RvZfIdU4uS/vwomLgFLPuz1Vltt
THF2qcIWqvjz0+x4RrZntVj4ViFh5o9VADveZWvFVxqGVGFgciNzC1uPDSIJ
ZpvCq6DoJP+4M4ACq8Wlc/IXqsBz4twdG7aeQeNHy4WuVSHkks3oI7beV7vG
Zjgyq9C7teNOrzcFxdVu2j8eVoFUdY1K96Sg+0l78HBRFTzTvBqaSBTMppnn
d5ZX4U+yR+gVdwpkz5fR3zVUQdqUPreRnf9D7g/cHg1WQTOEIvPHgYJYi9Vp
aeNVeOh2lqFsR8EDneTOhF9V+P3AUmiTDQVMwdOWgSuq8fTkqvo2CwoE56fO
u4tXozbU4EagOQVbRr1q9q2pxsrA4M00EwqOV+7V26pTjWZuKSN/QwrS8mvC
lHdW44rkm19Ht1NQdlO3UMyqGh8Gy7+7aFPAeURx3d9D1Viz4s+O6o0UJK75
LVaWVA2vLaEvRtj99pSfvP/JrWqcD2he183ux7aZwUt3cqvhUvxg9B67XyXa
GrjOvWHbF1jf2stNQfa5jO+7aNXovam4mM8ko+SbyacWwxo8uf3bkOs1Gd27
z00nmddgdULKgblCMv48rZCwsq3BCbmIVR2PydA9o3eowa8GEUtxMutuk/F6
1eY/VddqQPB4ybux59cbU5k1RWM1MLH9ZbVGj4zePMddR37WwOFfRq6WJhlz
wjfIGks12OL5aHjDOjL0B4Re5q2qhe7frS8rxcgoPfafRS5RC+vI/tKUqQCU
Pfh+NCWlFo8uKd//LzMA/fwaabZ3a7Fqk7Wj87UALIRSKoTzavFpYoPjtQsB
2AE6X1JlLWKcjAaKQwJQ0dOXGTdRC3WT5Q5VpgGo5Hv//rhRHf5Wbx5fRfdH
DTlztTOzDn6GIl8/SPjjxTiF4v6nDpt4DjZyrvDHPX/9t14c7/BKpY6uuuiH
ON+eg0Fi71BtAz29YT/s9hRJjzF8hx1Bc3zRT/3Q4hwn9TTxHULi2u1qdvqh
f3egOPemeuQ/sNnHcvHFb9UdQk8C38OscPPKW77e4JrNF1699iOafH0l1nt6
QOcfqeTA00/Q1esoPerjAKu9VdG7Xn9i94vWIS0TB3jdVtinW/MJy7LsA/6t
cUCy7uCoTPcnqCsfJZf322M82EX62+IniOwIKum2s0cG1T78yN4mmJfb8OSZ
24GzxsI4idkEIrs2Yq2eLT7FajfXq7XAd/zzugd5VtAXauS6uq0FAWnKvzeS
rfAo7ZCui1EL1r2iKY9vsELM08tZLPsWrM23U1mZZwn9z2OhUudasIVUyD1T
YIFHGzMlyT0tWBLIqX9XvhvG49GFy4xb0fMy6lGKwC6c0mj+SDFvxbfOYIni
TlMUHpWmtVq1Ys0bnYfiGaaQX3omfduxFR0P+t2zNppiVnQgenNgKwzId3f2
7zVBoaGuvdOtVnz2D76qfncnFJIZs4+nWlGQqPx+2ZQhKg5FPS762YprP/N5
d6UYwl1rlfPbmVZMfPtQyGNgiIxu/defuNowwSWYvTzBAFJyCcdZEm3Y4dF0
VktDH6J5639qow3Wz02x/4ounp8py9lh2oZIlZM1n3boYv/e/bZme9rg/aWp
qYWpgyvfTzx3PNCGjE2JOWQrHfDrvg8+7dcGWkqQ+LzINvxX58OsvNIGJa0v
J2pKtuLejdnbDSltKEzeNvw+cCtM/ZIs29LaYFoaveC4diuiV7zM+5bbhhyl
4DXSqVuwtJ8n4L/XbajtmrNcG6mJmYEcmgW1DfWtu2fWtqmD8XdosEuzHd8O
ul3/t28tSvyu1FjotOMWl1SezmcVnO0hHlQatIN+ZA2p6pAKJF5lBj42a8ey
SHrlp5PK7P3FZSHctR0qOy46tJYoIv1Xt7TKxXZ8FTgX7EOThY/3+cVbSe0w
3FHK4b5GFpqd274KXG/HhWdx6lzuq1H/IuXR38x2xNly6Fl/lcZ0qK1u44t2
qOom7p/jlcTu6Sa70KF2rMrfEPK2SwSrDkVsHx1px7pbxzdFGohgsFVd1nWC
be/26+7JXGGEFV4a3vW7HRV+/JoPZwVxN3hPqPTKDsxkxL0hZ64AeWjG/rJw
B2I0fx14fX05tPc90uOW6EDx22yK2xU+fNTg5Zxc04GGAslNBanL8Gey7kqV
TgfUNvanWdG4UO0WdnSbYQckdgpwmy/jQmKTsmPezg7YiYaopqhzQulJtHyK
VQdEN7/jNxf9R0zKbuVabtsBzuKYnQ2Ri8TrxK+0CMcOcMks8xz7PU/sPWz0
xM+zAxlSysJL3LOEVD8rud+vAyVRm+tY6X+Jb5Z3w2wCO7Bgu1B40vAPcXLj
koHByQ6oRx8qMb/7k7g38faj4OUOmB4+NLXt/SQRdHOfMvl6B0wGH3IvPGQQ
uqbDZ97d6gBPSmcLb+Y48TFzxabw3A48qgza3F9LI1Is7sT1POoApeOuUfrv
YcL975bBrU87cEE7mCfe4Bsxvd/5yvhrdvyHxL3reAeJ0kXmqGkFWx+8WBPN
30fE5p01yqrtQP/JBbGjep8Ja0extPmGDtyf0xW5dLmLkOJ5NO3Q3IG4/fb3
yld2EN8KDSyKOjogn6ogu1TYSuS7teQIfOlAoxB1RdTCJ4J49edA3XAHFDcv
01uj+I7g804oUBjvQOsnaWO+/GqiXVj+vzNTHTjhYSm2cnk5kVH+3K37Jzse
LZr134OvCB/yrpItsx34an3/0G3LIkJD8otg0lIHbkqpzZx8mU/M1B72G+Pu
xGAfM2uH8D2i5ghHlcnyTnx+R7KVsL5NJMqlSN0V7MQmzScrPv1IJhw+rguZ
W9WJiEMNrcarowmFE28/2Et34tfH3SvLmIeJMeV9Ss/lO6G+9fXokW2mRFHr
t9P8Kp04m13j+7FbigiPON7ht6ETyT/Tpo4JkwgztRXqtRqdONarOL4q5BQh
3JMZK6/dicfXsmOarRKILzFbBk7pdSKyTiPGwyOVyNF8t62L6MTd0sdTy7mz
icMDTpc1TTthqXvY5gX/I0IngUm/tKcTIDxuCqgWEhy6ZzFq3QnJsYAwR2ox
8XF41S1ju078Lj7NMaldSlxPfvg907kTKxJtzleLVBGuOwz2zLp3gqqZU063
ryVUJ5qz7bw70VpzKquSXk98T/WcexbQicX3T7eurftIlJr8sV0Z3AmRsxJc
3yebib2Zcjw1pzqx1dcoZ8WqTkLC4rmrXFQnlmveNhVK7yaof0xfnoztxOXU
EsffZl+IsP2HfTdf6UTCzdfKoqJDBLH4ryIhpRNXrI0NhKS+Erx51yXpaZ3g
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
Yzs=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$25058#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Length x\"", TraditionalForm], 
       FormBox[
       "\"|\[Phi](x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"PDFs of |f(x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\), \
|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)(x)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\), and \
f(x)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)(x)\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"(f(x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\) = \
(\\!\\(\\*SqrtBox[FractionBox[\\(30\\), SuperscriptBox[\\(L\\), \
\\(5\\)]]]\\)x(L-x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)(x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\) = \
(\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\\!\\(\\*FractionBox[\\(\[Pi]x\\), \
\\(L\\)]\\))\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)(x)-f(x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\) = \
(\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\\!\\(\\*FractionBox[\\(\[Pi]x\\), \
\\(L\\)]\\))-(\\!\\(\\*SqrtBox[FractionBox[\\(30\\), SuperscriptBox[\\(L\\), \
\\(5\\)]]]\\)x(L-x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.848745231603322*^9}},
 CellLabel->
  "Out[461]=",ExpressionUUID->"d8dfcad8-723e-4877-b773-c6ee7aab2f41"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Calculate Probability Of x = 0 To x = \\!\\(\\*FractionBox[\
\\(L\\), \\(3\\)]\\) For Each PDF |\[Phi](x)\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452316680517`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"eb1435ac-5dd9-4ce8-a719-f9672a7e8f0f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(i)\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \
FractionBox[\\(L\\), \\(3\\)]]\\)\"\>", "\[InvisibleSpace]", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "x"}], "]"}], "2"]}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox["1", "3"], "-", 
    FractionBox[
     SqrtBox["3"], 
     RowBox[{"4", " ", "\[Pi]"}]]}]}],
  SequenceForm[
  "(i)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), FractionBox[\(L\), \
\(3\)]]\)", 2 Sin[Pi $CellContext`x]^2, " = ", Rational[1, 3] + 
   Rational[-1, 4] 3^Rational[1, 2]/Pi],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452340273757`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"235817a0-9c24-4d2a-9bfd-17bef803382e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(ii)\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \
FractionBox[\\(L\\), \\(3\\)]]\\)\"\>", "\[InvisibleSpace]", 
   RowBox[{"30", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "2"], " ", 
    SuperscriptBox["x", "2"]}], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["17", "81"]}],
  SequenceForm[
  "(ii)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), FractionBox[\(L\), \(3\
\)]]\)", 30 (1 - $CellContext`x)^2 $CellContext`x^2, " = ", 
   Rational[17, 81]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.84874523404303*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"af18ce7d-270e-4d05-a50f-e022a39a3302"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(iii)\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \
FractionBox[\\(L\\), \\(3\\)]]\\)\"\>", "\[InvisibleSpace]", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SqrtBox["30"]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], ")"}], "2"], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox["44", "81"], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      SqrtBox["15"]}], 
     SuperscriptBox["\[Pi]", "3"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["5"]}], 
     SuperscriptBox["\[Pi]", "2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "9"}], "+", 
      RowBox[{"16", " ", 
       SqrtBox["5"]}]}], 
     RowBox[{"12", " ", 
      SqrtBox["3"], " ", "\[Pi]"}]]}]}],
  SequenceForm[
  "(iii)\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), FractionBox[\(L\), \
\(3\)]]\)", (-30^Rational[1, 2] (1 - $CellContext`x) $CellContext`x + 
    2^Rational[1, 2] Sin[Pi $CellContext`x])^2, " = ", Rational[44, 81] - 4 
   15^Rational[1, 2] Pi^(-3) - 2 5^Rational[1, 2] Pi^(-2) + 
   Rational[1, 12] 3^Rational[-1, 2] (-9 + 16 5^Rational[1, 2])/Pi],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.84874523404303*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"1bbc8f53-50eb-47ce-a09b-0dcb05785022"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234058647*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"39ef92b1-19c0-43a0-b55e-ae7f16b50939"],

Cell[BoxData["\<\"---------------------------------------------\\n------------\
-----Question \
4-----------------\\n---------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234058647*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"3594fe6e-58e8-4c12-8ae3-80311d54e949"],

Cell[BoxData["\<\"Solve for normalization constant A of initial PDF\"\>"], \
"Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234058647*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"43c4f81e-0a52-4f37-b7c5-d13682bdda72"],

Cell[BoxData["\<\"(1) \\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \
\\(L\\)]\\)\\!\\(\\*SuperscriptBox[\\(\[Psi]\[Psi]\\), \\(*\\)]\\) = 1, then \
\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(\
\[Integral]\\), \\(0\\), \\(L\\)]\\)(\\!\\(\\*SubscriptBox[\\(c\\), \
\\(1\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)+\\!\\(\\*SubscriptBox[\\(c\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(2\\)]\\))(\\!\\(\\*SubscriptBox[\\(c\\), \
\\(1\\)]\\)\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Psi]\\), \\(*\\)], \
\\(1\\)]\\)+(\\!\\(\\*SubscriptBox[\\(c\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Psi]\\), \\(*\\)], \
\\(2\\)]\\))dx = 1.\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234058647*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"390d872a-74a7-4fd9-b4e2-f376dcefebcd"],

Cell[BoxData["\<\"(2) Expanding the integral in step 2, and using the fact \
that the\\ndot product of two orthonormal eigenstates is \
0,\\n\\!\\(\\*SuperscriptBox[\\(A\\), \
\\(2\\)]\\)[(\\!\\(\\*FractionBox[\\(1\\), \
\\(4\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \\(L\\)]\\)\
\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Psi]\\), \\(*\\)], \
\\(1\\)]\\)dx + 0 + 0 + (\\!\\(\\*FractionBox[\\(3\\), \
\\(4\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \\(L\\)]\\)\
\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Psi]\\), \\(*\\)], \
\\(2\\)]\\)dx] = 1\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452340742536`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"b65b7398-19e6-4336-ace5-20aa3333de48"],

Cell[BoxData["\<\"(3) Since \\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \
\\(0\\), \\(L\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(x\\)]\\)\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Psi]\\), \\(*\\)], \
\\(x\\)]\\)dx = 1, then \\!\\(\\*SuperscriptBox[\\(A\\), \
\\(2\\)]\\)(\\!\\(\\*FractionBox[\\(1\\), \\(16\\)]\\) +\\!\\(\\*FractionBox[\
\\(9\\), \\(16\\)]\\)) = 1. \\nTherefore, A = \
\\!\\(\\*SqrtBox[FractionBox[\\(16\\), \\(10\\)]]\\)= \
\\!\\(\\*FractionBox[\\(4\\), SqrtBox[\\(10\\)]]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.8487452340742536`*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"189e12bf-9aa5-4431-96db-04f4be2099ca"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234089879*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"9a832a1d-9ef5-4df6-9a82-043e94f7fe20"],

Cell[BoxData["\<\"Plot initial PDF Of |\[Psi]\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\) Where n=1, m=2, \\!\\(\\*SubscriptBox[\\(c\\), \\(1\\)]\\)=0.25, \
\\!\\(\\*SubscriptBox[\\(c\\), \\(2\\)]\\)=0.75, and A = \
\\!\\(\\*FractionBox[\\(4\\), SqrtBox[\\(10\\)]]\\)\"\>"], "Print",
 CellChangeTimes->{{3.84874522409645*^9, 3.848745234089879*^9}},
 CellLabel->
  "During evaluation of \
In[399]:=",ExpressionUUID->"0a4b8e26-1316-4e8e-88cf-955b3eda7347"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pt9MqFK3jAyT/flmt73MPM8YxK55MrPJ/t3iosCRuWQMgh87oyhLZvAqmv2f
7dIx8BtmlB0n+z1+1vd+ndAYmqsQ/ZGT7L+sZ3/i149h2F0nTew3G3w99h0n
JMbwZID/8eqfbAQt3ZK7ZMMYFLuG1vD8YMPrTJHzZZkxnOs9NF42w4ardDtN
R2UMxtFjKplMNkaOx2X+2j4Gu4vSynojbNj7OoS+UR/DxSvVvX2DbJzsntm7
bs8YzL48cxjqY0P3sWDqxMExCIUGXHdpY+Pzp/bAF7pjoBTXemTR2CC+xVmb
6o3hmFPgoVHyfNU4vlWk3HAM+ryn3HbXssl5qev78NQYCj+42lqQ5zPFJ8Bk
9+UxpClKFQYlsZE/M/mr/MoY4oMPvzd+QZ6fzhYJh66Nwb/9PUTjSX/Ht40b
e40hbALjodHkfjf2+l0MJr8r+ryV5sLY4PmyKyPp6RgszJL0Bch5lL832XBL
HOnvm/KLgy7kerlCP3Kej6FnX2e5hyO5XuwIUZY0BqvQvmvFVmzcuhDV0ZU1
hvNNacc69NngEmFzClaOoUs1RtBqKxt5oadeR30eQ0u8iS+PHJmvv9X6YjVj
8JrQFUjeSM7X4fgn8g1j4NxTFvNFlI3AIj0l7Y4x8AQcFEpdwganzWuLG+Nj
QJBoT/gnFjjSbLIZwuPgOb4u5LAUC9WTnRcTVo+DT/bktnsiLNxRMVK2WjeO
jH3Nnz4uYWFtkXZWu8Q4BDeJf2OxpqFcI5/xRX4czqt7tF3Lp2E1/O3VG61x
KDd5841YTuO9dOjzm67jiK1KMfIMmoJ7bPZd4cpxrOhSFzjxagKFf2NDKz+P
Y3I7/Utu9AT+2oQEuNeMw3ebVj936ARCN1l7tDSMo93V6oLfmQnEZS61ftg5
Dqtrk7YdchOoKnNSFJ4aR4fQZpc1r8axblCsfuW6CTgez1C7QdahdGsY38qL
E/i2Xi2q2HYUK4+6KwYKTmJO48h6AxZ5j1GitnqWTMJ6pfdHw7/dyHmOzUM2
Uyhu36JjrdmK2ZuzS+zspvDWvDuHJtqKneavJ3odptBZ1qdl/qsFH4SE3na6
TOHPxScG0UUtqPbv21/vPoUKoVBZpkYLuu19TueFTGHVpYOffu2mgVfuQ6z/
mynwePiYPnjahCPcl3wXcqawW2Uw46h1E+70b7S/+XYKjRUPWMrSTVgZE65w
tWgKtco7dD3TGiHOb1l0pnIKdkEFHuIlDdg+8bPdoGMKfSjpbB+rg3X2zpUS
i1N4Wnirq8WlBgWWPwWpHNOYcqgLqFWqgSBvscAt7mlwfnrF9/dbNSqs9vGN
8U1j+z25gdW+1di4VOdfvsg03qxd+3fzkyqMOBpN6StMo9vVY/m3tk+4uP58
rbfJNHbxWlQhoALVVUo128ynMXbGuhMGFZC6zPrMODkNLU/X3CCxClBr3Ct0
T0/jfNCDsA8XyrHdw7Nwles04v2XcqTRSzHfHJKS6TeNS/ku39cOFcM/ODGg
J30avBw+NrFm77D8+pKjdlnkeuI3D5rwvUOsywXhkWzSf3so96PifLzV253E
yp/Gtl9f7V9syMfIStpnLlKH5fMuUjyzedB7zsGn0DqNhNPtm3fn5qAr0pma
1T6N7BsJh1zO5cAxoCFme9c05v0vuEvL5sDXMUZhb+80Tie7wlkzGzlbVPSO
j05jx9rVLkWbsrCm8PQ9jz+k7hVyswS2piEptcrsN/mdvFC/PPtbTipUYrdK
+XGwMJd+7Nt3jVQc8ZnPDqOwcHr2iI3Zkdfw1o6kPRMi++zLAce7nilgNJet
qtzEQspZ2TKdFS9x6ePm3kOyLGQ/d/m5JzURf/PCU+rlWeDPOW9rsT8Rq6PN
drYrsfB8V2so1/UX0LWaNmdqsKAifU3caCAeWUyJZ4L6LDhWv16qphaDsPhg
2z4DFqS2PTvh7vEEjiemZN4YseDGLzf27H00xEtKco6Zs3DsWZvYu6OPER55
qvqOPQsFId+dxO4/hLPOpwgrJxaUf31aTmU+wIFfW4wUXVgoaSxvuK7zAL/s
f3fXX2BBPllENpnnPlx2Pp1Z6slCQoLi1AqjCOhMcBT+50X647Y62qMaDqkX
Lt7pvmQ8CfKmz9bdRgf/riVHg1jwfTAc9Xs+BAd7O8RvR7LwQfwczXkxEBse
ajEsHrLQn+A6/lMwEH8PvXot/5gFH9t20XCZAOTneGz/EstCxdEnida1vtgY
tEp3ySsWrlsuf3vI7AYWd3kv70xlYWkd784XndfwdWqw5VUGC4joClzq5IH7
5m+tD+WS+Zr3ChVNdsd5AbFNa/JZCHiTK1Zpehm6HwOZwwUsRMQFbr8l4oZ/
W05cCS5hoX7BvSHD+Rz+63+/y7Schbq+xOz2LWdRECW9uLmShXTpz+P7lpzB
xUV22OcaFsJz2w628zng6FsLg6g6FiwlVf/xK9tBxqVCxLGRBcn9GSErOm3Q
Q4t8zt1K7mf2tWGHjQWKQuYdWttJPcVYJaeeM0XUntMKSV0s7BV9oroh7QTc
2NXT7t0stE0PdBBrDaGXopx/oI+FU66rrMXP60HWMtpTmM5CZ/IRibXLDoNL
aFGLMciC2NS/lTeWaaPvkxNP3gipt57IzNv/aaH4RmNtwBi5nqLmLx67XYhW
Uo80mmRB36VU4lz6dlxmxJlIs1iYfCC3O+zCVug/4Vk/M8PCvnvURiWBTZDX
P99fMcdCz4Kae4rdOvBwtiXfn2dhIjv5NNfFZRh4t8fV9jcLDx483Dhv91Or
xDVpm8oCCy/LrubZ2HdpPZFa9v3fPxaGx7n/Ldm8dt//AMe3YVc=
       "]]},
     Annotation[#, "Charting`Private`Tag$26688#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length x\"", TraditionalForm], 
    FormBox[
    "\"|\[Psi](x,t=0)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"|\[Psi](x,t=0)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)= \
(A(0.25\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(\[Pi]x)+0.75\\!\\(\\*SqrtBox[FractionBox[\\(2\\), \
\\(L\\)]]\\)sin(2\[Pi]x)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\) vs \
Length x\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487452244506392`*^9, 3.8487452341589437`*^9}},
 CellLabel->
  "Out[478]=",ExpressionUUID->"4d3f958e-d8d6-49ed-8495-2653c3552c1e"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 46863, 1106, 6321, "Code",ExpressionUUID->"fb224d9c-cead-40b0-b6e4-0294e31b1a28"],
Cell[CellGroupData[{
Cell[47468, 1132, 353, 7, 59, "Print",ExpressionUUID->"94527a9b-9495-40bb-8a8b-153d26d4cedf"],
Cell[47824, 1141, 348, 7, 26, "Print",ExpressionUUID->"4645af19-fc70-4444-aadd-056d3bccb9d8"]
}, Open  ]],
Cell[48187, 1151, 71612, 1281, 251, "Output",ExpressionUUID->"eff6d619-06d8-407d-a8eb-813f7ba9189b"],
Cell[119802, 2434, 331, 6, 22, "Print",ExpressionUUID->"1d10ae0d-a6d8-4066-89e8-77b0089fa476"],
Cell[120136, 2442, 14343, 252, 390, "Output",ExpressionUUID->"2bcf41ef-5ac9-4cf9-b995-dc368aec11e0"],
Cell[134482, 2696, 31982, 542, 390, "Output",ExpressionUUID->"a97dee12-1451-458e-ac46-7fb26d16a954"],
Cell[166467, 3240, 49624, 831, 390, "Output",ExpressionUUID->"dfee9a42-7427-4554-ab8b-c09b57227a01"],
Cell[CellGroupData[{
Cell[216116, 4075, 353, 7, 59, "Print",ExpressionUUID->"636abb00-a789-4a1b-80c8-2b1b54cc4985"],
Cell[216472, 4084, 217, 4, 22, "Print",ExpressionUUID->"c6ba92b1-265f-4650-99f5-caeda1cd1914"],
Cell[216692, 4090, 277, 5, 22, "Print",ExpressionUUID->"7c8b6f0c-a221-425e-ba3f-731db2e0380b"],
Cell[216972, 4097, 635, 11, 80, "Print",ExpressionUUID->"e68f71cf-a4e9-4b49-951b-bb0686a664bd"],
Cell[217610, 4110, 419, 8, 66, "Print",ExpressionUUID->"5a20ae29-737c-49cf-8039-05ad16e3f051"],
Cell[218032, 4120, 445, 7, 82, "Print",ExpressionUUID->"a50cfb48-0d6b-4ae9-aaff-58254d8a5501"],
Cell[218480, 4129, 861, 20, 51, "Print",ExpressionUUID->"906aef8e-5915-4a99-9081-5f367d4ff983"],
Cell[219344, 4151, 260, 5, 47, "Print",ExpressionUUID->"12fa61c9-97e4-485d-85a5-fb2966e874e9"],
Cell[219607, 4158, 207, 4, 22, "Print",ExpressionUUID->"d9fca373-6a8a-49f6-bd7f-939fe0ae52cb"],
Cell[219817, 4164, 260, 5, 22, "Print",ExpressionUUID->"a32c76bc-3e49-4cc6-a366-9caaf4f29faf"],
Cell[220080, 4171, 945, 15, 109, "Print",ExpressionUUID->"c390bb01-2883-4c98-a718-457af9b2b476"],
Cell[221028, 4188, 1693, 32, 126, "Print",ExpressionUUID->"a9332800-201d-4eb5-8d80-6a9ec83f72a0"],
Cell[222724, 4222, 205, 4, 22, "Print",ExpressionUUID->"5cd3ba47-c0be-4f85-b84e-2fd3844fece7"],
Cell[222932, 4228, 342, 6, 24, "Print",ExpressionUUID->"81b046ec-13c7-4ba1-9be1-c85bf9340bd1"],
Cell[223277, 4236, 666, 11, 56, "Print",ExpressionUUID->"2adc2893-8baa-45d2-bcc4-a7359c0d52a7"],
Cell[223946, 4249, 562, 10, 67, "Print",ExpressionUUID->"2274b72c-1452-4ad7-82ef-745b8a902d5c"],
Cell[224511, 4261, 631, 10, 104, "Print",ExpressionUUID->"a8d80e3c-8c90-454b-915a-d4b17413630b"],
Cell[225145, 4273, 380, 6, 64, "Print",ExpressionUUID->"4c258b5c-21a0-4b6e-b7a7-1c13fe213f6b"],
Cell[225528, 4281, 762, 19, 50, "Print",ExpressionUUID->"c007eef5-a0f7-4463-9fb2-087ac430da11"],
Cell[226293, 4302, 328, 5, 50, "Print",ExpressionUUID->"f64f9603-969b-4a69-a886-9b8f725a92fe"],
Cell[226624, 4309, 1045, 23, 65, "Print",ExpressionUUID->"76caeda7-331d-4088-8414-5f28a15e1d3a"],
Cell[227672, 4334, 205, 4, 22, "Print",ExpressionUUID->"905c24a3-69ac-4c11-adf4-90c8767d2481"],
Cell[227880, 4340, 389, 7, 28, "Print",ExpressionUUID->"a2ff3732-877c-4392-ac76-4af1b570f5a9"],
Cell[228272, 4349, 704, 12, 72, "Print",ExpressionUUID->"1c924757-b173-48df-a85c-d459cddc01b5"],
Cell[228979, 4363, 661, 12, 83, "Print",ExpressionUUID->"23c670ed-c012-409b-8ab9-b3cc812dbdf9"],
Cell[229643, 4377, 641, 10, 69, "Print",ExpressionUUID->"8312b59b-3ddf-4d5f-ada6-81db45f7e5fa"],
Cell[230287, 4389, 1073, 24, 60, "Print",ExpressionUUID->"5a31ddbe-3b9f-4acc-925a-a287a250c3b9"],
Cell[231363, 4415, 714, 11, 89, "Print",ExpressionUUID->"2f1b0e87-ad3e-4ef4-bfb9-400018ea91d4"],
Cell[232080, 4428, 1490, 28, 116, "Print",ExpressionUUID->"ba440853-3b91-409a-b962-9f0efc7c997a"],
Cell[233573, 4458, 1023, 19, 99, "Print",ExpressionUUID->"7bc6fc6c-ba12-4d90-920e-bd86fd188ad0"],
Cell[234599, 4479, 667, 16, 50, "Print",ExpressionUUID->"18f007a5-10ee-4c10-9810-789d95ebf3c8"],
Cell[235269, 4497, 1317, 29, 61, "Print",ExpressionUUID->"4cb9f8a0-8407-4585-9786-d20fd418d33a"],
Cell[236589, 4528, 351, 7, 59, "Print",ExpressionUUID->"771a18ba-b0da-4b1e-819b-3b13a3edf2d1"],
Cell[236943, 4537, 236, 4, 22, "Print",ExpressionUUID->"90e83302-9441-49c6-92f7-420a8660b16d"],
Cell[237182, 4543, 393, 6, 51, "Print",ExpressionUUID->"3aba5ae3-5351-444b-924e-72d4f720bfd0"],
Cell[237578, 4551, 531, 13, 50, "Print",ExpressionUUID->"ba041a31-d8ce-44a6-8f30-918a5ad9b1dd"],
Cell[238112, 4566, 534, 15, 61, "Print",ExpressionUUID->"5bc30f13-5db1-4c2a-bea1-0782603c0d52"],
Cell[238649, 4583, 293, 5, 61, "Print",ExpressionUUID->"840cea58-b876-4912-9dad-52e895a95172"],
Cell[238945, 4590, 207, 4, 22, "Print",ExpressionUUID->"c8f5864d-56bb-443e-b95e-b2e201fc5beb"],
Cell[239155, 4596, 235, 4, 22, "Print",ExpressionUUID->"1dfa07fa-7709-4b0a-84bf-d8f199e9604e"]
}, Open  ]],
Cell[239405, 4603, 54152, 980, 381, "Output",ExpressionUUID->"d8dfcad8-723e-4877-b773-c6ee7aab2f41"],
Cell[CellGroupData[{
Cell[293582, 5587, 358, 6, 47, "Print",ExpressionUUID->"eb1435ac-5dd9-4ce8-a719-f9672a7e8f0f"],
Cell[293943, 5595, 871, 22, 54, "Print",ExpressionUUID->"235817a0-9c24-4d2a-9bfd-17bef803382e"],
Cell[294817, 5619, 785, 19, 50, "Print",ExpressionUUID->"af18ce7d-270e-4d05-a50f-e022a39a3302"],
Cell[295605, 5640, 1574, 44, 60, "Print",ExpressionUUID->"1bbc8f53-50eb-47ce-a09b-0dcb05785022"],
Cell[297182, 5686, 205, 4, 22, "Print",ExpressionUUID->"39ef92b1-19c0-43a0-b55e-ae7f16b50939"],
Cell[297390, 5692, 351, 7, 59, "Print",ExpressionUUID->"3594fe6e-58e8-4c12-8ae3-80311d54e949"],
Cell[297744, 5701, 256, 5, 22, "Print",ExpressionUUID->"43c4f81e-0a52-4f37-b7c5-d13682bdda72"],
Cell[298003, 5708, 893, 15, 41, "Print",ExpressionUUID->"390d872a-74a7-4fd9-b4e2-f376dcefebcd"],
Cell[298899, 5725, 959, 17, 84, "Print",ExpressionUUID->"b65b7398-19e6-4336-ace5-20aa3333de48"],
Cell[299861, 5744, 690, 11, 111, "Print",ExpressionUUID->"189e12bf-9aa5-4431-96db-04f4be2099ca"],
Cell[300554, 5757, 205, 4, 22, "Print",ExpressionUUID->"9a832a1d-9ef5-4df6-9a82-043e94f7fe20"],
Cell[300762, 5763, 456, 7, 53, "Print",ExpressionUUID->"0a4b8e26-1316-4e8e-88cf-955b3eda7347"]
}, Open  ]],
Cell[301233, 5773, 15830, 281, 409, "Output",ExpressionUUID->"4d3f958e-d8d6-49ed-8495-2653c3552c1e"]
}, Open  ]]
}
]
*)

