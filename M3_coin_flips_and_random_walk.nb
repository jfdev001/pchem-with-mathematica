(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    106846,       2169]
NotebookOptionsPosition[    105826,       2147]
NotebookOutlinePosition[    106168,       2162]
CellTagsIndexPosition[    106125,       2159]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Probability", "-", "M3"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Jared", " ", "Frazier"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Description", ":", "\n", "\n", 
     RowBox[{
     "Simulate", " ", "probabilistic", " ", "outcomes", " ", "and", " ", 
      "frequencies", " ", "of", " ", "simulated", " ", "coin", " ", "tosses", 
      " ", "as", " ", "well", " ", "as", " ", "random", " ", "walk", " ", 
      "in", " ", "one", " ", "and", " ", "two", "\n", 
      RowBox[{"dimensions", ".", "\n", "\n", "Oddly"}]}]}], ",", " ", 
    RowBox[{
    "for", " ", "the", " ", "second", " ", "run", " ", "where", " ", "the", 
     " ", "number", " ", "of", " ", "simulations", " ", "and", " ", "number", 
     " ", "of", " ", "coin", " ", "tosses", " ", "increases"}], ",", " ", 
    RowBox[{
    "the", " ", "frequency", "\n", "of", " ", "heads", " ", "releative", " ", 
     "to", " ", "the", " ", "number", " ", "of", " ", "tosses", " ", "for", 
     " ", "a", " ", "given", " ", "simulation", " ", 
     RowBox[{"declines", ".", " ", "In"}], " ", "the", " ", "first", " ", 
     "figure"}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "frequency", "\n", "appears", " ", "to", " ", "be", " ", 
      "the", " ", "expected", " ", "0.50", " ", "for", " ", "heads"}], "-", 
     RowBox[{"tails", " ", "coin", " ", "tosses"}]}], ",", " ", 
    RowBox[{
    "while", " ", "for", " ", "the", " ", "second", " ", "simulation", " ", 
     "it", " ", "appears", " ", "to", " ", 
     RowBox[{
      RowBox[{"be", "\n", "~", "0.15"}], "."}]}]}], "\n", "\n", "*)"}], "\n", 
  
  RowBox[{"(*", 
   RowBox[{"Due", ":", " ", 
    RowBox[{"09", "-", "28", "-", "2020"}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "*******)"}], "\n", 
   "                        ", 
   RowBox[{"(*", 
    RowBox[{"Part", " ", 
     RowBox[{"1", " ", "--"}], " ", "Tossing", " ", "Coins"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**"}], "*******)"}], "\n", 
   RowBox[{"Print", "[", "\"\<Part 1 -- Tossing Coins:\>\"", "]"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Set", " ", "seed", " ", "to", " ", "get", " ", "consistent", " ", 
     "random", " ", "results", " ", "for", " ", "testing"}], "*)"}], "\n", 
   RowBox[{"SeedRandom", "[", "12345", "]"}], " ", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Function", " ", "with", " ", "no", " ", 
        RowBox[{"params", " ", "--"}]}], ">", " ", "1"}], " ", "=", " ", 
      "heads"}], ",", " ", 
     RowBox[{"0", " ", "=", " ", "tails"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"coinFlip", " ", ":=", " ", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "time", " ", "to", " ", "flip", " ", "coin"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", "10"}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"20", " ", "total", " ", "simulations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simTotal", " ", "=", " ", 
     RowBox[{"2", "*", "n"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Track", " ", "number", " ", "of", " ", "simulations", " ", "where", " ", 
      RowBox[{"Table", "[", "]"}]}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"headCount", ",", "tailcount"}], "}"}], "..."}], "."}], 
      "}"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTable20", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "simTotal", ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"20", "x2", " ", "table", " ", 
      RowBox[{"w", "/", " ", "all"}], " ", 
      RowBox[{"eles", " ", "@", " ", "0"}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"Simulation", " ", "loop"}], "*)"}], "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", "simTotal"}], ",", " ", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Simulate", " ", "simTotal", " ", "time", " ", "where", " ", 
         "simTotal"}], " ", "=", " ", 
        RowBox[{"20", " ", "or", " ", "2", "n"}]}], "*)"}], "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"j", " ", "<=", " ", "n"}], ",", " ", 
        RowBox[{"j", "++"}], ",", "  ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Flip", " ", "coin", " ", "n", " ", "times", " ", "where", " ", 
           "n"}], " ", "=", " ", "10"}], "*)"}], "\n", "       ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"coinFlip", " ", "\[Equal]", " ", "1"}], ",", " ", "\n", 
          "            ", 
          RowBox[{
           RowBox[{"simulationTable20", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "++"}], ",", " ", "\n", 
          "            ", 
          RowBox[{
           RowBox[{"simulationTable20", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "++"}]}], "\n", "       ",
          "]"}]}], "\n", "    ", "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Bin", " ", "Table"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"binTable", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"n", "+", "1"}], ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"11", "x2", " ", "rows"}], " ", "*)"}], "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"i", " ", "<=", " ", "n"}], ",", " ", 
      RowBox[{"i", "++"}], ",", "    ", 
      RowBox[{"(*", 
       RowBox[{
       "Initialize", " ", "1", "st", " ", "column", " ", "of", " ", "bin", 
        " ", "table"}], "*)"}], "\n", "    ", 
      RowBox[{
       RowBox[{"binTable", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], " ", "=", " ", 
       "i"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Iterate", " ", "through", " ", "Simulation", " ", "Table", " ", "and", 
     " ", "increment", " ", "appropriate", " ", "frequency", " ", "in", " ", 
     "binTable"}], "*)"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "simTotal"}], ",", " ", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Simulate", " ", "simTotal", " ", "time", " ", "where", " ", 
        "simTotal"}], " ", "=", " ", 
       RowBox[{"20", " ", "or", " ", "2", "n"}]}], "*)"}], "\n", "    ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"j", " ", "\[LessEqual]", " ", 
        RowBox[{"n", "+", "1"}]}], ",", " ", 
       RowBox[{"j", "++"}], ",", "\n", "       ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"simulationTable20", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"binTable", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", "\n", "          ", 
         
         RowBox[{
          RowBox[{"binTable", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}], "++"}]}], "\n", "       ", 
        "]"}]}], "\n", "    ", "]"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Sum", " ", "of", " ", "frequencies", " ", "for", " ", "binTable"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sumFrequencies", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", 
      RowBox[{"n", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"sumFrequencies", " ", "+=", " ", 
      RowBox[{"binTable", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Convert", " ", "table", " ", "to", " ", "P", 
     RowBox[{"(", "H", ")"}], " ", "for", " ", "normal", " ", 
     "distribution"}], "*)"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", 
      RowBox[{"n", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"binTable", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"binTable", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", "sumFrequencies"}]}]}], 
    "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculating", " ", "mean"}], ",", " ", 
     RowBox[{
     "and", " ", "standard", " ", "deviation", " ", "of", " ", "frequency", 
      " ", "distribution", " ", "table", " ", "binTable"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanNumerator", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"meanDenominator", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Sum", " ", "of", " ", "P", 
      RowBox[{"(", "H", ")"}], " ", "must", " ", "be", " ", "1"}], "*)"}], 
    "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", 
       RowBox[{"n", "+", "1"}]}], ",", " ", 
      RowBox[{"i", "++"}], ",", "\n", "    ", 
      RowBox[{"meanNumerator", " ", "+=", " ", 
       RowBox[{
        RowBox[{"binTable", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        RowBox[{"binTable", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"meanBinTable", " ", "=", " ", 
     RowBox[{"meanNumerator", "/", "meanDenominator"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"xbar", " ", "=", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalSigma]", 
         RowBox[{"(", "xf", ")"}]}], "\[CapitalSigma]f"], " ", "=", 
       FractionBox[
        RowBox[{"mean", " ", "numerator"}], 
        RowBox[{"mean", " ", "denominator"}]]}]}], "*)"}], "\n", 
    RowBox[{"varianceNumerator", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", 
      RowBox[{"n", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"varianceNumerator", " ", "+=", " ", 
      RowBox[{
       RowBox[{"binTable", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"binTable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "meanBinTable"}], 
         ")"}], "^", "2"}]}]}]}], " ", "\n", "]"}], "\n", 
   RowBox[{
    RowBox[{"varianceBinTable", " ", "=", " ", 
     RowBox[{"varianceNumerator", "/", "1"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDevBinTable", " ", "=", " ", 
     RowBox[{"Sqrt", "[", "varianceBinTable", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "data", " ", "values"}], "*)"}], "\n", 
   RowBox[{"Show", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"binTable", ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", "\n", "    ", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Binned Data for 20 Simulations of 10 Coin Flips\>\""}], ",", 
       "\n", "    ", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Number of Heads\>\"", ",", "\"\<Frequency N(H)/N\>\""}],
          "}"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\n", "    ", "]"}], ",", 
     "\n", "    ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"meanBinTable", ",", "stdDevBinTable"}], "]"}], ",", " ", 
         "x"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "n"}], "}"}], ",", "\n", "    ", 
       RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\n", "    ", "]"}]}], "\n", 
    "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "***)"}], "\n", "                          ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Part", " ", 
      RowBox[{"1", " ", "--"}], " ", "CTD", " ", "N"}], "=", "100"}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Do", " ", "binned", " ", "data", " ", "for", " ", "N"}], "=", 
     RowBox[{
      RowBox[{"100", " ", "flips", " ", "therefore", " ", "simTotal"}], " ", 
      "=", " ", 
      RowBox[{
       RowBox[{"100", "*", "2"}], " ", "=", " ", 
       RowBox[{"200", " ", "simulations"}]}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*****)"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{"n2", " ", "=", " ", "100"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "time", " ", "to", " ", "flip", " ", "coin"}], 
     "*)"}], "\n", 
    RowBox[{"simTotal2", " ", "=", " ", 
     RowBox[{"2", "*", "n2"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"20", " ", "total", " ", "simulations"}], "*)"}], "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Track", " ", "number", " ", "of", " ", "simulations", " ", "where", 
       " ", 
       RowBox[{"Table", "[", "]"}]}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"headCount", ",", "tailcount"}], "}"}], "..."}], "."}], 
       "}"}]}], "*)"}], "\n", 
    RowBox[{"simulationTable200", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "simTotal2", ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"200", "x2", " ", "table", " ", 
      RowBox[{"w", "/", " ", "all"}], " ", 
      RowBox[{"eles", " ", "@", " ", "0"}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"Simulation", " ", "loop"}], "*)"}], "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", "simTotal2"}], ",", " ", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Simulate", " ", "simTotal", " ", "time", " ", "where", " ", 
         "simTotal"}], " ", "=", " ", 
        RowBox[{"200", " ", "or", " ", "2", "n"}]}], "*)"}], "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"j", " ", "<=", " ", "n2"}], ",", " ", 
        RowBox[{"j", "++"}], ",", "  ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Flip", " ", "coin", " ", "n", " ", "times", " ", "where", " ", 
           "n"}], " ", "=", " ", "10"}], "*)"}], "\n", "       ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"coinFlip", " ", "\[Equal]", " ", "1"}], ",", " ", "\n", 
          "            ", 
          RowBox[{
           RowBox[{"simulationTable200", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "++"}], ",", " ", "\n", 
          "            ", 
          RowBox[{
           RowBox[{"simulationTable200", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "++"}]}], "\n", "       ",
          "]"}]}], "\n", "    ", "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Bin", " ", "Table"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"binTable2", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"n2", "+", "1"}], ",", "2"}], "]"}]}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "n2"}], ",", " ", 
     RowBox[{"i", "++"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "Initialize", " ", "1", "st", " ", "column", " ", "of", " ", "bin", " ",
        "table"}], "*)"}], "\n", "    ", 
     RowBox[{
      RowBox[{"binTable2", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], " ", "=", " ", 
      "i"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Iterate", " ", "through", " ", "Simulation", " ", "Table", " ", "and", 
     " ", "increment", " ", "appropriate", " ", "frequency", " ", "in", " ", 
     "binTable"}], "*)"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "simTotal2"}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"j", " ", "\[LessEqual]", " ", 
        RowBox[{"n2", "+", "1"}]}], ",", " ", 
       RowBox[{"j", "++"}], ",", "\n", "       ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"simulationTable200", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"binTable2", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", "\n", "          ", 
         
         RowBox[{
          RowBox[{"binTable2", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}], "++"}]}], "\n", "       ", 
        "]"}]}], "\n", "    ", "]"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Sum", " ", "of", " ", "frequencies", " ", "for", " ", "binTable2"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sumFrequencies2", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", 
      RowBox[{"n2", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"sumFrequencies2", " ", "+=", " ", 
      RowBox[{"binTable2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Convert", " ", "binTable", " ", "frequency", " ", 
      RowBox[{"(", 
       RowBox[{"whole", " ", "num"}], ")"}], " ", "to", " ", "fraction", " ", 
      "of", " ", "total", " ", "simulations"}], ",", " ", 
     RowBox[{"or", " ", "P", 
      RowBox[{"(", "H", ")"}]}]}], "*)"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", 
      RowBox[{"n2", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"binTable2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"binTable2", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", "sumFrequencies2"}]}]}], 
    "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculating", " ", "mean"}], ",", " ", 
     RowBox[{
     "and", " ", "standard", " ", "deviation", " ", "of", " ", "frequency", 
      " ", "distribution", " ", "table", " ", "binTable"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanNumerator2", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"meanDenominator2", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Sum", " ", "P", 
      RowBox[{"(", "H", ")"}], " ", "must", " ", "be", " ", "1"}], "*)"}], 
    "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", 
       RowBox[{"n2", "+", "1"}]}], ",", " ", 
      RowBox[{"i", "++"}], ",", "\n", "    ", 
      RowBox[{"meanNumerator2", " ", "+=", " ", 
       RowBox[{
        RowBox[{"binTable2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        RowBox[{"binTable2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"meanBinTable2", " ", "=", " ", 
     RowBox[{"meanNumerator2", "/", "meanDenominator2"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"xbar", " ", "=", " ", 
      FractionBox[
       RowBox[{"\[CapitalSigma]", 
        RowBox[{"(", "xf", ")"}]}], "\[CapitalSigma]f"]}], "*)"}], "\n", 
    RowBox[{"varianceNumerator2", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", 
      RowBox[{"n2", "+", "1"}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"varianceNumerator2", " ", "+=", " ", 
      RowBox[{
       RowBox[{"binTable2", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"binTable2", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "meanBinTable2"}], 
         ")"}], "^", "2"}]}]}]}], " ", "\n", "]"}], "\n", 
   RowBox[{
    RowBox[{"varianceBinTable2", " ", "=", " ", 
     RowBox[{"varianceNumerator2", "/", "1"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDevBinTable2", " ", "=", " ", 
     RowBox[{"Sqrt", "[", "varianceBinTable2", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "data"}], "*)"}], "\n", 
   RowBox[{"Show", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"binTable2", ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", "\n", "    ", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Binned Data for 200 Simulations of 100 Coin Flips\>\""}], ",", 
       "\n", "    ", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Number of Heads\>\"", ",", "\"\<Frequency N(H)/N\>\""}],
          "}"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "\n", "    ", "]"}], ",", 
     "\n", "    ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"meanBinTable2", ",", " ", "stdDevBinTable2"}], "]"}], ",", 
         "x"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "n2"}], "}"}], ",", "\n", "    ", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "\n", "    ", "]"}]}], 
    "\n", "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "*******)"}], "\n", 
   "                        ", 
   RowBox[{"(*", 
    RowBox[{"Part", " ", 
     RowBox[{"2", " ", "--"}], " ", "Random", " ", "Walk"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**"}], "*******)"}], "\n", 
   "\n", 
   RowBox[{"Print", "[", "\"\<Part 2 -- Random Walk in 1D:\>\"", "]"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"0", " ", "indicates", " ", "left", " ", "step"}], " ", "-", 
      "1"}], ",", " ", 
     RowBox[{"1", " ", "indicates", " ", "right", " ", "step"}]}], "*)"}], 
   "\n", 
   RowBox[{"randomWalk1D", " ", ":=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Build", " ", "yList"}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "dn", " ", "or", " ", "distance", " ", "from", 
      " ", "origin"}], ",", " ", 
     RowBox[{
     "with", " ", "\"\<recurisve\>\"", " ", "style", " ", "function"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"dn", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"empty", " ", "list"}], "*)"}], "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"randomWalk1D", " ", "\[Equal]", " ", "1"}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Initialize", " ", "first", " ", "step", " ", "N"}], " ", "=",
         " ", 
        RowBox[{"1", " ", "of", " ", "dn", " ", "list"}]}], "*)"}], "\n", 
      "   ", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"dn", ",", "1"}], "]"}], ";"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"dn", ",", 
         RowBox[{"-", "1"}]}], "]"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Random", " ", "walk", " ", "through", " ", "N"}], "=", "100"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"nSteps", " ", "=", " ", "100"}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", " ", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "nSteps"}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"randomWalk1D", " ", "\[Equal]", " ", "1"}], ",", "\n", 
       "       ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"dn", ",", " ", 
         RowBox[{
          RowBox[{"dn", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
        "]"}], ",", "\n", "       ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"dn", ",", " ", 
         RowBox[{
          RowBox[{"dn", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
        "]"}]}], "\n", "    ", "]"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Build", " ", "table", " ", "of", " ", "X"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"N", " ", "steps", " ", "and", " ", "Y"}], " ", "=", " ", 
      RowBox[{"distance", " ", "from", " ", "origin"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dnVsN", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "100", ",", "2"}], "]"}]}], ";"}], "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", " ", 
     RowBox[{"i", " ", "<=", " ", "nSteps"}], ",", " ", 
     RowBox[{"i", "++"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"dnVsN", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "=", " ", "i"}], ";", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"dnVsN", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{"dn", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "random", " ", "walk"}], "*)"}], "\n", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"dnVsN", ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<1D Random Walk\>\""}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(N\), \(th\)]\) Step\>\"", ",", 
        "\"\<D(n)\>\""}], "}"}]}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**"}], "*******)"}], "\n", 
   "                     ", 
   RowBox[{"(*", 
    RowBox[{"Extra", " ", 
     RowBox[{"Credit", " ", "--"}], " ", "Random", " ", "Walk", " ", "in", 
     " ", "2", "D"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**"}], "*******)"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Random", " ", "walk", " ", "in", " ", "2", "D", " ", "through", " ", 
     "plane"}], "*)"}], "\n", 
   RowBox[{"randomTheta", " ", ":=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"Random", " ", "phase", " ", "angle"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"randomWalk2DTable", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "100", ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", " ", "of", " ", "values", " ", "X"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"CosTheta", " ", "Y"}], " ", "=", " ", "SinTheta"}]}], ",", 
      " ", 
      RowBox[{
       RowBox[{"unit", " ", "vector", " ", "means", " ", "r"}], " ", "=", " ",
        "1"}]}], "*)"}], "\n", 
    RowBox[{"initTheta", " ", "=", " ", "randomTheta"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Initial", " ", "random", " ", "phase", " ", "angle"}], "*)"}], 
    "\n", 
    RowBox[{
     RowBox[{"randomWalk2DTable", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Cos", "[", "initTheta", "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Initial", " ", "x", " ", "coordinate"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"randomWalk2DTable", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Sin", "[", "initTheta", "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Initial", " ", "y", " ", "coordinate"}], "*)"}], "\n", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", "nSteps"}], ",", " ", 
      RowBox[{"i", "++"}], ",", "                ", 
      RowBox[{"(*", 
       RowBox[{
       "Take", " ", "99", " ", "additional", " ", "random", " ", "steps"}], 
       "*)"}], "\n", "    ", 
      RowBox[{
       RowBox[{"theta", " ", "=", " ", "randomTheta"}], ";", 
       "                   ", 
       RowBox[{"(*", 
        RowBox[{
        "Random", " ", "phase", " ", "angle", " ", "for", " ", "next", " ", 
         "move"}], "*)"}], "\n", "    ", 
       RowBox[{
        RowBox[{"randomWalk2DTable", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"randomWalk2DTable", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}], " ", "+", " ", 
         
         RowBox[{"Cos", "[", "theta", "]"}]}]}], ";", "  ", 
       RowBox[{"(*", 
        RowBox[{"Increment", " ", "previous", " ", "x", " ", "position"}], 
        "*)"}], "\n", "    ", 
       RowBox[{
        RowBox[{"randomWalk2DTable", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"randomWalk2DTable", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}], " ", "+", " ", 
         
         RowBox[{"Sin", "[", "theta", "]"}]}]}], ";"}]}], "  ", 
     RowBox[{"(*", 
      RowBox[{"Increment", " ", "previous", " ", "y", " ", "position"}], 
      "*)"}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "random", " ", "walk"}], "*)"}], "\n", 
   RowBox[{"Print", "[", "\"\<Extra Credit -- Random walk in 2D:\>\"", "]"}], 
   "\n", 
   RowBox[{"Show", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", "randomWalk2DTable", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", ".02", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"randomWalk2DTable", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "]"}]}], "}"}]}], 
        "}"}], ",", " ", 
       RowBox[{"Axes", "->", "True"}]}], "]"}], ",", " ", 
     RowBox[{"AspectRatio", "->", "Automatic"}], ",", "\n", "    ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<2D Random Walk\>\""}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x-position (\!\(\*SubscriptBox[\(cos\[Theta]\), \(n - 1\)]\) + \!\
\(\*SubscriptBox[\(cos\[Theta]\), \(n\)]\))\>\"", ",", " ", 
        "\"\<y-position (\!\(\*SubscriptBox[\(sin\[Theta]\), \(n - 1\)]\) + \
\!\(\*SubscriptBox[\(sin\[Theta]\), \(n\)]\))\>\""}], "}"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.810203359873267*^9, 3.810203401916155*^9}, {
   3.810203514098954*^9, 3.810203645229595*^9}, {3.810203683593378*^9, 
   3.810203740466291*^9}, {3.810203772980603*^9, 3.810203780167966*^9}, {
   3.8102038422489243`*^9, 3.8102038751845818`*^9}, {3.810203931374839*^9, 
   3.810203944834879*^9}, {3.810204027820586*^9, 3.810204077925976*^9}, {
   3.8102041489213133`*^9, 3.810204225142997*^9}, {3.810204337273855*^9, 
   3.810204337784203*^9}, {3.810204446428905*^9, 3.810204484923264*^9}, {
   3.810204574942689*^9, 3.8102045770624323`*^9}, {3.810204717686665*^9, 
   3.810204763253044*^9}, {3.810204825224711*^9, 3.81020482657762*^9}, {
   3.810205026538425*^9, 3.810205054480555*^9}, {3.810205227901739*^9, 
   3.810205276095396*^9}, {3.8102053236042213`*^9, 3.81020571498446*^9}, {
   3.810205755136671*^9, 3.810205792639432*^9}, {3.81020626037324*^9, 
   3.810206283462202*^9}, {3.810206499705348*^9, 3.810206706159318*^9}, {
   3.810206761904492*^9, 3.810206827421504*^9}, {3.810206866395941*^9, 
   3.810206868837459*^9}, {3.810207248480492*^9, 3.810207295617795*^9}, {
   3.8102077598943367`*^9, 3.810207782449133*^9}, {3.810207982003356*^9, 
   3.8102079883153057`*^9}, {3.8102081405959873`*^9, 3.810208159484952*^9}, {
   3.810208273689828*^9, 3.8102086233173523`*^9}, {3.810208660818386*^9, 
   3.810208675767465*^9}, {3.8102087255001717`*^9, 3.810208923446908*^9}, {
   3.810208965485291*^9, 3.810209012395955*^9}, {3.810209055089355*^9, 
   3.810209059435265*^9}, {3.810209224755291*^9, 3.8102092974259777`*^9}, {
   3.810209366770606*^9, 3.810209375422093*^9}, {3.810209421636466*^9, 
   3.8102095080570803`*^9}, {3.810210007356188*^9, 3.810210053238558*^9}, {
   3.810211511490879*^9, 3.810211543162692*^9}, {3.81021158351511*^9, 
   3.8102116601791477`*^9}, {3.8102116971388702`*^9, 3.810211782702341*^9}, {
   3.810211824566831*^9, 3.810211846799284*^9}, {3.8102118795072517`*^9, 
   3.810211913890983*^9}, {3.810212021487423*^9, 3.810212119863933*^9}, {
   3.810212452038794*^9, 3.8102125258187027`*^9}, {3.810212684712512*^9, 
   3.810212951609795*^9}, {3.8102130360559464`*^9, 3.810213058281999*^9}, {
   3.810213092383436*^9, 3.810213240609371*^9}, 3.8102132728226643`*^9, {
   3.8102133054215612`*^9, 3.81021345864843*^9}, {3.810213505648591*^9, 
   3.810213507446144*^9}, {3.810213553551222*^9, 3.8102135557795343`*^9}, {
   3.810213586473528*^9, 3.810213783844904*^9}, {3.810213817911549*^9, 
   3.8102139553276*^9}, {3.8102140044455643`*^9, 3.8102140450525513`*^9}, {
   3.810214081497978*^9, 3.8102141419114313`*^9}, {3.810214207303213*^9, 
   3.810214236691806*^9}, {3.810214290259698*^9, 3.810214291646253*^9}, {
   3.810214326986422*^9, 3.8102144139562073`*^9}, {3.810214456050354*^9, 
   3.810214509790154*^9}, {3.8102145764150343`*^9, 3.810214587862294*^9}, {
   3.810214626441951*^9, 3.810214763821512*^9}, {3.810215010137464*^9, 
   3.810215032211855*^9}, {3.81021511708813*^9, 3.810215119697801*^9}, {
   3.810215239155134*^9, 3.810215310477099*^9}, {3.810215474005225*^9, 
   3.810215526392509*^9}, {3.8102155985871067`*^9, 3.810215603876277*^9}, 
   3.810215674760741*^9, {3.810215724217598*^9, 3.810215734601705*^9}, {
   3.8102159019190474`*^9, 3.8102159104956903`*^9}, {3.810215961179572*^9, 
   3.810215975771792*^9}, {3.810216031486783*^9, 3.810216063229123*^9}, {
   3.8102162938692217`*^9, 3.810216296651516*^9}, {3.810216602247737*^9, 
   3.810216604112781*^9}, {3.8102166782778*^9, 3.8102167141179*^9}, {
   3.810217134146106*^9, 3.810217174356739*^9}, {3.810217262162558*^9, 
   3.8102172624261227`*^9}, {3.81021739947132*^9, 3.810217438533087*^9}, {
   3.810217499997123*^9, 3.810217504126814*^9}, {3.810217544808206*^9, 
   3.810217609383432*^9}, {3.810217668265459*^9, 3.810217668888339*^9}, {
   3.81021775233057*^9, 3.810217752630816*^9}, {3.8102177860277023`*^9, 
   3.810217862349764*^9}, {3.810217899386115*^9, 3.810217909133534*^9}, {
   3.81021795431566*^9, 3.810217954814534*^9}, {3.810218307719429*^9, 
   3.810218324744965*^9}, {3.810218427918764*^9, 3.810218434916304*^9}, {
   3.810218650547048*^9, 3.810218703016437*^9}, {3.8102190505439043`*^9, 
   3.81021919455805*^9}, {3.810219238823168*^9, 3.810219244788344*^9}, {
   3.8102192777052603`*^9, 3.810219373657506*^9}, {3.810219502646468*^9, 
   3.810219505201605*^9}, {3.810219550303412*^9, 3.810219564223669*^9}, {
   3.8102195946264*^9, 3.8102196588330812`*^9}, {3.810219760450987*^9, 
   3.8102197913398314`*^9}, {3.810219822782156*^9, 3.8102199060532*^9}, {
   3.8102199617041492`*^9, 3.8102200292302103`*^9}, {3.8102200953772087`*^9, 
   3.810220096746336*^9}, 3.8102201674335747`*^9, {3.8102202622295218`*^9, 
   3.810220263211174*^9}, {3.810220481833535*^9, 3.810220483248869*^9}, {
   3.810220603110162*^9, 3.8102206051054688`*^9}, {3.810220661546741*^9, 
   3.810220699524087*^9}, {3.810220756020183*^9, 3.810220870182363*^9}, {
   3.81022096468701*^9, 3.810221258132934*^9}, {3.810221316567245*^9, 
   3.810221343502632*^9}, {3.810221377068651*^9, 3.810221409940247*^9}, {
   3.810221457747649*^9, 3.81022145958348*^9}, {3.810221571818803*^9, 
   3.8102215737903423`*^9}, 3.810221714959845*^9, {3.810221748008453*^9, 
   3.810221779591523*^9}, {3.810223123672174*^9, 3.810223146142198*^9}, {
   3.810227127304117*^9, 3.810227193066752*^9}, {3.810227386579506*^9, 
   3.810227390433704*^9}, {3.810227424513383*^9, 3.810227592762248*^9}, {
   3.810227763304224*^9, 3.810227792110733*^9}, {3.8102279356688967`*^9, 
   3.810228000757121*^9}, {3.810228033627098*^9, 3.810228062318344*^9}, {
   3.810228169090589*^9, 3.81022821549918*^9}, {3.810228466640451*^9, 
   3.810228467596862*^9}, {3.810228567692156*^9, 3.810228612547673*^9}, {
   3.810228651497554*^9, 3.8102289308022327`*^9}, {3.810228968059648*^9, 
   3.810229041303938*^9}, 3.810239010890545*^9, {3.8102427323346777`*^9, 
   3.810242739804864*^9}, {3.810242774328394*^9, 3.810242882138763*^9}, {
   3.810242943146237*^9, 3.810242952292794*^9}, {3.810242992596394*^9, 
   3.8102429931237803`*^9}, {3.81024305296388*^9, 3.810243150222954*^9}, {
   3.810243180829567*^9, 3.810243321939046*^9}, {3.810243353733848*^9, 
   3.810243363297895*^9}, {3.810243393779093*^9, 3.810243410881834*^9}, {
   3.810243492904454*^9, 3.810243593553293*^9}, {3.810244259526188*^9, 
   3.810244291622266*^9}, {3.810244927853858*^9, 3.810245387650353*^9}, {
   3.810245456598983*^9, 3.810245536137171*^9}, {3.810245581546543*^9, 
   3.810245596777082*^9}, {3.810245638822279*^9, 3.8102456544667473`*^9}, {
   3.810245850589312*^9, 3.810245856878014*^9}, {3.810245913006571*^9, 
   3.8102459273137093`*^9}, {3.810246140833022*^9, 3.8102462320440893`*^9}, {
   3.8102465482654343`*^9, 3.810246617782152*^9}, {3.810246764206875*^9, 
   3.810246765630591*^9}, {3.81024688626777*^9, 3.810246904196478*^9}, {
   3.8102470074370537`*^9, 3.810247007921363*^9}, {3.810247500651475*^9, 
   3.810247936534021*^9}, {3.810247993972207*^9, 3.810248007448781*^9}, {
   3.810248040296775*^9, 3.8102480794754887`*^9}, {3.810248383109056*^9, 
   3.810248406777398*^9}, {3.810248447179553*^9, 3.810248474067534*^9}, {
   3.810248539244197*^9, 3.810248701469754*^9}, {3.8102488481438227`*^9, 
   3.810248870694655*^9}, {3.810248940839458*^9, 3.81024898657119*^9}, {
   3.810249019314456*^9, 3.81024910808006*^9}, {3.810249310567711*^9, 
   3.8102493843473063`*^9}, {3.810249421753352*^9, 3.8102494466013203`*^9}, {
   3.8102495109001207`*^9, 3.810249653969754*^9}, {3.8102497628307343`*^9, 
   3.810249803090707*^9}, {3.810249873400221*^9, 3.810249885244079*^9}, {
   3.810249963704101*^9, 3.810250109716804*^9}, {3.810250171938446*^9, 
   3.810250357051086*^9}, {3.8102503928416233`*^9, 3.810250395335177*^9}, {
   3.810250429226856*^9, 3.8102506524497213`*^9}, 3.8102506936623898`*^9, {
   3.8487444031882563`*^9, 3.8487444657323503`*^9}, {3.848744682968322*^9, 
   3.8487447197155304`*^9}, {3.848744798062854*^9, 3.8487448077266617`*^9}, 
   3.848744838427331*^9, {3.84874497091149*^9, 
   3.848745051965336*^9}},ExpressionUUID->"7b38784e-8abb-46ba-be4c-\
d7a80859c6d9"],

Cell[BoxData["\<\"Part 1 -- Tossing Coins:\"\>"], "Print",
 CellChangeTimes->{{3.848744759144863*^9, 3.848744760227851*^9}},
 CellLabel->
  "During evaluation of \
In[274]:=",ExpressionUUID->"fe47ea0e-c713-4250-9994-96ebe2e07653"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.}, {1., 0.}, {2., 0.05}, {3., 0.1}, {4., 0.5}, {
       5., 0.25}, {6., 0.05}, {7., 0.05}, {8., 0.}, {9., 0.}, {10., 
       0.}}]}, {}}, {}, {}, {}, {}}, {GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1nWcFWUYQOFl6UZKLKS7u7ubpbtLJRQsUEKQbhFQ0g7SAKUVUAklLVBB
QTBQQUEUEfB51T/Ob95zZnb37ndnvnvz9h2eNCwxISEhGdYn/ndcl/jfXM68
1jEPXsTTTuZyXI7bzXOQ0fwEXnHtQp49rsNlPoR/h6G8O89sfiz+AJ8cGOfz
LOaFOMob8d1oxsvy28yzkYHPx8va7xisncU9WjeeyTwBN/C49rh2BA35LjTV
yvBbzbOQns/DS9qTPJv5KVzig/gZ3M278ozm8biOSdok7TAa8J1oopXmt5hn
Ih2fG2umXcRA7VvcpXXhGczjcA0TtYnaIdTn76KxVornMs9AWj4HL2i/YYB2
GkO0zjy9eSz+jvXVHtMOoh5/B420kvxm83Sk4bPxvPYr+munMFjrxNOZH8XV
WFNtgnYAdfkONNRK8JzmaUjNZ+E57QL6ad9gkNaRpzU/gr9iHbXx2keow7ej
gVac5zBPRSo+E89q59FX+xoDtQ48jXkMrsQ6auO0D1Gbb0N9rRjPbp6ClHwG
ntF+QR/tJAZo7Xlq82j8GeuojdX2oxbfinpaUb4SP6O3dgL99XY8lflh/BHr
pj2q7UNNvgV1tSJ8BX5CL+0r9NOTeErzQ7gc66Q9ou1FDb4ZdbTCfDnOoaf2
JfrqbXkK84P4PdZFG6PtQXW+CbW1QnwZfkQP7Qv00dvw5OYHcCnWQRutfYBq
/G3U0grypfgB3bXj6K23jsfZfD8uxjpoD2vvoyp/CzW1AnwJvkc37Rh66a34
Q3gPVbSNqKHn50/jO3TVPkdPvSV/ELtRWduA6no+/hTOoov2GXroLfgD2IVK
2puopufli3EGnbVP0V1vzu/HTlTU3kDV2AP5InyLTton6KY346PwLipor6OK
fidvipF4B+X111DZudz8Dtwe+1vsSWiC+7AD5Vy3HpVcewtvjHuxHWX1dajo
XC6+EKfRUfsYXfVGPJl5FH6Le0sboW1DGb4WFbSbeTbzZKTg0/GktoBnNS/G
Kd6BH0UX3jDWzZzTvPT/D47b4tnCSPOvcS+ah8f/GHtC7LPaK46Z4/djq3Or
4n/Ditg7nX/JcY1jececzq+JNYw9L/Zl/dV4vViGrHx1fAbFHhF7PX/ZMTmm
YYGfzx37W3w2OXeT4yJ8E2vtuDKee/0IOpsbxHtrzmFeghvxXvAL8VzwYXyu
OVP8bmzhpeI1oBzPwW8yT0Iinxp/V/sa7bTD6KTV59fjveTn45nRhvLNKMlX
oayWnc/HSSRph9BRr8fvwSaUiDVBGT0br4u78TaKx3qjdKxVvDZkQWbUwV14
C8Vi3VDKdZl4bQzBRhSN9wQlncvIa2EwNqCI/iJKOJeBz8MJtNUOooNekw/C
myisvYDievpYS3yFNtoBtNdr8IF4A4W051FMT8fn4Eu01j5CO706H4DXUVB7
DkX1tHw2vkAr7UMk6dV4f7yGAtqzKKKn4bNwHC21/WirV+XXMIL/Es+S1o+v
R37+DAprqflMHEMLbR/a6FX43xjOf8ZIrS9fh3x8JQppqfgMfI7m2l601ivz
qxjGf8J9Wh++Fnn5ChTUUvLp+AzNtD1opVfif2EoP4d7td7xXCEPX44CWgo+
DZ/GfqV9gJZ6RX4l7jf+I0Zovfhq3MmXIX88c3FvmSciGZ8S97/2Sexp2vto
oVXgf8Y9yn/AcK1n7APxrPKlyJf471fDhCn4OPY97T00F8vzP+Le5d8jvrT2
4K/GPsOXIK/2D1FMQLE=
          "]]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl1nfUz2UYgPE3e2/Ze2dvKUWhbJEoe++9KqmUNGwyyt7J1rAqm6KJskco
Iw2VFY3Pffrj8tzX9f2d97zn+/6e+yjQqX+zfnclJCSsTpSQEGcB5yxDHrzL
26KfdpH3wg1eEQ203fwRHOKvQkoo6J/ZWl6s4O3QX7vEe+Mmr4SG2h7+KL7l
r8XPiN8BL2sZkFgrxOeY82Elb48B2mXeB7d4ZTTS9vJ6+I6/jiQorM/V8mMV
74CB2k+8L/7iVdBY+5TXx2H+BpKiiD5PK4DVvCMGaVd4vLjbvCqaaJ/xBjjC
xyIZiurztYJYwzthsPYz7487vBqaavt4Qxzl45AcxfQFWiGs5Z0xRPuFD8Df
/F48pu3njXCMj0cKFNcXaoWxjndBdTTTP9ca4zifgJQooS/SimA974r70Fz/
QmuCE3wiUuEefbFWFO/xbrgfj+tfak1xkk9CapTUl2jF8D7vjhpooX+lPYZT
fDLSoJS+VCuOD3gPPIC0KO3ZMr0EPuQ98SDSoYxn7+j3YAPvhZpIjwzIiEwo
63PLfaYkNvLeqIXMKOfZu3opbOJ98BCe0L/WmuE0n4IsKK+v0EpjM++Lodqv
fCD+4Q+jpfYNb44zfGp8/7VEGK1lRFatAl9pLoMt/E2eDpPiu8eHmX8zD8K/
fBbPihm8Nm9lPmB+HPPNOfG9PsOZEVP1xc68eDPujDNxvDe84tlCZ+74HZCJ
z3Fmi3eCt/gSZz6swt2xF2LWlznLOuc5c8Q7wUeeT3Omj/eNyZ4vcuZBf8+G
O69qg7HAnCuWiXl2/GzMNNeRnjQfNLfAWT4zfrf4/fm0uLfmJBjDMyNb7Bu+
2lwOH8f+wNPa73wI7kJd7SntkPkJnOPTkT32i75GK49PYn/gEeSI3eHZWr0C
tsZuwKPIiVzIjTzIG3vCZ9f5XEVsiz2AesgXO8Cz9XolbI87jvporX+rtcT5
+Nshf9x5/T2tMnbE9wwN0Eb/TmuFH+L9oEDcef19rQp2xncHDdFWP6w9iR/5
WygYd17/QKuKXfH3QSO0049oT+ECfxuF4s7rH2rVsDveLxqjvX5Ua42L8R1F
4bjz+gbtXuzhzwTaH3woEsWu0Tpox8xtcInPRpHYAfpGrTr28mcD7U8+DIlj
92gdtePmtrjM56Bo7Al9k3YfPuUjAu0aH44ksYu0TtoJczv8xOeiWOwSfbN2
Pz7jzwXadf40ksZ+0DprJ83tcYXPQ/HYMfoWrQb28ZGBdoM/g2SxH7Qu2ilz
B/zM56NE7KG4U9oD2M+fD7Sb/Fkkj3uvddVOmzviF74AY7WkeFXLEjsy9hL/
2PwgPucvBNotPgIp4s5p3bQz5k74lS/EOC0ZXou9hZJabf6JuSa+4C8G2l/8
OaSMe6Z1j51k7ozf+CKM15Ljde1ulNLq8K3mWviSjwq023wkUsUd0XpoZ81d
cJUvxgQtBd6IfYDSWl2+zfwQvuIvBdod/jxSxx3SemrnzF3xO1+CiVpKjNWy
o0zsA77d/DC+5i8H2t/8BaSJO6b10s6bu+EPvhSTtFQYp+VA2dghfIe5Nr7h
owPtH/4i0sYd1HprP5i748+4vzwzpvFlfLI5NcbznCgXO4fvNNfBAf5KoP3L
RyFd3Fetj/ajuQeu8XcwRUuDCVoulI89xXeZ6+Ign84zYAofw8fELsdLPH3c
ZdqXXzD3xPXYIzwLpvPlfKo5LSby3Jhrzo63zUud+RP9/3/WCj77Hy67P0o=

          "]]},
        Annotation[#, "Charting`Private`Tag$14539#1"]& ]}}], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Heads\"", TraditionalForm], 
    FormBox["\"Frequency N(H)/N\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Binned Data for 20 Simulations of 10 Coin Flips\"", TraditionalForm],
  PlotRange->{{0, 10.}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487447595106573`*^9, 3.8487447604973974`*^9}},
 CellLabel->
  "Out[292]=",ExpressionUUID->"71d0345e-2c67-4833-88db-34b0bac75e78"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxt0r1LQlEYx/GHpnBqcGiIqIiwiOj93TyVedU0vfYOTYGzDU21nKHWmm0I
oiBahKDBoOHQP9HcXENLe116Cs6XLoh87tffvXK1e79WqbaISPX7Fb3/f3yk
cML4bIXb4DjcDnfAXXAP3Av3wQl4AB6Eh+BheAQehcfgcXgCnoSn4Gl4Bp6F
5+B5OAkvwCnY+LawLKLDsoQOy7I5jjeC16PDn/+VhSWtPtGeNs3O07eweaZ9
Bftf32jPmIt6dNxpz+j+Untg3sPozL32QHtDe1b3j9qz/vUkZ/r3zp8/E0/a
c3r/B+153D+P66+a2Mv1QTJ2qx2Wgn6/K+0F7It6/br2Ip7fGp4fLCX0EvZl
//cysC37n3foEvrdhNjDDpYK7g9b2MGyjj1sYQfLBvawhR0sm9jDFnawbGEP
W9jBso09bGEHyw72sIUdLLt//gJSnLlC
       "]]}, {}}, {}, {}, {}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
CQlOGxhWJd88gp91OFkXLUEG+qDtQ5c6xXHBRNVbTffIIF4iJmyx9wcW43j/
jYoKBcwoY0rc7FVYVMcyQ3QNBQoCTtcfvn4SC93dueuFBhXSKpg5Y4KVsNm8
N5/zG6hAHpsve/NyjvDK6FTLAc3/ePTiV10/2/Yfj2dvsHw2cRICEpME/Sf5
NsLIWHlDfpwYNDVtJ8wOMmMLd+J/N6ZIwZS9lh5fvjVW9mK2oaFXDja6BqXH
TTKw4dOX8zR/KcJln7VBXnI/9pismxr2WxmUBt+Rvl/dhafsPhMRxaIGbPMR
re03EB4z/yo6c6cGKDzKlk04EIjXaL/opKXVgiripMYY0w38k6c5vRaHDqyH
WSo0rj7Hp+29fg9wY6BicWHNG37geOir8qNqCF79SY3rOrwPOSe/PDRZAJCR
iQrN0lVRMtrWMy7UhX0L0cWRlraoZuLnROpdPQjxucmw+MUbvfhcd4T5gT48
kr24+4ByDKK+6Ho689oYhhc6GfaqVqIC5ugF914TIHgf39l7pRoxJyTVs/aa
Aq1tWHQlVo1sG8T5mxYtgSVfw5mR4zKyejrjdeWHFQieL+fXp5xGJtXeSrYb
1nDgG8tgZLcb8jq6Gc98xgaWe0JqC9fMECHqxNO4DRtQSq1SIxoooNR9bY/9
ztpCf8fjW8/v7UEfHDfzA/7agqxoF6/ol1k8n59XfzqBCLlxbAVFoy247IzW
d8edJHjSPz5zPPUK3m2e+NU3ngQf3OayiEqe+Ixkza2FXWRo3c46lDCigq/V
dZkkXiTDxrnpAb/0bUyQ7eGhPHYK6M24NLvUt2LpzIvfJK9QgPpJIXkfdzy2
VstV1sv1L58tuPJY1uphYx8EhGdy//lb2MQom+smIYle9taO/XZg6L2qR31a
Swg+0PpOJ1IElFVNT/2w+kJIU63fDDsjAfdeVV14nyOLVXYezhqqlAG2r11V
B+KDsOXGGZqxLwrQUP3IMVq4Cjs2/sizaVEJnJwGMOQ9j3Xk958/uEv1Xz47
KOioJopvtKnl8jCpw0fKkZFPgnZ4xSW+EMVNDei30XcaijiH+z2N/NrKqg0u
UxO+PT7V+G97aZv5PQTw0m/Se/PuI54gXx5wRwKHoLwvDH9KaVH/gYHIXEGA
QXqWmTR5MQTClkeeC+jCSOgf4/EFPVRprJzVJKkHj6XaYudmjyGmAuz5X0l9
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
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl12XYVkUbheFXwEA6FZTutOgQBQSUUlBJATHoMGikW0ClS6SVLpVQurs7
VdoAA/wM4Dvvwx9zzLXWuvfLnnlmzww5mneo0z5RQkLCPdqWJAkJ9+pf0x5j
7NR2Cx/lD+MlxQ8mTkhoQJ+ne8iL6l/mv4h/1JbTU9Tk5eXTJ+W9r5+ln8Nr
LJ9Ol8fl9UX5A/Q79Lt4j/jbQ9WM453BD/CS4vr4HP9NvAh3V99Lto8uwp+j
v8qvy6uLp+LaakbhE/ga/klWFi9TP5n/Hc7Dy4vfj39LzXt4DZ6JZ8tu0Y3U
T9Nf5JfjlcNDcRE1/fFuvD3mS5YZD1E/ln8a3897ANfDZ/lv4IW4m/oPZHvp
wvw6uA7+VFZL9gk+jq/GvMrK4KXqcuM8svfib8vexd/iGXiW7CbdUF3ZGCse
Iiss64d34W14hywTHqzuPny/7FX6DN0cL8Bd1fWU7aEL8V/CL+Epspqyj/Ex
fAVfk5XGS9Tlwrll79L3yd7B3+DpeKbsj1g/6srEmPBgWSFZX7wTb8XbZQ/j
QeruxffJXqFP06/j+biLuh6y3XRB/ouxBvFkWQ3ZR/govoyvykrhxepy4lyy
d2Ktyzri1XganiH7PdaautIxJjxIVlDWJ9Yo3oK3yR7CA9UlwffKXqZP0c3w
PNxZXXfZLroAvzaujSfJqstG4iP4Er4iK4kXqcuBc8o60klkHfAq/BmeLvst
1pK6UjEmPFBWQNYbb8eb8VZZRjxAXWKcRFaXPkk3xXNxJ3XdZDvp/PxauBae
KHtBNgIfxhfxZVkJvFBddpxD1oFOLGuPV+KpeJrs11hL6krGmPAAWf74VvE2
vAlvkWXA/dUlwolldegTdBP8BX5fXVfZDjofvyauiSfInpdd0C7xitML5Nlw
dnl7OpHsU+0z3o1YO/ISMQbcX55PtlHbzEtP94v9DyeSv0Qfp9+Td+Ftj72M
roFr4PHyarIftIu8YvR8eVacTd6Ovkc2RZvKux5rQ1483hX3k+eVbdA28dLR
fRNiIjwnf5E+Rr4r78zbxstDV8fV8Th5Vdn3MQe8p+h58iw4q7xtkv8288kx
B7xf4rdnFYt3xX1jz5OtjzngpaX7yO/GASCvTR+F79Cd5Ft5uekX8At4rLyK
7LuYA96T9Fz5oziLvA19l54Uc8D7OX7b2LfodTFuXho1vXl36Lux7ugjdMc4
K+gtnslFP0efj7HynlDzBe+ROI/krek79MQYK++n+O1i/6HXxvh4qdX04t2m
78T6oQ/THWKfpzd7JiddmT4XY+I9ruZzXuY4i+St6Nv0BPkk3o/xG8U+Qq+J
MfFSqfmA9y99O9YJfYhuH/szvckzOehK9NkYE+8xNXPiGW08byLvWsx/7AH0
tzEOXkp1PXkHtXaxn/I2qstOV6TPxLvziqqbzfsnzk7eBN5VdbXim6W/iffl
pVDXg3dAaxv7H2+Dumz0LO3vOLv44/lX+DXj26JXxzvxksfZy9uvtYn9ibde
XVZ6pvaXNoY/jn+ZX4Pupu3TWsd+wV/Hz0LP0P6njeaP5V/iV6e7anu1Vvx2
/LX8R2MNal20PVpLWVvZGtkj9LP06ZhfXpE4b3h/aqN4Y3gX1T1PPxXfDO6j
JqtsVcwNL1ns2TF/9L/xrdG74y6k9nPcgt+G/y2dmT9bfyX2ovjGo6fH6J9R
96t+OH0ozoS4d8TZqq5wnDOe/U0/SX5enym+EX1muqX+lvyGvh29Qv9JnP/6
0eou8KrJP9Nf4D0Z33f0dG99lrhT4K14ZfxmcV+LvT5+V/qf+IbpXfTbdGv6
G/WZ6Ar0yZhDXqE4b3gPxz1B3oK+SX8c9yneD7yq8c3TK2IO444WezZvp/YW
rxVvtbqH6anaH9pHca/hf8+vEnustiPudPyW/FX8h+K7j/1P2x73JVkL2UpZ
RvpT7XdtZNxB+N/xK8d+pW2L+wv/bf4KfgZ6Ssy3NiLuBPzz/Eqxj9Bfayvj
fubdO/K2xv2C9xbva3Xp6afpE9opXkF1k3m/asPjDOedU1cx9gv6q5iPuE+p
68DbojXjvcn7Sl06ujx9POaaVyDWAe+huO/I36Zv0B/G+cs7y3uWzkR/Ge8b
dyE17eM7o/+mn48zn25Kv0F/6Zm0dDn6WLw7L7+aibyMcW+Rv0Vfp4fJh/PO
8J6J35teHuOIO02swfg+6b/oanF2003o5vRyz6Shy9JHY0y8fGom8DLE/UP+
Jv0LPVT+Ie80r0KMl14WY4q7iZq28a3S/6Or0hvju6Nfp5d5JjVdLd4Bj5aX
kR2J8fHy0uPl6eNOIX+D/pkeIh/GO8V7mn4izhDcS55RtjTGGncPuo38Fv0n
XYXeQDemm9FLPZOKrhrvhkfJS8sOx7h5eehx8nRxl5A3p3+iB8uH8k7yytOP
x9mCP5BnkC2JOYg7B91afpO+RT9Hr6cb0U3pJZ5JSVeJd8OfyEvJDsUc8HLT
Y+Vp4y4hf53+MfZ2/DUepG6I7ARdjv9YnD24pyy9rGfi//7ftzjmJO4guFV8
r/RNujK9LuZD3RzckN+Ev5hOEd9qvDP+WFZSdjDmhpeLHiNPE3cMeTP6WpwZ
+Cs8UN1g2XG6LL9onGG4hyydrAfejBfFXMkScMv49uk/6Er02pgndbNxA/5r
/EV0cn7leHf8kaxErD98EB+IuZPljD1VXeq4j8ia0lfjjMJf4gHqBsmO0WX4
ReJcwd1laWXd8aa4E+PFsruxT8ZeQ/9OV5StoRvyZ+H6/Mb8hXQyfqUYAx4p
Kx5rFR/A+2MOZTnwKHWp4h4ja0JfiTMRL8f91Q2UHaVL8wvH+YK7ydLIuuGN
cTfGi2R3Yn+JvYv+jX5W9i3dgD8T1+M34i+gH+RXjDHgEbJisZbxfrwPH5Bl
j7NJXcq4/8heoy/HuYyX4X7qBsiO0KX4heJcwV1lqWVd8QY8Hy+U3Y59Kc6+
OD/pZ2Tf0PX5M/Cr/Ib8+XTSOO9jDHi47KlY43gf3ov3y7Lhj9WliDuUrDF9
iW6Bl+K+6vrLDtMl+QVjf8ddZKlkXfB6PA8vkP0b+5m66/QNuoJsNV2PPx2/
wm/An0c/wJ+lvxz3gRgL/jDO6VjzeC/eg/fJsuKP1E/kn8PJeSlwI3wxzmm8
BPdR3092iC4RZ6r+B36BOEdwZ5xSTWe8Ds/F82X/xJ6ofoz+VOzH/Ov8p/Eq
/qv8afhlfn3+XPp+/kz9JX6FGCsehp+IbwLvibsR3ivLgkeqn8A/i5PxkuOG
+ELcBfBi3Ft9X9lBunic4/rv+fnjfMKdcAo1nfBa/AWeJ/s79lT1o/UnY2/n
/8IvH3cc/iv8urx6cTbSM2K/j/HpH49vRL9Lv4c3Qj4+1jdOFvNH95IV0+eL
98afa3PxX7GX8ldo/wdNTmcx
          "]]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl2GW4VWUXheGDKEiJSqm0dFoo3aGYSDeKdEgpLdJdChalEtLdbWIAAhJK
S4PSoZT43fPzx7zW84wx9+G4WXu9G7M37VD9zUQJCQlX7k5IiOusxAkJte9K
SKhOVvDXzFNGlKBKsJZwj1lpXjc3hLOVM+2nNHlwEXkffMw1hT657CPXUXwr
3qwbxB93LeNaRjbVNYm+Dq4hr8VX8dL+wPOyc7J9eJy8qfym6xz5LPkG+ds8
FX4b58V5dUfxZPy0/V9c+8netbNQ3pwfl9fHKXEK3SH8MR4tz4x/lm2xvxUP
lj+Bh+OyuKzuJJ6Gk9qf7VpXVtPOZ/LafLW8DL4gPy/fj8fL35Dfcp0rny3f
KO/K78NdcT6cT3cMT8HP2N/p2l/W184ieQt+Qt4Ap8IpdYfxJ3iMPAveJttq
/2c8RP4kHoHL4XK6U3g6vtf+HNd6slp2PpfX4WvkZfFF+QV5M35bPo/P4V/q
uvHUuBvOj/PritrbhQfgfrrFupb8pLwhvi/+rnRjeVa+Hf9sbxseqnsKj8Tl
cXldMntzcX1cWzdVV5evlZfDl+QX5c35P/L5fC7/Sted34+74wK4gK6Yvd14
IO6vW6JrxU/JG+HU8Xehe49n4zvwNnvb8TBdETwKV8AVdMntzcMNcB3dNF09
vk5eHl+WX5K34HfkC/g8/rWuB38A98AFcUFdcXt78CA8QLdU15qfljfG98d7
rnufZ+e/4O32duDhcb/j0bgirqhLYW8+bojr6qbr6vP18gr4ivyyvCX/V76Q
z+ff6HryB3FPXAgX0pWw9ysejAfqluna8DPyJviBeM914/ijfCfeYe8XPCLu
ZzwGV8KVdCntLcCNcD3dDF0DvkFeEV+VX5G3SvjvAbSIL+Df4l720uBeuDAu
rCtp7Tc8BA/SLde15X/E8ww/GO+5bjzPwXfhX+wVNWN5ZX1lWSr9QtwY19d9
oWvIN8or4Wvyq/LWPBFfzBfy73Bve2lxb/wYfkxXyt5ePBQPjuerrh3/M56l
OE2817oPeE6+G++0V8y8x6voq8ju0y/CTXCD+Bzyyvq/+DXeJp7XfAlfxNOZ
d/jj8cyVldbvw8PwEN1Z3lSfNt5L2Yc8F9+Dd+mLm/f5s/pnZan1i/FruGF8
zngV/d/8L942zgq+lC/m6U0f/kQ8Q2Vl9PvxcDxUd46/oU8X71mcFTw3/xXv
1pcw4/hz+udk9+uX4Ndxo/gc8Wf11/nfvF3cJnwZX8IzmLKyA14zQjaMn+fN
7KSXpZN9zPPw3/AefUnzgGxpnDeyxvF54M/ZucGv8/ZxFvLlfCl/yJSTHfSa
kbLh/AJvbieDLL3sE56X78W/6kuZB2XL4lyQNYn7mle1c5Pf4G/yJHwFX8Yf
NuVlh+JMlY3gF3kLOw/JMsgm8Hx8H/5NX9qkkS3XN5O9Fvcp72CS2lspWy57
xFSQHY5zUDaSX+ITTX57+2V749w2aWUr7DWXvc438Y7mXnurZCtkGU1F2e9x
LslG8ct8kkkX3yPkLeRN5d/zTvHZMkfkY+Wj5Vf4ZJPerJK3lL8h/4F3jnvf
ZDCrda10zXQ/8i5xX5qj8vfkY+RX+RTzkFkjby1vLv+Jv2WS+d1Xy1bKMpln
ZcfsvR/nFb/GW9p5WPaQ7FNegB/A++I+i78f2Vp9G1kLvpk/b+cWvxnfUXhy
voavivcNv2M/M34XP4nPx1V/3PXTuO+95rjrONmfsvfsrnRtL7sYn319K9dH
+Ln4/ez97jqBX3b9TF/Q9aD8bPw9ev1O15H6S/GdgI93rcovxNXeadcZ/BGv
XefaVtbS3kx5I75F/gK+Lb8V313i+x5fy1fzLKYvfyrOdFlV/Qk8Ps4u3d/8
c1PIziHZgbiv456RrbfXTtYqvn/xbvEemkxmg669rnV8t+Hd4/cwJ+UfxLkj
v86nmsxmo/xNeZv4jsF7mBfNKfmHcQ7Ib/BpJov5Ut5B3jbOfN7TpPQ7rpOt
kWU1L8lO2/sontf8Jp9uspqv5B3l7eJM5r1MKq9fL1sry2Zelp2x93E8b/kt
PsMUtndYdjA+h7Er+9peJ1n7OEN5b3OfvQ2ydbLs5hXZH/Y+iecnv82/MI/Z
+112KD6HsSv7xl5nWXzx3xnvhZ1/+O04J3hqvpGv54+aarI/vWZCPCf5P7y1
nYxxb8hm8sf5EXxYXyleJ/tW30XWge/iL9m5w/+J84Dfz7/kG3gO86rsrNdM
jOckv8Pb2MkkyyibxZ/gR+Pe1leO18m+078l68h385ft/MvvxOeJP8C/4ht5
TlNdds5rJsVzkv/L29rJLMskm82f5MfwEX0V8wF/Xv+8LKd+E34bd9Lt4a/c
nfD/fyD9G/c8fJB/rf+S5zL9eJH47iiroT+PJ+OJuviHVzt9lngGyOaInuLH
8dF4BpkP+Qv6F2S59N/jrriz7ldeTZ9IFv9Q6+eShn+Dv9LnNv350/HdUFZT
fwFPwZN0ieIs02eVZZHN1RfhJ/Ax3XPmI/6i/kVZbv0PuBvuovuNv6q/S5ZI
1p+n5d/ir/V5zAD+THz3k9XSX8Sf4sm6u+KM02eTZZXN0z/NT8bzT1fVfMxf
0r8ky6P/EXfHb+lm6RrzvfLqODG+Szcgzhj+Hf4mzhfcR5cXD8RFcVFdbXuX
8Gd4im6V7k2eGHfA2XE23Xx7z/BT+ETc03hU3BP4E/wyflmX195PuAd+Wzdb
14Tvk9fAd8fP1g2MM41vwt/GeYbf1eXDg3AxXExXx95l/HmcN7rVug78btwR
P4qz6xbYK8pP45PxWcCj457BE/Ar+BVdPnubcU/cVTdH9xrfL6+J74mfrRsU
5yr/Hn8XZyruq8uPB+PiuLiurr0reCr+TLdG15HfgzvhHPhR3UJ7xfgZfCo+
N3hM3FN4Iq6Gq+ny29uCe+Fuurm61/kBeS2cJH62bnCc4/wHvCnOcNxPVwAP
wSVwCV09e1fxNPy5bq2uE0+CO+OcOIdukb3i/I84++JzhcfGPYcn4Vfxq7oC
9rbi3ri7bp6uKT8or42Txs/WDeEP8x/x9/E9APfXFcRDcUlcUlff3jU8HU/V
rdN15klxF5wL59QttleC/4nPxOcuvgfEPYcn4+q4uq6gvZ/xO7iHbr7uDX5I
XgffGz87zlv8AR4qfwT/JPvB/hY8QF4ID8OlcKm45+N7BG5g/y/XGbJpdtbL
u/B78Vs4N84Vz048ES+xXxKflf1hZy9+P+5FPAXXwDXivwl/EX+u/W2ufWQ9
7SyQN+OH5XVxsviz4ozEH+Jh8ox4s+zH+GzLCruWdi0df+euDeM8xNPjd+TJ
4rnkmjuega5L44yLs87UlBWOcxv/7lrPz04er5EPj+8gfAv+Sf+YaST7Wz9T
NoMnN8vi7DXb5e/Ke8uO8BGmcZyXcZaZHfq++nf0R/lI08Rcl8+SfyFPYZbL
Svlzz8nOxllpPuU17dWK9xXPTPzf/8d70u7/ADODfmc=
          "]]},
        Annotation[#, "Charting`Private`Tag$16692#1"]& ]}}], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Heads\"", TraditionalForm], 
    FormBox["\"Frequency N(H)/N\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Binned Data for 200 Simulations of 100 Coin Flips\"", TraditionalForm],
  PlotRange->{{0, 100.}, {0, 0.11}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487447595106573`*^9, 3.8487447609987373`*^9}},
 CellLabel->
  "Out[306]=",ExpressionUUID->"be6578c5-c9b0-4118-b201-f33ee4d0e56f"],

Cell[BoxData["\<\"Part 2 -- Random Walk in 1D:\"\>"], "Print",
 CellChangeTimes->{{3.848744759144863*^9, 3.8487447610143604`*^9}},
 CellLabel->
  "During evaluation of \
In[274]:=",ExpressionUUID->"c92aa316-c286-47f1-96df-c93dc4b0be94"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdlMtKA0EQRRtXWWaRRRYuNIiIiPh+a9pHfEWjeWjiVnTtL9Sf2Z/kJ6hM
3YE6DTPF4XCrp5maWXz/Gn3OpZQ+/q7/Wq2fbqwpp7AaOfomfAu+DT8v/13V
BflSlY5zw3nJuem8DL8Cv+rccl5zbjuvw28gv4n+W/Db8Dvwu/B7zjrfvrPO
fwB/iPwR/DH8Cfwp/Bl8F/vn6C3Dn8tXy8R6vxfyVTWx5uTSq8+JiTUnV/Bi
5XvwPfhreLH633j1OTSx5vDWq8+hiTte7+DFyt+jv1j79/F8ffgH5MXq/wgv
Vn4AP4B/gher/3P0Wex5gy/waYj8MHoT+/kLfBpFn8X+fk3s81XEmr9x9Hkc
vdW+WgU+TZCfRG/wRaz5e0FerDx8gU+v8fmy2L8/gy/waYr8NHqrfanuYv0f
Zs7+/8qz6E2sPHx6q/O/4F2JGw==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(th\\)]\\) Step\"", 
     TraditionalForm], 
    FormBox["\"D(n)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"1D Random Walk\"", TraditionalForm],
  PlotRange->{{0, 100.}, {-6., 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8487447595106573`*^9, 3.848744761114623*^9}},
 CellLabel->
  "Out[314]=",ExpressionUUID->"05912a62-4323-4c7e-84bd-3702bde0b019"],

Cell[BoxData["\<\"Extra Credit -- Random walk in 2D:\"\>"], "Print",
 CellChangeTimes->{{3.848744759144863*^9, 3.848744761130246*^9}},
 CellLabel->
  "During evaluation of \
In[274]:=",ExpressionUUID->"0c889ce2-e505-4bc9-86bb-669338f308c6"],

Cell[BoxData[
 GraphicsBox[{LineBox[CompressedData["
1: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
    "]], 
   {PointSize[0.02], 
    PointBox[{{
     0.8712984380138348, -0.49075353479588074`}, {-13.552721790774696`, \
-16.616267258703996`}}]}},
  AspectRatio->Automatic,
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"x-position (\\!\\(\\*SubscriptBox[\\(cos\[Theta]\\), \\(n - 1\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(cos\[Theta]\\), \\(n\\)]\\))\"", TraditionalForm], 
    FormBox[
    "\"y-position (\\!\\(\\*SubscriptBox[\\(sin\[Theta]\\), \\(n - 1\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(sin\[Theta]\\), \\(n\\)]\\))\"", TraditionalForm]},
  ImageSize->Large,
  PlotLabel->FormBox["\"2D Random Walk\"", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.8487447595106573`*^9, 3.848744761130246*^9}},
 CellLabel->
  "Out[318]=",ExpressionUUID->"f6978d21-4951-4618-bee7-48f1e5442151"]
}, Open  ]]
},
WindowSize->{960, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 43900, 1038, 4099, "Code",ExpressionUUID->"7b38784e-8abb-46ba-be4c-d7a80859c6d9"],
Cell[44483, 1062, 230, 4, 22, "Print",ExpressionUUID->"fe47ea0e-c713-4250-9994-96ebe2e07653"],
Cell[44716, 1068, 19986, 347, 342, "Output",ExpressionUUID->"71d0345e-2c67-4833-88db-34b0bac75e78"],
Cell[64705, 1417, 35635, 605, 342, "Output",ExpressionUUID->"be6578c5-c9b0-4118-b201-f33ee4d0e56f"],
Cell[100343, 2024, 236, 4, 22, "Print",ExpressionUUID->"c92aa316-c286-47f1-96df-c93dc4b0be94"],
Cell[100582, 2030, 1948, 50, 374, "Output",ExpressionUUID->"05912a62-4323-4c7e-84bd-3702bde0b019"],
Cell[102533, 2082, 240, 4, 22, "Print",ExpressionUUID->"0c889ce2-e505-4bc9-86bb-669338f308c6"],
Cell[102776, 2088, 3034, 56, 499, "Output",ExpressionUUID->"f6978d21-4951-4618-bee7-48f1e5442151"]
}, Open  ]]
}
]
*)

